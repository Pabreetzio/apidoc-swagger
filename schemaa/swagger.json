{
  "swagger": "2.0",
  "info": {
    "title": "apidoc-swagger",
    "version": "0.3.2",
    "description": "Convert api doc json to swagger json"
  },
  "paths": {
    "/v1/accounts/automation": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Gets temporary registration data for a given device.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Device for which automation account info is being requested."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "Success-Response:": {
                "value": "{\n   \"accountName\": \"JohnSmithC4623a2f11\",\n   \"deviceId\": \"622f8b20f983a575f62d5077\",\n   \"email\": \"example@example.com\",\n   \"password\": \"123456\"\n}"
              }
            }
          }
        }
      }
    },
    "/v1/accounts/automation/register": {
      "post": {
        "tags": ["Accounts"],
        "summary": "Creates an automated account for a given device.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Creates an automated account for a given device.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountsAutomationRegisterRequest"
            }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/aua/status": {
      "get": {
        "tags": ["Autonomic_Amplifier_Commands"],
        "summary": "Instructs the device to return its current status.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/AutonomicAmplifierStatusGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t\t\"deviceId\": \"5cdad7a3b30fc2082deb94af\",\n\t\t\t\"dateTime\": \"2019-06-12T05:16:08+05:00\",\n\t\t\t\"uptime\": \"28 Day(s) 10Hr 28Min\",\n\t\t\t\"temperature\": \"24Â°C\",\n\t\t\t\"ampOverTemps\": 0,\n\t\t\t\"freeRAM\": 0,\n\t\t\t\"freeConnections\": 0,\n     }"
              }
            }
          }
        }
      }
    },
    "/v1/base/config": {
      "get": {
        "tags": ["Base_Commands"],
        "summary": "Get the current device configuration",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/BaseConfigGit" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\"deviceId\": \"54cf37570642205944000899\",\n\t\"dateTime\": \"2013-09-10T08:15:30-05:00\""
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Base_Commands"],
        "summary": "Upload and apply the device configuration",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Upload and apply the device configuration",
            "required": true,
            "schema": { "$ref": "#/definitions/BaseConfigPutRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/BaseConfigPut" }
          }
        }
      }
    },
    "/v1/base/auth/credentials": {
      "put": {
        "tags": ["Base_Commands"],
        "summary": "Set user authentication credentials",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Set user authentication credentials",
            "required": true,
            "schema": { "$ref": "#/definitions/BaseConfigPutRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/BaseConfigPut" }
          }
        }
      }
    },
    "/v1/base/config/reset": {
      "post": {
        "tags": ["Base_Commands"],
        "summary": "Resets device to factory defaults",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Resets device to factory defaults",
            "required": true,
            "schema": { "$ref": "#/definitions/BaseConfigResetPostRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/BaseConfigResetPost" }
          }
        }
      }
    },
    "/v1/base/firmware": {
      "get": {
        "tags": ["Base_Commands"],
        "summary": "Returns firmware information",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/BaseFirmwareGit" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t\t\"deviceId\": \"54cf37570642205944000899\",\n\t\t\t\"dateTime\": \"2013-09-10T08:15:30-05:00\",\n         \"version\": \"1.0.0.0\",\n         \"buildDate\": \"2021-3-1\",\n         \"buildNumber\": \"1\",\n         \"applyDate\": \"2021-3-3\",\n         \"imageName\": \"firmware.bin\",\n         \"size\": 4509751\n\t\t}"
              }
            }
          }
        }
      }
    },
    "/v1/base": {
      "put": {
        "tags": ["Base_Commands"],
        "summary": "Sets base device level information",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Sets base device level information",
            "required": true,
            "schema": { "$ref": "#/definitions/BasePutRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/BasePut" }
          }
        }
      },
      "get": {
        "tags": ["Base_Commands"],
        "summary": "Returns base level device information",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/BaseGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t\t\"deviceId\": \"54cf37570642205944000899\",\n\t\t\t\"dateTime\": \"2013-09-10T08:15:30-05:00\",\n         \"mac\": \"D4:6A:91:FF:FF:FF\",\n         \"service_tag\": \"ST11111111111111\",\n         \"model\": \"OVRC-100-HUB\",\n         \"version\": \"1.0.0.0\",\n         \"name\": \"Office Hub\"\n\t\t}"
              }
            }
          }
        }
      }
    },
    "/v1/base/hwcon/reboot": {
      "post": {
        "tags": ["Base_Commands"],
        "summary": "Reboots device",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Reboots device",
            "required": true,
            "schema": { "$ref": "#/definitions/BaseHwconRebootPostRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/BaseHwconRebootPost" }
          }
        }
      }
    },
    "/v1/base/info": {
      "get": {
        "tags": ["Base_Commands"],
        "summary": "Returns hardware information",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/BaseInfoGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n         \t\t\"serial\": \"12345678\",\n        \t\t\"service_tag\": \"ST11111111111111\",\n         \t\t\"model\": \"OVRC-100-HUB\",\n        \t\t\"platform\": \"FAKE\"\n\t\t}"
              }
            }
          }
        }
      }
    },
    "/v1/base/lan": {
      "get": {
        "tags": ["Base_Commands"],
        "summary": "Returns lan information",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/BaseLanGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n        \"deviceName\": \"Office Hub\",\n        \"macAddress\": \"FF:FF:FF:FF:FF:FF\",\n        \"dhcpEnabled\": true,\n        \"deviceIpAddress\": \"192.168.1.100\",\n        \"deviceSubnetMask\": \"255.255.252.0\",\n        \"deviceDefaultGateway\": \"192.168.24.1\",\n        \"staticdns\": true,\n        \"dnsServer1\": \"8.8.8.8\",\n        \"dnsServer2\": \"8.8.8.8\"\n     }"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Base_Commands"],
        "summary": "Sets lan information",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Sets lan information",
            "required": true,
            "schema": { "$ref": "#/definitions/BaseLanPutRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/BaseLanPut" }
          }
        }
      }
    },
    "/v1/base/log/debug": {
      "delete": {
        "tags": ["Base_Commands"],
        "summary": "Delete the debug log",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Delete the debug log",
            "required": true,
            "schema": { "$ref": "#/definitions/BaseLogDebugDeleteRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/BaseLogDebugDelete" }
          }
        }
      },
      "get": {
        "tags": ["Base_Commands"],
        "summary": "Get the debug log",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/BaseLogDebugGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\"result\": \"Log Generated: ...\"\n}"
              }
            }
          }
        }
      }
    },
    "/v1/base/log": {
      "delete": {
        "tags": ["Base_Commands"],
        "summary": "Delete both debug and error logs",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Delete both debug and error logs",
            "required": true,
            "schema": { "$ref": "#/definitions/BaseLogDeleteRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/BaseLogDelete" }
          }
        }
      },
      "get": {
        "tags": ["Base_Commands"],
        "summary": "Get the combined debug and error log",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/BaseLogGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\"deviceId\": \"54cf37570642205944000899\",\n\t\"dateTime\": \"2013-09-10T08:15:30-05:00\",\n\t\"result\": \"Log Generated: ...\"\n}"
              }
            }
          }
        }
      }
    },
    "/v1/base/log/download": {
      "get": {
        "tags": ["Base_Commands"],
        "summary": "Download the combined debug and error log",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/BaseLogDownloadGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\"deviceId\": \"54cf37570642205944000899\",\n\t\"dateTime\": \"2013-09-10T08:15:30-05:00\",\n\t\"result\": \"Log Generated: ...\"\n}"
              }
            }
          }
        }
      }
    },
    "/v1/base/log/error": {
      "delete": {
        "tags": ["Base_Commands"],
        "summary": "Delete the error log",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Delete the error log",
            "required": true,
            "schema": { "$ref": "#/definitions/BaseLogErrorDeleteRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/BaseLogErrorDelete" }
          }
        }
      },
      "get": {
        "tags": ["Base_Commands"],
        "summary": "Get the error log",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/BaseLogErrorGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\"deviceId\": \"54cf37570642205944000899\",\n\t\"dateTime\": \"2013-09-10T08:15:30-05:00\",\n\t\"result\": \"Log Generated: ...\"\n}"
              }
            }
          }
        }
      }
    },
    "/v1/base/stats": {
      "get": {
        "tags": ["Base_Commands"],
        "summary": "Returns hardware statistical information",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/BaseStatsGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t  \"uptime\": 30,\n\t\t  \"memFree\": 100,\n       \"memTotal\": 200,\n       \"cpu\": 20\n     }"
              }
            }
          }
        }
      }
    },
    "/v1/base/time": {
      "get": {
        "tags": ["Base_Commands"],
        "summary": "Returns time information",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/BaseTimeGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n       \"time\": 1614791480,\n       \"timezone\": {\n         \"offset\": -5\n       },\n       \"dst\": {\n         \"enabled\": true,\n         \"start\": {\n           \"month\": 0,\n           \"day\": 0,\n           \"sequence\": 0,\n           \"time\": 0\n         },\n         \"end\": {\n           \"month\": 0,\n           \"day\": 0,\n           \"sequence\": 0,\n           \"time\": 0\n         }\n       }\n     }"
              }
            }
          }
        }
      }
    },
    "/v1/camera/status": {
      "get": {
        "tags": ["Camera_Commands"],
        "summary": "Instructs the camera to return its current status.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/CameraStatusGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t\t\"deviceId\": \"5cdad7a3b30fc2082deb94af\",\n\t\t\t\"dateTime\": \"2008-09-15T15:53:00+05:00\",\n\t\t\t\"health\": \"GOOD\",\n\t\t\t\"streaming\": \"NO\"\n     }"
              }
            }
          }
        }
      }
    },
    "/v1/clare/fusionpro": {
      "get": {
        "tags": ["Clare_Controls"],
        "summary": "Instructs the device to return a custom FusionPro URL specific to this device.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/ClareFusionProUrlGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\"deviceId\": \"5e4d91cdb7ab52a3ccca0ba3\",\n\t\"url\": \"https://fusionpro.clarecontrols.com/redirectTo?page=%3Aaccounts%3Aedit&uuid=58:67:7F:9A:43:CA.000\"\n}"
              }
            }
          }
        }
      }
    },
    "/v1/cloudsettings/ssid/getForceImportDate": {
      "get": {
        "tags": ["CloudSettings"],
        "summary": "Gets Force Import Date and  for location",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "locationId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of location for which one would like to get SSIDs"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/GetForceImportDate" },
            "examples": {
              "Success-Response:": {
                "value": "{\n        \"response\": [\n            {\n \t\t\t\t\"forceImportDate\": \"2021-12-13T00:00:00Z\",\n \t\t\t\t\"titleText\": \"Import Required\",\n \t\t\t\t\"bannerText\": \"New Features with Wi-Fi Management!<br /><br />&bull;\n\t\t\t\t\t\t\t\tGuest Network Configuration<br />&bull;VLAN configuration<br /><br />\n\t\t\t\t\t\t\t\tWe added more tools and capabilities for Wi-Fi Management.\n\t\t\t\t\t\t\t\tThe OvrC Wi-Fi Management solution now allows the user to set the\n\t\t\t\t\t\t\t\twireless guest network and VLAN configurations.\"\n            }\n        ]\n     }"
              }
            }
          }
        }
      }
    },
    "/v1/cloudsettings/guestssid/ana": {
      "post": {
        "tags": ["CloudSettings"],
        "summary": "Saves Araknis Device Guest Settings to a template",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Saves Araknis Device Guest Settings to a template",
            "required": true,
            "schema": { "$ref": "#/definitions/GuestSsidAnaSaveRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      },
      "put": {
        "tags": ["CloudSettings"],
        "summary": "Updates Araknis Device Settings on a template",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Updates Araknis Device Settings on a template",
            "required": true,
            "schema": { "$ref": "#/definitions/GuestSsidAnaUpdateRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/cloudsettings/guestssid/ax": {
      "post": {
        "tags": ["CloudSettings"],
        "summary": "Saves AX Device Guest SSID to a template",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Saves AX Device Guest SSID to a template",
            "required": true,
            "schema": { "$ref": "#/definitions/GuestSsidAxSaveRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      },
      "put": {
        "tags": ["CloudSettings"],
        "summary": "Updates AX Guest SSID Settings on a template",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Updates AX Guest SSID Settings on a template",
            "required": true,
            "schema": { "$ref": "#/definitions/GuestSsidAxUpdateRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/cloudsettings/radios/ana": {
      "put": {
        "tags": ["CloudSettings"],
        "summary": "Set the pending Wireless Radio Settings.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Set the pending Wireless Radio Settings.",
            "required": true,
            "schema": { "$ref": "#/definitions/RadiosAnaUpdateRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/cloudsettings/radios/ax": {
      "put": {
        "tags": ["CloudSettings"],
        "summary": "Set the pending Wireless Radio Settings for AX devices.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Set the pending Wireless Radio Settings for AX devices.",
            "required": true,
            "schema": { "$ref": "#/definitions/RadiosAxUpdateRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/cloudsettings/radios": {
      "get": {
        "tags": ["CloudSettings"],
        "summary": "Retrieves all Wireless Radio Settings from a location.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "locationId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The location ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/RadiosGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n    \"items\": [\n        {\n            \"cloudRadioTemplateId\": \"5eb07995af2f787cdbd001cd\",\n            \"locationId\": \"5e7a3976d5e6b5571c149d1b\",\n            \"deviceName\": \"Pakedge WA-2200\",\n            \"deviceModel\": \"WA-2200\",\n            \"connected\": false,\n            \"lastSeenTime\": \"2020-05-08T14:20:26.418-04:00\",\n            \"isSupported\": false,\n            \"supportedReason\": \"Firmware not supported\",\n            \"hasWebConnectEnabled\": false,\n            \"deviceFamily\": \"WA\",\n            \"deviceId\": \"5e9dafbf75e16007de9cb18e\",\n            \"deviceState\": \"SYNCED\",\n            \"deviceResponse\": {\n                \"band24\": \"success\",\n                \"band5\": \"success\"\n            },\n            \"currentSettingsPewWa\": {\n                \"beacon_interval\": {\n                    \"band24\": \"\",\n                    \"band5\": \"\"\n                },\n                \"multicast_ench\": {\n                    \"band24\": \"\",\n                    \"band5\": \"\"\n                },\n                \"rssi_reject\": {\n                    \"band24\": \"\",\n                    \"band5\": \"\"\n                },\n                \"rssi_value\": {\n                    \"band24\": \"\",\n                    \"band5\": \"\"\n                },\n                \"rts_cts\": {\n                    \"band24\": \"\",\n                    \"band5\": \"\"\n                },\n                \"protection_mode\": {\n                    \"band24\": \"\",\n                    \"band5\": \"\"\n                },\n                \"bss\": {\n                    \"band24\": \"\",\n                    \"band5\": \"\"\n                },\n                \"transmit_power\": {\n                    \"band24\": \"\",\n                    \"band5\": \"\"\n                },\n                \"fastRoamingEnabled\": true,\n                \"available_channels\": {\n                    \"band24\": [\n                        \"1\",\n                        \"11\"\n                    ],\n                    \"band5\": [\n                        \"36\",\n                        \"161\",\n                        \"165\"\n                    ]\n                },\n                \"available_countries\": [\n                    \"United States\"\n                ],\n                \"available_country_codes\": [\n                    \"US\"\n                ],\n                \"available_txpowers\": {\n                    \"band24\": [\n                        \"1 dBm (2 mW)\",\n                        \"25 dBm (317 mW)\",\n                        \"maximum\"\n                    ],\n                    \"band5\": [\n                        \"1 dBm (2 mW)\",\n                        \"25 dBm (317 mW)\",\n                        \"maximum\"\n                    ]\n                },\n                \"bandsteering\": \"off\",\n                \"channel\": {\n                    \"band24\": \"auto\",\n                    \"band5\": \"auto\"\n                },\n                \"channel_actual\": {\n                    \"band24\": \"11\",\n                    \"band5\": \"149\"\n                },\n                \"channel_width\": {\n                    \"band24\": \"HT20\",\n                    \"band5\": \"HT80\"\n                },\n                \"country_code\": \"US\",\n                \"dfs\": \"off\",\n                \"enabled\": {\n                    \"band24\": true,\n                    \"band5\": true\n                },\n                \"operation_mode\": {\n                    \"band24\": \"ap\",\n                    \"band5\": \"ap\"\n                },\n                \"wireless_mode\": {\n                    \"band24\": \"ng\",\n                    \"band5\": \"anaac\"\n                }\n            },\n            \"deleted\": false,\n            \"history\": {\n                \"created\": {\n                    \"by\": \"asd\",\n                    \"at\": \"2020-05-04T16:22:45.11-04:00\"\n                },\n                \"lastUpdated\": {\n                    \"at\": \"0001-01-01T00:00:00Z\"\n                },\n                \"deleted\": {\n                    \"at\": \"0001-01-01T00:00:00Z\"\n                }\n            },\n            \"metadata\": {\n                \"isInternational\": false,\n\t\t\t\t\"isChannelWidthSupported\": true,\n                \"countries\": [\n                    {\n                        \"displayName\": \"United States\",\n                        \"requestValue\": \"US\"\n                    }\n                ],\n                \"band24\": {\n                    \"available_wirelessmodes\": [\n                        {\n                            \"displayName\": \"802.11 B\",\n                            \"requestValue\": \"b\"\n                        },\n                        {\n                            \"displayName\": \"802.11 G\",\n                            \"requestValue\": \"g\"\n                        },\n                        {\n                            \"displayName\": \"802.11 N\",\n                            \"requestValue\": \"n\"\n                        },\n                        {\n                            \"displayName\": \"802.11 B/G\",\n                            \"requestValue\": \"bg\"\n                        },\n                        {\n                            \"displayName\": \"802.11 G/N\",\n                            \"requestValue\": \"ng\"\n                        },\n                        {\n                            \"displayName\": \"802.11 B/G/N\",\n                            \"requestValue\": \"ngb\"\n                        }\n                    ],\n                    \"available_bandwidths\": {\n                        \"b\": [\n                            {\n                                \"displayName\": \"HT 20 MHz\",\n                                \"requestValue\": \"HT20\"\n                            }\n                        ],\n                        \"bg\": [\n                            {\n                                \"displayName\": \"HT 20 MHz\",\n                                \"requestValue\": \"HT20\"\n                            }\n                        ],\n                        \"g\": [\n                            {\n                                \"displayName\": \"HT 20 MHz\",\n                                \"requestValue\": \"HT20\"\n                            }\n                        ],\n                        \"n\": [\n                            {\n                                \"displayName\": \"HT 20 MHz\",\n                                \"requestValue\": \"HT20\"\n                            },\n                            {\n                                \"displayName\": \"HT 40 MHz\",\n                                \"requestValue\": \"HT40\"\n                            }\n                        ],\n                        \"ng\": [\n                            {\n                                \"displayName\": \"HT 20 MHz\",\n                                \"requestValue\": \"HT20\"\n                            },\n                            {\n                                \"displayName\": \"HT 40 MHz\",\n                                \"requestValue\": \"HT40\"\n                            }\n                        ],\n                        \"ngb\": [\n                            {\n                                \"displayName\": \"HT 20 MHz\",\n                                \"requestValue\": \"HT20\"\n                            },\n                            {\n                                \"displayName\": \"HT 40 MHz\",\n                                \"requestValue\": \"HT40\"\n                            }\n                        ]\n                    },\n                    \"available_channels\": {\n                        \"HT20\": {\n                            \"US\": {\n                                \"STANDARD\": [\n                                    {\n                                        \"displayName\": \"Auto\",\n                                        \"requestValue\": 0\n                                    },\n                                    {\n                                        \"displayName\": \"1\",\n                                        \"requestValue\": 1\n                                    },\n                                    {\n                                        \"displayName\": \"2\",\n                                        \"requestValue\": 2\n                                    },\n                                    {\n                                        \"displayName\": \"3\",\n                                        \"requestValue\": 3\n                                    },\n                                    {\n                                        \"displayName\": \"4\",\n                                        \"requestValue\": 4\n                                    },\n                                    {\n                                        \"displayName\": \"5\",\n                                        \"requestValue\": 5\n                                    },\n                                    {\n                                        \"displayName\": \"6\",\n                                        \"requestValue\": 6\n                                    },\n                                    {\n                                        \"displayName\": \"7\",\n                                        \"requestValue\": 7\n                                    },\n                                    {\n                                        \"displayName\": \"8\",\n                                        \"requestValue\": 8\n                                    },\n                                    {\n                                        \"displayName\": \"9\",\n                                        \"requestValue\": 9\n                                    },\n                                    {\n                                        \"displayName\": \"10\",\n                                        \"requestValue\": 10\n                                    },\n                                    {\n                                        \"displayName\": \"11\",\n                                        \"requestValue\": 11\n                                    }\n                                ]\n                            }\n                        },\n                        \"HT40\": {\n                            \"US\": {\n                                \"STANDARD\": [\n                                    {\n                                        \"displayName\": \"Auto\",\n                                        \"requestValue\": 0\n                                    },\n                                    {\n                                        \"displayName\": \"1\",\n                                        \"requestValue\": 1\n                                    },\n                                    {\n                                        \"displayName\": \"2\",\n                                        \"requestValue\": 2\n                                    },\n                                    {\n                                        \"displayName\": \"3\",\n                                        \"requestValue\": 3\n                                    },\n                                    {\n                                        \"displayName\": \"4\",\n                                        \"requestValue\": 4\n                                    },\n                                    {\n                                        \"displayName\": \"5\",\n                                        \"requestValue\": 5\n                                    },\n                                    {\n                                        \"displayName\": \"6\",\n                                        \"requestValue\": 6\n                                    },\n                                    {\n                                        \"displayName\": \"7\",\n                                        \"requestValue\": 7\n                                    },\n                                    {\n                                        \"displayName\": \"8\",\n                                        \"requestValue\": 8\n                                    },\n                                    {\n                                        \"displayName\": \"9\",\n                                        \"requestValue\": 9\n                                    },\n                                    {\n                                        \"displayName\": \"10\",\n                                        \"requestValue\": 10\n                                    },\n                                    {\n                                        \"displayName\": \"11\",\n                                        \"requestValue\": 11\n                                    }\n                                ]\n                            }\n                        },\n                        \"HT80\": {\n                            \"US\": {\n                                \"STANDARD\": [\n                                    {\n                                        \"displayName\": \"Auto\",\n                                        \"requestValue\": 0\n                                    },\n                                    {\n                                        \"displayName\": \"1\",\n                                        \"requestValue\": 1\n                                    },\n                                    {\n                                        \"displayName\": \"2\",\n                                        \"requestValue\": 2\n                                    },\n                                    {\n                                        \"displayName\": \"3\",\n                                        \"requestValue\": 3\n                                    },\n                                    {\n                                        \"displayName\": \"4\",\n                                        \"requestValue\": 4\n                                    },\n                                    {\n                                        \"displayName\": \"5\",\n                                        \"requestValue\": 5\n                                    },\n                                    {\n                                        \"displayName\": \"6\",\n                                        \"requestValue\": 6\n                                    },\n                                    {\n                                        \"displayName\": \"7\",\n                                        \"requestValue\": 7\n                                    },\n                                    {\n                                        \"displayName\": \"8\",\n                                        \"requestValue\": 8\n                                    },\n                                    {\n                                        \"displayName\": \"9\",\n                                        \"requestValue\": 9\n                                    },\n                                    {\n                                        \"displayName\": \"10\",\n                                        \"requestValue\": 10\n                                    },\n                                    {\n                                        \"displayName\": \"11\",\n                                        \"requestValue\": 11\n                                    }\n                                ]\n                            }\n                        }\n                    },\n                    \"available_transmit_power\": {\n                        \"US\": {\n                            \"STANDARD\": [\n                                {\n                                    \"displayName\": \"25 dBm (317 mW)\",\n                                    \"requestValue\": 25\n                                },\n                                {\n                                    \"displayName\": \"24 dBm (252 mW)\",\n                                    \"requestValue\": 24\n                                },\n                                {\n                                    \"displayName\": \"23 dBm (200 mW)\",\n                                    \"requestValue\": 23\n                                },\n                                {\n                                    \"displayName\": \"22 dBm (159 mW)\",\n                                    \"requestValue\": 22\n                                },\n                                {\n                                    \"displayName\": \"21 dBm (126 mW)\",\n                                    \"requestValue\": 21\n                                },\n                                {\n                                    \"displayName\": \"20 dBm (100 mW)\",\n                                    \"requestValue\": 20\n                                },\n                                {\n                                    \"displayName\": \"19 dBm (80 mW)\",\n                                    \"requestValue\": 19\n                                },\n                                {\n                                    \"displayName\": \"18 dBm (64 mW)\",\n                                    \"requestValue\": 18\n                                },\n                                {\n                                    \"displayName\": \"17 dBm (51 mW)\",\n                                    \"requestValue\": 17\n                                },\n                                {\n                                    \"displayName\": \"16 dBm (40 mW)\",\n                                    \"requestValue\": 16\n                                },\n                                {\n                                    \"displayName\": \"15 dBm (32 mW)\",\n                                    \"requestValue\": 15\n                                },\n                                {\n                                    \"displayName\": \"14 dBm (26 mW)\",\n                                    \"requestValue\": 14\n                                },\n                                {\n                                    \"displayName\": \"13 dBm (20 mW)\",\n                                    \"requestValue\": 13\n                                },\n                                {\n                                    \"displayName\": \"12 dBm (16 mW)\",\n                                    \"requestValue\": 12\n                                },\n                                {\n                                    \"displayName\": \"11 dBm (13 mW)\",\n                                    \"requestValue\": 11\n                                },\n                                {\n                                    \"displayName\": \"10 dBm (10 mW)\",\n                                    \"requestValue\": 10\n                                },\n                                {\n                                    \"displayName\": \"9 dBm (8 mW)\",\n                                    \"requestValue\": 9\n                                },\n                                {\n                                    \"displayName\": \"8 dBm (7 mW)\",\n                                    \"requestValue\": 8\n                                },\n                                {\n                                    \"displayName\": \"7 dBm (6 mW)\",\n                                    \"requestValue\": 7\n                                },\n                                {\n                                    \"displayName\": \"6 dBm (4 mW)\",\n                                    \"requestValue\": 6\n                                },\n                                {\n                                    \"displayName\": \"5 dBm (4 mW)\",\n                                    \"requestValue\": 5\n                                },\n                                {\n                                    \"displayName\": \"4 dBm (3 mW)\",\n                                    \"requestValue\": 4\n                                },\n                                {\n                                    \"displayName\": \"3 dBm (2 mW)\",\n                                    \"requestValue\": 3\n                                },\n                                {\n                                    \"displayName\": \"2 dBm (2 mW)\",\n                                    \"requestValue\": 2\n                                },\n                                {\n                                    \"displayName\": \"1 dBm (2 mW)\",\n                                    \"requestValue\": 1\n                                }\n                            ]\n                        }\n                    }\n                },\n                \"band5\": {\n                    \"available_wirelessmodes\": [\n                        {\n                            \"displayName\": \"802.11 A\",\n                            \"requestValue\": \"a\"\n                        },\n                        {\n                            \"displayName\": \"802.11 N\",\n                            \"requestValue\": \"n\"\n                        },\n                        {\n                            \"displayName\": \"802.11 AC\",\n                            \"requestValue\": \"ac\"\n                        },\n                        {\n                            \"displayName\": \"802.11 A/N\",\n                            \"requestValue\": \"ana\"\n                        },\n                        {\n                            \"displayName\": \"802.11 N/AC\",\n                            \"requestValue\": \"naac\"\n                        },\n                        {\n                            \"displayName\": \"802.11 A/N/AC\",\n                            \"requestValue\": \"anaac\"\n                        }\n                    ],\n                    \"available_bandwidths\": {\n                        \"a\": [\n                            {\n                                \"displayName\": \"HT 20 MHz\",\n                                \"requestValue\": \"HT20\"\n                            }\n                        ],\n                        \"ac\": [\n                            {\n                                \"displayName\": \"HT 20 MHz\",\n                                \"requestValue\": \"HT20\"\n                            },\n                            {\n                                \"displayName\": \"HT 40 MHz\",\n                                \"requestValue\": \"HT40\"\n                            },\n                            {\n                                \"displayName\": \"HT 80 MHz\",\n                                \"requestValue\": \"HT80\"\n                            }\n                        ],\n                        \"ana\": [\n                            {\n                                \"displayName\": \"HT 20 MHz\",\n                                \"requestValue\": \"HT20\"\n                            },\n                            {\n                                \"displayName\": \"HT 40 MHz\",\n                                \"requestValue\": \"HT40\"\n                            }\n                        ],\n                        \"anaac\": [\n                            {\n                                \"displayName\": \"HT 20 MHz\",\n                                \"requestValue\": \"HT20\"\n                            },\n                            {\n                                \"displayName\": \"HT 40 MHz\",\n                                \"requestValue\": \"HT40\"\n                            },\n                            {\n                                \"displayName\": \"HT 80 MHz\",\n                                \"requestValue\": \"HT80\"\n                            }\n                        ],\n                        \"n\": [\n                            {\n                                \"displayName\": \"HT 20 MHz\",\n                                \"requestValue\": \"HT20\"\n                            },\n                            {\n                                \"displayName\": \"HT 40 MHz\",\n                                \"requestValue\": \"HT40\"\n                            }\n                        ],\n                        \"naac\": [\n                            {\n                                \"displayName\": \"HT 20 MHz\",\n                                \"requestValue\": \"HT20\"\n                            },\n                            {\n                                \"displayName\": \"HT 40 MHz\",\n                                \"requestValue\": \"HT40\"\n                            },\n                            {\n                                \"displayName\": \"HT 80 MHz\",\n                                \"requestValue\": \"HT80\"\n                            }\n                        ]\n                    },\n                    \"available_channels\": {\n                        \"HT20\": {\n                            \"US\": {\n                                \"DFS\": [\n                                    {\n                                        \"displayName\": \"Auto\",\n                                        \"requestValue\": 0\n                                    },\n                                    {\n                                        \"displayName\": \"36\",\n                                        \"requestValue\": 36\n                                    },\n                                    {\n                                        \"displayName\": \"40\",\n                                        \"requestValue\": 40\n                                    },\n                                    {\n                                        \"displayName\": \"44\",\n                                        \"requestValue\": 44\n                                    },\n                                    {\n                                        \"displayName\": \"48\",\n                                        \"requestValue\": 48\n                                    },\n                                    {\n                                        \"displayName\": \"52\",\n                                        \"requestValue\": 52\n                                    },\n                                    {\n                                        \"displayName\": \"56\",\n                                        \"requestValue\": 56\n                                    },\n                                    {\n                                        \"displayName\": \"60\",\n                                        \"requestValue\": 60\n                                    },\n                                    {\n                                        \"displayName\": \"64\",\n                                        \"requestValue\": 64\n                                    },\n                                    {\n                                        \"displayName\": \"100\",\n                                        \"requestValue\": 100\n                                    },\n                                    {\n                                        \"displayName\": \"104\",\n                                        \"requestValue\": 104\n                                    },\n                                    {\n                                        \"displayName\": \"108\",\n                                        \"requestValue\": 108\n                                    },\n                                    {\n                                        \"displayName\": \"112\",\n                                        \"requestValue\": 112\n                                    },\n                                    {\n                                        \"displayName\": \"136\",\n                                        \"requestValue\": 136\n                                    },\n                                    {\n                                        \"displayName\": \"140\",\n                                        \"requestValue\": 140\n                                    }\n                                ],\n                                \"STANDARD\": [\n                                    {\n                                        \"displayName\": \"Auto\",\n                                        \"requestValue\": 0\n                                    },\n                                    {\n                                        \"displayName\": \"36\",\n                                        \"requestValue\": 36\n                                    },\n                                    {\n                                        \"displayName\": \"40\",\n                                        \"requestValue\": 40\n                                    },\n                                    {\n                                        \"displayName\": \"44\",\n                                        \"requestValue\": 44\n                                    },\n                                    {\n                                        \"displayName\": \"48\",\n                                        \"requestValue\": 48\n                                    },\n                                    {\n                                        \"displayName\": \"149\",\n                                        \"requestValue\": 149\n                                    },\n                                    {\n                                        \"displayName\": \"153\",\n                                        \"requestValue\": 153\n                                    },\n                                    {\n                                        \"displayName\": \"157\",\n                                        \"requestValue\": 157\n                                    },\n                                    {\n                                        \"displayName\": \"161\",\n                                        \"requestValue\": 161\n                                    },\n                                    {\n                                        \"displayName\": \"165\",\n                                        \"requestValue\": 165\n                                    }\n                                ]\n                            }\n                        },\n                        \"HT40\": {\n                            \"US\": {\n                                \"DFS\": [\n                                    {\n                                        \"displayName\": \"Auto\",\n                                        \"requestValue\": 0\n                                    },\n                                    {\n                                        \"displayName\": \"36\",\n                                        \"requestValue\": 36\n                                    },\n                                    {\n                                        \"displayName\": \"40\",\n                                        \"requestValue\": 40\n                                    },\n                                    {\n                                        \"displayName\": \"44\",\n                                        \"requestValue\": 44\n                                    },\n                                    {\n                                        \"displayName\": \"48\",\n                                        \"requestValue\": 48\n                                    },\n                                    {\n                                        \"displayName\": \"52\",\n                                        \"requestValue\": 52\n                                    },\n                                    {\n                                        \"displayName\": \"56\",\n                                        \"requestValue\": 56\n                                    },\n                                    {\n                                        \"displayName\": \"60\",\n                                        \"requestValue\": 60\n                                    },\n                                    {\n                                        \"displayName\": \"64\",\n                                        \"requestValue\": 64\n                                    },\n                                    {\n                                        \"displayName\": \"100\",\n                                        \"requestValue\": 100\n                                    },\n                                    {\n                                        \"displayName\": \"104\",\n                                        \"requestValue\": 104\n                                    },\n                                    {\n                                        \"displayName\": \"108\",\n                                        \"requestValue\": 108\n                                    },\n                                    {\n                                        \"displayName\": \"112\",\n                                        \"requestValue\": 112\n                                    },\n                                    {\n                                        \"displayName\": \"140\",\n                                        \"requestValue\": 140\n                                    }\n                                ],\n                                \"STANDARD\": [\n                                    {\n                                        \"displayName\": \"Auto\",\n                                        \"requestValue\": 0\n                                    },\n                                    {\n                                        \"displayName\": \"36\",\n                                        \"requestValue\": 36\n                                    },\n                                    {\n                                        \"displayName\": \"40\",\n                                        \"requestValue\": 40\n                                    },\n                                    {\n                                        \"displayName\": \"44\",\n                                        \"requestValue\": 44\n                                    },\n                                    {\n                                        \"displayName\": \"48\",\n                                        \"requestValue\": 48\n                                    },\n                                    {\n                                        \"displayName\": \"149\",\n                                        \"requestValue\": 149\n                                    },\n                                    {\n                                        \"displayName\": \"153\",\n                                        \"requestValue\": 153\n                                    },\n                                    {\n                                        \"displayName\": \"157\",\n                                        \"requestValue\": 157\n                                    },\n                                    {\n                                        \"displayName\": \"161\",\n                                        \"requestValue\": 161\n                                    }\n                                ]\n                            }\n                        },\n                        \"HT80\": {\n                            \"US\": {\n                                \"DFS\": [\n                                    {\n                                        \"displayName\": \"Auto\",\n                                        \"requestValue\": 0\n                                    },\n                                    {\n                                        \"displayName\": \"36\",\n                                        \"requestValue\": 36\n                                    },\n                                    {\n                                        \"displayName\": \"40\",\n                                        \"requestValue\": 40\n                                    },\n                                    {\n                                        \"displayName\": \"44\",\n                                        \"requestValue\": 44\n                                    },\n                                    {\n                                        \"displayName\": \"48\",\n                                        \"requestValue\": 48\n                                    },\n                                    {\n                                        \"displayName\": \"52\",\n                                        \"requestValue\": 52\n                                    },\n                                    {\n                                        \"displayName\": \"56\",\n                                        \"requestValue\": 56\n                                    },\n                                    {\n                                        \"displayName\": \"60\",\n                                        \"requestValue\": 60\n                                    },\n                                    {\n                                        \"displayName\": \"64\",\n                                        \"requestValue\": 64\n                                    },\n                                    {\n                                        \"displayName\": \"100\",\n                                        \"requestValue\": 100\n                                    },\n                                    {\n                                        \"displayName\": \"104\",\n                                        \"requestValue\": 104\n                                    },\n                                    {\n                                        \"displayName\": \"108\",\n                                        \"requestValue\": 108\n                                    },\n                                    {\n                                        \"displayName\": \"112\",\n                                        \"requestValue\": 112\n                                    },\n                                    {\n                                        \"displayName\": \"116\",\n                                        \"requestValue\": 116\n                                    },\n                                    {\n                                        \"displayName\": \"120\",\n                                        \"requestValue\": 120\n                                    },\n                                    {\n                                        \"displayName\": \"124\",\n                                        \"requestValue\": 124\n                                    },\n                                    {\n                                        \"displayName\": \"128\",\n                                        \"requestValue\": 128\n                                    },\n                                    {\n                                        \"displayName\": \"132\",\n                                        \"requestValue\": 132\n                                    },\n                                    {\n                                        \"displayName\": \"136\",\n                                        \"requestValue\": 136\n                                    },\n                                    {\n                                        \"displayName\": \"140\",\n                                        \"requestValue\": 140\n                                    }\n                                ],\n                                \"STANDARD\": [\n                                    {\n                                        \"displayName\": \"Auto\",\n                                        \"requestValue\": 0\n                                    },\n                                    {\n                                        \"displayName\": \"36\",\n                                        \"requestValue\": 36\n                                    },\n                                    {\n                                        \"displayName\": \"40\",\n                                        \"requestValue\": 40\n                                    },\n                                    {\n                                        \"displayName\": \"44\",\n                                        \"requestValue\": 44\n                                    },\n                                    {\n                                        \"displayName\": \"48\",\n                                        \"requestValue\": 48\n                                    },\n                                    {\n                                        \"displayName\": \"149\",\n                                        \"requestValue\": 149\n                                    },\n                                    {\n                                        \"displayName\": \"153\",\n                                        \"requestValue\": 153\n                                    },\n                                    {\n                                        \"displayName\": \"157\",\n                                        \"requestValue\": 157\n                                    },\n                                    {\n                                        \"displayName\": \"161\",\n                                        \"requestValue\": 161\n                                    },\n                                    {\n                                        \"displayName\": \"165\",\n                                        \"requestValue\": 165\n                                    }\n                                ]\n                            }\n                        }\n                    },\n                    \"available_transmit_power\": {\n                        \"US\": {\n                            \"DFS\": [\n                                {\n                                    \"displayName\": \"25 dBm (317 mW)\",\n                                    \"requestValue\": 25\n                                },\n                                {\n                                    \"displayName\": \"24 dBm (252 mW)\",\n                                    \"requestValue\": 24\n                                },\n                                {\n                                    \"displayName\": \"23 dBm (200 mW)\",\n                                    \"requestValue\": 23\n                                },\n                                {\n                                    \"displayName\": \"22 dBm (159 mW)\",\n                                    \"requestValue\": 22\n                                },\n                                {\n                                    \"displayName\": \"21 dBm (126 mW)\",\n                                    \"requestValue\": 21\n                                },\n                                {\n                                    \"displayName\": \"20 dBm (100 mW)\",\n                                    \"requestValue\": 20\n                                },\n                                {\n                                    \"displayName\": \"19 dBm (80 mW)\",\n                                    \"requestValue\": 19\n                                },\n                                {\n                                    \"displayName\": \"18 dBm (64 mW)\",\n                                    \"requestValue\": 18\n                                },\n                                {\n                                    \"displayName\": \"17 dBm (51 mW)\",\n                                    \"requestValue\": 17\n                                },\n                                {\n                                    \"displayName\": \"16 dBm (40 mW)\",\n                                    \"requestValue\": 16\n                                },\n                                {\n                                    \"displayName\": \"15 dBm (32 mW)\",\n                                    \"requestValue\": 15\n                                },\n                                {\n                                    \"displayName\": \"14 dBm (26 mW)\",\n                                    \"requestValue\": 14\n                                },\n                                {\n                                    \"displayName\": \"13 dBm (20 mW)\",\n                                    \"requestValue\": 13\n                                },\n                                {\n                                    \"displayName\": \"12 dBm (16 mW)\",\n                                    \"requestValue\": 12\n                                },\n                                {\n                                    \"displayName\": \"11 dBm (13 mW)\",\n                                    \"requestValue\": 11\n                                },\n                                {\n                                    \"displayName\": \"10 dBm (10 mW)\",\n                                    \"requestValue\": 10\n                                },\n                                {\n                                    \"displayName\": \"9 dBm (8 mW)\",\n                                    \"requestValue\": 9\n                                },\n                                {\n                                    \"displayName\": \"8 dBm (7 mW)\",\n                                    \"requestValue\": 8\n                                },\n                                {\n                                    \"displayName\": \"7 dBm (6 mW)\",\n                                    \"requestValue\": 7\n                                },\n                                {\n                                    \"displayName\": \"6 dBm (4 mW)\",\n                                    \"requestValue\": 6\n                                },\n                                {\n                                    \"displayName\": \"5 dBm (4 mW)\",\n                                    \"requestValue\": 5\n                                },\n                                {\n                                    \"displayName\": \"4 dBm (3 mW)\",\n                                    \"requestValue\": 4\n                                },\n                                {\n                                    \"displayName\": \"3 dBm (2 mW)\",\n                                    \"requestValue\": 3\n                                },\n                                {\n                                    \"displayName\": \"2 dBm (2 mW)\",\n                                    \"requestValue\": 2\n                                },\n                                {\n                                    \"displayName\": \"1 dBm (2 mW)\",\n                                    \"requestValue\": 1\n                                }\n                            ],\n                            \"STANDARD\": [\n                                {\n                                    \"displayName\": \"25 dBm (317 mW)\",\n                                    \"requestValue\": 25\n                                },\n                                {\n                                    \"displayName\": \"24 dBm (252 mW)\",\n                                    \"requestValue\": 24\n                                },\n                                {\n                                    \"displayName\": \"23 dBm (200 mW)\",\n                                    \"requestValue\": 23\n                                },\n                                {\n                                    \"displayName\": \"22 dBm (159 mW)\",\n                                    \"requestValue\": 22\n                                },\n                                {\n                                    \"displayName\": \"21 dBm (126 mW)\",\n                                    \"requestValue\": 21\n                                },\n                                {\n                                    \"displayName\": \"20 dBm (100 mW)\",\n                                    \"requestValue\": 20\n                                },\n                                {\n                                    \"displayName\": \"19 dBm (80 mW)\",\n                                    \"requestValue\": 19\n                                },\n                                {\n                                    \"displayName\": \"18 dBm (64 mW)\",\n                                    \"requestValue\": 18\n                                },\n                                {\n                                    \"displayName\": \"17 dBm (51 mW)\",\n                                    \"requestValue\": 17\n                                },\n                                {\n                                    \"displayName\": \"16 dBm (40 mW)\",\n                                    \"requestValue\": 16\n                                },\n                                {\n                                    \"displayName\": \"15 dBm (32 mW)\",\n                                    \"requestValue\": 15\n                                },\n                                {\n                                    \"displayName\": \"14 dBm (26 mW)\",\n                                    \"requestValue\": 14\n                                },\n                                {\n                                    \"displayName\": \"13 dBm (20 mW)\",\n                                    \"requestValue\": 13\n                                },\n                                {\n                                    \"displayName\": \"12 dBm (16 mW)\",\n                                    \"requestValue\": 12\n                                },\n                                {\n                                    \"displayName\": \"11 dBm (13 mW)\",\n                                    \"requestValue\": 11\n                                },\n                                {\n                                    \"displayName\": \"10 dBm (10 mW)\",\n                                    \"requestValue\": 10\n                                },\n                                {\n                                    \"displayName\": \"9 dBm (8 mW)\",\n                                    \"requestValue\": 9\n                                },\n                                {\n                                    \"displayName\": \"8 dBm (7 mW)\",\n                                    \"requestValue\": 8\n                                },\n                                {\n                                    \"displayName\": \"7 dBm (6 mW)\",\n                                    \"requestValue\": 7\n                                },\n                                {\n                                    \"displayName\": \"6 dBm (4 mW)\",\n                                    \"requestValue\": 6\n                                },\n                                {\n                                    \"displayName\": \"5 dBm (4 mW)\",\n                                    \"requestValue\": 5\n                                },\n                                {\n                                    \"displayName\": \"4 dBm (3 mW)\",\n                                    \"requestValue\": 4\n                                },\n                                {\n                                    \"displayName\": \"3 dBm (2 mW)\",\n                                    \"requestValue\": 3\n                                },\n                                {\n                                    \"displayName\": \"2 dBm (2 mW)\",\n                                    \"requestValue\": 2\n                                },\n                                {\n                                    \"displayName\": \"1 dBm (2 mW)\",\n                                    \"requestValue\": 1\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        }\n    ],\n    \"message\": {\n        \"code\": 200,\n        \"description\": \"You have chosen... wisely.\",\n        \"title\": \"Success!\"\n    }\n}"
              }
            }
          }
        }
      }
    },
    "/v1/cloudsettings/countrycode": {
      "put": {
        "tags": ["CloudSettings"],
        "summary": "Changes the country code on the radio templates at the location for supported Pakedge Access Points. If there are no access points that have country code unlocked, nothing will be changed. These changes will go into a pending state and will need to be applied.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Changes the country code on the radio templates at the location for supported Pakedge Access Points. If there are no access points that have country code unlocked, nothing will be changed. These changes will go into a pending state and will need to be applied.",
            "required": true,
            "schema": { "$ref": "#/definitions/RadiosUpdateCountryCodeRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/cloudsettings/radios/wa": {
      "put": {
        "tags": ["CloudSettings"],
        "summary": "Set the pending Wireless Radio Settings. Set &quot;radio&quot; and &quot;advanced&quot; object contents on the root of the payload see (Pakedge WAP Settings Set Params for 'radio') see (Pakedge WAP Settings Set Params for 'advanced') The advanced fields for 'bss' are used for fastRoaming. If one band is on then fast roaming is considered on. 'transmit_power' also comes from the 'advanced' options.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Set the pending Wireless Radio Settings. Set &quot;radio&quot; and &quot;advanced&quot; object contents on the root of the payload see (Pakedge WAP Settings Set Params for 'radio') see (Pakedge WAP Settings Set Params for 'advanced') The advanced fields for 'bss' are used for fastRoaming. If one band is on then fast roaming is considered on. 'transmit_power' also comes from the 'advanced' options.",
            "required": true,
            "schema": { "$ref": "#/definitions/RadiosWaUpdateRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/cloudsettings/radios/wkwx": {
      "put": {
        "tags": ["CloudSettings"],
        "summary": "Set the pending Wireless Radio Settings. Set the 'radio' and 'advanced' contents into the root payload. See (Pakedge WAP Settings Set Params for 'radio') See (Pakedge WAP Settings Set Params for 'advanced') The advanced fields for 'bss' are used for fastRoaming. If one band is on then fast roaming is considered on. 'transmit_power' also comes from the 'advanced' options.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Set the pending Wireless Radio Settings. Set the 'radio' and 'advanced' contents into the root payload. See (Pakedge WAP Settings Set Params for 'radio') See (Pakedge WAP Settings Set Params for 'advanced') The advanced fields for 'bss' are used for fastRoaming. If one band is on then fast roaming is considered on. 'transmit_power' also comes from the 'advanced' options.",
            "required": true,
            "schema": { "$ref": "#/definitions/RadiosWkWxUpdateRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/cloudsettings/ssid/ana": {
      "post": {
        "tags": ["CloudSettings"],
        "summary": "Saves Araknis Device Settings to a template",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Saves Araknis Device Settings to a template",
            "required": true,
            "schema": { "$ref": "#/definitions/SsidAnaSaveRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      },
      "put": {
        "tags": ["CloudSettings"],
        "summary": "Updates Araknis Device Settings on a template",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Updates Araknis Device Settings on a template",
            "required": true,
            "schema": { "$ref": "#/definitions/SsidAnaUpdateRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/cloudsettings/ssid/ax": {
      "post": {
        "tags": ["CloudSettings"],
        "summary": "Saves Ax Device Settings to a template",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Saves Ax Device Settings to a template",
            "required": true,
            "schema": { "$ref": "#/definitions/SsidAxSaveRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      },
      "put": {
        "tags": ["CloudSettings"],
        "summary": "Updates Ax Device Settings on a template",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Updates Ax Device Settings on a template",
            "required": true,
            "schema": { "$ref": "#/definitions/SsidAxUpdateRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/cloudsettings/ssid": {
      "delete": {
        "tags": ["CloudSettings"],
        "summary": "Delete SSID template as long as it is not a primary template.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Delete SSID template as long as it is not a primary template.",
            "required": true,
            "schema": { "$ref": "#/definitions/SsidDeleteRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      },
      "get": {
        "tags": ["CloudSettings"],
        "summary": "Gets details about SSIDs",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "locationId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of location for which one would like to get SSIDs"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/SsidGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t   \t   \"items\" : [\n\t\t        {\n\t\t            \"cloudSsidTemplateId\": \"5edfe5bbd5e6b52c71ebf8d8\",\n\t\t            \"count\": 1,\n\t\t            \"encryption\": \"OPEN\",\n\t\t            \"encryptionName\": \"Open\",\n\t\t            \"isPrimary\": true,\n\t\t            \"enabled\": true,\n\t\t            \"deviceFail\": false,\n\t\t            \"isPendingChanges\": false,\n\t\t            \"isPendingDelete\": false,\n\t\t            \"enabled\": true,\n\t\t            \"name\": \"test\",\n\t\t            \"radios\": \"BOTH\"\n\t\t        },\n\t\t        {\n\t\t            \"cloudSsidTemplateId\": \"5efe0ff895a9a19638b4ecf1\",\n\t\t            \"count\": 1,\n\t\t            \"encryption\": \"OPEN\",\n\t\t            \"encryptionName\": \"Open\",\n\t\t            \"isPrimary\": false,\n\t\t            \"enabled\": false,\n\t\t            \"deviceFail\": false,\n\t\t            \"isPendingChanges\": false,\n\t\t            \"isPendingDelete\": false,\n\t\t            \"enabled\": true,\n\t\t            \"name\": \"jjjjj\",\n\t\t            \"radios\": \"5\"\n\t\t        },\n\t\t        {\n\t\t            \"cloudSsidTemplateId\": \"5efe0ff895a9a19638b4ecf3\",\n\t\t            \"count\": 1,\n\t\t            \"encryption\": \"OPEN\",\n\t\t            \"encryptionName\": \"Open\",\n\t\t            \"isPrimary\": false,\n\t\t            \"enabled\": true,\n\t\t            \"deviceFail\": false,\n\t\t            \"isPendingChanges\": false,\n\t\t            \"isPendingDelete\": false,\n\t\t            \"enabled\": true,\n\t\t            \"name\": \"jjjjj\",\n\t\t            \"radios\": \"2.4\"\n\t\t        },\n\t\t        {\n\t\t            \"cloudSsidTemplateId\": \"5efe0ff895a9a19638b4ecf5\",\n\t\t            \"count\": 1,\n\t\t            \"encryption\": \"WPA2-PSK\",\n\t\t            \"encryptionName\": \"WPA2-PSK\",\n\t\t            \"isPrimary\": false,\n\t\t            \"enabled\": true,\n\t\t            \"deviceFail\": false,\n\t\t            \"isPendingChanges\": false,\n\t\t            \"isPendingDelete\": false,\n\t\t            \"enabled\": true,\n\t\t            \"name\": \"P_DEV_510_WAP\",\n\t\t            \"radios\": \"5\"\n\t\t        }\n        ],\n       \"totalWapCount\": 30\n     }"
              }
            }
          }
        }
      }
    },
    "/v1/cloudsettings/ssid/details": {
      "get": {
        "tags": ["CloudSettings"],
        "summary": "Gets details about a specific SSID template",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "cloudSsidTemplateId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of template for which you would like to get details"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/SsidDetailsGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t    \"cloudSsidTemplateId\": \"5efe0ff895a9a19638b4ed0f\",\n\t\t    \"deletePending\": \"false\",\n\t\t    \"isPrimary\": \"false\",\n\t\t    \"currentSettingsWa\": {\n\t\t        \"private_network\": {\n\t\t            \"band24\": [\n\t\t                {\n\t\t                    \"encryption\": \"psk2+ccmp\",\n\t\t                    \"hide\": \"off\",\n\t\t                    \"isolate\": \"off\",\n\t\t                    \"password\": \"pakedgewireless\",\n\t\t                    \"ssid\": \"Pakedge_Main\",\n\t\t                    \"status\": \"on\",\n\t\t                    \"vlan\": \"1\"\n\t\t                }\n\t\t            ],\n\t\t            \"band5\": [\n\t\t                {\n\t\t                    \"encryption\": \"psk2+ccmp\",\n\t\t                    \"hide\": \"off\",\n\t\t                    \"isolate\": \"off\",\n\t\t                    \"password\": \"pakedgewireless\",\n\t\t                    \"ssid\": \"Pakedge_Main\",\n\t\t                    \"status\": \"on\",\n\t\t                    \"vlan\": \"1\"\n\t\t                }\n\t\t            ]\n\t\t        }\n\t\t    },\n\t\t    \"pendingSettingsWa\": {\n\t\t        \"private_network\": {\n\t\t            \"band24\": [\n\t\t                {\n\t\t                    \"encryption\": \"psk2+ccmp\",\n\t\t                    \"hide\": \"off\",\n\t\t                    \"isolate\": \"off\",\n\t\t                    \"password\": \"pakedgewireless\",\n\t\t                    \"ssid\": \"Pakedge_MainNew\",\n\t\t                    \"status\": \"on\",\n\t\t                    \"vlan\": \"1\"\n\t\t                }\n\t\t            ],\n\t\t            \"band5\": [\n\t\t                {\n\t\t                    \"encryption\": \"psk2+ccmp\",\n\t\t                    \"hide\": \"off\",\n\t\t                    \"isolate\": \"off\",\n\t\t                    \"password\": \"pakedgewireless\",\n\t\t                    \"ssid\": \"Pakedge_MainNew\",\n\t\t                    \"status\": \"on\",\n\t\t                    \"vlan\": \"1\"\n\t\t                }\n\t\t            ]\n\t\t        }\n\t\t    },\n\t\t    \"deleted\": false,\n\t\t    \"deviceFamily\": \"WA\",\n\t\t    \"devices\": [\n\t\t        {\n\t\t            \"deviceId\": \"5e9e72a888833daa72d94233\",\n\t\t            \"deviceResponse\": {},\n\t\t            \"deviceState\": \"INITIALIZED\",\n\t\t            \"isRemovable\": true\n\t\t        },\n\t\t        {\n\t\t            \"deviceId\": \"5e501d8eb7ab52a3ccee0667\",\n\t\t            \"deviceResponse\": {},\n\t\t            \"deviceState\": \"INITIALIZED\",\n\t\t            \"isRemovable\": true\n\t\t        }\n\t\t    ],\n\t\t    \"locationId\": \"5e8d3088d5e6b526b9fe6d05\"\n\t\t}"
              }
            }
          }
        }
      }
    },
    "/v1/cloudsettings/ssid/devices": {
      "get": {
        "tags": ["CloudSettings"],
        "summary": "Gets wireless access points for a location with SSID management metadata sprinkled on top.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "locationId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of location for which one would like to get SSID Management devices"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/SsidDevicesGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t\t\"limit\": 1,\n\t\t\t\"offset: 1,\n\t\t\t\"totalCount: 12,\n\t\t\t\"items\": [\n\t\t        {\n\t\t            \"connected\": false,\n\t\t            \"deviceId\": \"5e15e00db7ab52a3cc46818e\",\n\t\t            \"firmware\": \"2.0.02\",\n\t\t            \"firmwareUpdateStatus\": \"COMPLETE\",\n\t\t            \"isFirmwareUpdateAvailable\": false,\n\t\t            \"lanAddress\": \"192.168.233.108\",\n\t\t            \"lastSeenTime\": \"2020-06-30T03:02:02.584-04:00\",\n\t\t            \"macAddress\": \"D4:6A:91:C4:80:DB\",\n\t\t            \"ssidCounts\": {\n\t\t                \"radio24\": 4,\n\t\t                \"radio5\" : 5\n\t\t            },\n\t\t            \"metadata\": {\n\t\t                \"deviceFamily\": \"ANA\",\n\t\t                \"isSsidManagementCapable\": true,\n\t\t                \"wireless\": {\n\t\t                    \"ssidCounts\": {\n\t\t                        \"radio24\": {\n\t\t                            \"maxTotal\": 8,\n\t\t                            \"maxPrivate\": 8,\n\t\t                            \"maxGuest\": 8\n\t\t                        },\n\t\t                        \"radio5\": {\n\t\t                            \"maxTotal\": 8,\n\t\t                            \"maxPrivate\": 8,\n\t\t                            \"maxGuest\": 8\n\t\t                        }\n\t\t                    },\n\t\t                    \"securityModes\": {\n\t\t                        \"privateSecurityModes\": [\n\t\t                            {\n\t\t                                \"displayName\": \"Open\",\n\t\t                                \"requestValue\": \"OPEN\",\n\t\t                                \"hasRadiusServer\": false,\n\t\t                                \"notes\": \"\"\n\t\t                            },\n\t\t                            {\n\t\t                                \"displayName\": \"WPA2-PSK\",\n\t\t                                \"requestValue\": \"WPA2-PSK\",\n\t\t                                \"hasRadiusServer\": false,\n\t\t                                \"notes\": \"\"\n\t\t                            },\n\t\t                            {\n\t\t                                \"displayName\": \"WPA-PSK Mixed\",\n\t\t                                \"requestValue\": \"WPA-PSK MIXED\",\n\t\t                                \"hasRadiusServer\": false,\n\t\t                                \"notes\": \"\"\n\t\t                            },\n\t\t                            {\n\t\t                                \"displayName\": \"WPA2\",\n\t\t                                \"requestValue\": \"WPA2\",\n\t\t                                \"hasRadiusServer\": true,\n\t\t                                \"notes\": \"\"\n\t\t                            },\n\t\t                            {\n\t\t                                \"displayName\": \"WPA Mixed\",\n\t\t                                \"requestValue\": \"WPA MIXED\",\n\t\t                                \"hasRadiusServer\": true,\n\t\t                                \"notes\": \"\"\n\t\t                            }\n\t\t                        ],\n\t\t                        \"guestSecurityModes\": [\n\t\t                            {\n\t\t                                \"displayName\": \"Open\",\n\t\t                                \"requestValue\": \"OPEN\",\n\t\t                                \"hasRadiusServer\": false,\n\t\t                                \"notes\": \"\"\n\t\t                            },\n\t\t                            {\n\t\t                                \"displayName\": \"WPA2-PSK\",\n\t\t                                \"requestValue\": \"WPA2-PSK\",\n\t\t                                \"hasRadiusServer\": false,\n\t\t                                \"notes\": \"\"\n\t\t                            },\n\t\t                            {\n\t\t                                \"displayName\": \"WPA-PSK Mixed\",\n\t\t                                \"requestValue\": \"WPA-PSK MIXED\",\n\t\t                                \"hasRadiusServer\": false,\n\t\t                                \"notes\": \"\"\n\t\t                            }\n\t\t                        ]\n\t\t                    },\n\t\t                    \"clientIsolation\": {\n\t\t                        \"isPrivateDynamic\": true,\n\t\t                        \"isGuestDynamic\": true\n\t\t                    },\n\t\t                    \"radio\": {\n\t\t                        \"band24\": {\n\t\t                            \"available_wirelessmodes\": [\n\t\t                                {\n\t\t                                    \"displayName\": \"802.11 B\",\n\t\t                                    \"requestValue\": \"802.11B\"\n\t\t                                },\n\t\t                                {\n\t\t                                    \"displayName\": \"802.11 G\",\n\t\t                                    \"requestValue\": \"802.11G\"\n\t\t                                },\n\t\t                                {\n\t\t                                    \"displayName\": \"802.11 B/G\",\n\t\t                                    \"requestValue\": \"802.11BG\"\n\t\t                                },\n\t\t                                {\n\t\t                                    \"displayName\": \"802.11 B/G/N\",\n\t\t                                    \"requestValue\": \"802.11BGN\"\n\t\t                                }\n\t\t                            ],\n\t\t                            \"available_channels\": {\n\t\t                                \"*\": [\n\t\t                                    {\n\t\t                                        \"displayName\": \"Auto\",\n\t\t                                        \"requestValue\": 0\n\t\t                                    }\n\t\t                                ]\n\t\t                            }\n\t\t                        },\n\t\t                        \"band5\": {\n\t\t                            \"available_wirelessmodes\": [\n\t\t                                {\n\t\t                                    \"displayName\": \"802.11 A\",\n\t\t                                    \"requestValue\": \"802.11A\"\n\t\t                                },\n\t\t                                {\n\t\t                                    \"displayName\": \"802.11 N\",\n\t\t                                    \"requestValue\": \"802.11N\"\n\t\t                                },\n\t\t                                {\n\t\t                                    \"displayName\": \"802.11 A/N\",\n\t\t                                    \"requestValue\": \"802.11AN\"\n\t\t                                },\n\t\t                                {\n\t\t                                    \"displayName\": \"802.11 A/C/N\",\n\t\t                                    \"requestValue\": \"802.11ACN\"\n\t\t                                }\n\t\t                            ],\n\t\t                            \"available_channels\": {\n\t\t                                \"*\": [\n\t\t                                    {\n\t\t                                        \"displayName\": \"Auto\",\n\t\t                                        \"requestValue\": 0\n\t\t                                    }\n\t\t                                ]\n\t\t                            }\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            },\n\t\t            \"model\": \"AN-510-AP-I-AC\",\n\t\t            \"name\": \"AN-510-AP-I-AC\"\n\t\t        }\n\t\t    ]\n     }"
              }
            }
          }
        }
      }
    },
    "/v1/cloudsettings/guestssid": {
      "get": {
        "tags": ["CloudSettings"],
        "summary": "Gets details about SSIDs",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "locationId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of location for which one would like to get SSIDs"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/SsidGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t   \t   \"items\" : [\n\t\t        {\n\t\t            \"cloudSsidTemplateId\": \"5edfe5bbd5e6b52c71ebf8d8\",\n\t\t            \"count\": 1,\n\t\t            \"encryption\": \"OPEN\",\n\t\t            \"encryptionName\": \"Open\",\n\t\t            \"isPrimary\": true,\n\t\t            \"enabled\": true,\n\t\t            \"deviceFail\": false,\n\t\t            \"isPendingChanges\": false,\n\t\t            \"isPendingDelete\": false,\n\t\t            \"enabled\": true,\n\t\t            \"name\": \"test\",\n\t\t            \"radios\": \"BOTH\"\n\t\t        },\n\t\t        {\n\t\t            \"cloudSsidTemplateId\": \"5efe0ff895a9a19638b4ecf1\",\n\t\t            \"count\": 1,\n\t\t            \"encryption\": \"OPEN\",\n\t\t            \"encryptionName\": \"Open\",\n\t\t            \"isPrimary\": false,\n\t\t            \"enabled\": false,\n\t\t            \"deviceFail\": false,\n\t\t            \"isPendingChanges\": false,\n\t\t            \"isPendingDelete\": false,\n\t\t            \"enabled\": true,\n\t\t            \"name\": \"jjjjj\",\n\t\t            \"radios\": \"5\"\n\t\t        },\n\t\t        {\n\t\t            \"cloudSsidTemplateId\": \"5efe0ff895a9a19638b4ecf3\",\n\t\t            \"count\": 1,\n\t\t            \"encryption\": \"OPEN\",\n\t\t            \"encryptionName\": \"Open\",\n\t\t            \"isPrimary\": false,\n\t\t            \"enabled\": true,\n\t\t            \"deviceFail\": false,\n\t\t            \"isPendingChanges\": false,\n\t\t            \"isPendingDelete\": false,\n\t\t            \"enabled\": true,\n\t\t            \"name\": \"jjjjj\",\n\t\t            \"radios\": \"2.4\"\n\t\t        },\n\t\t        {\n\t\t            \"cloudSsidTemplateId\": \"5efe0ff895a9a19638b4ecf5\",\n\t\t            \"count\": 1,\n\t\t            \"encryption\": \"WPA2-PSK\",\n\t\t            \"encryptionName\": \"WPA2-PSK\",\n\t\t            \"isPrimary\": false,\n\t\t            \"enabled\": true,\n\t\t            \"deviceFail\": false,\n\t\t            \"isPendingChanges\": false,\n\t\t            \"isPendingDelete\": false,\n\t\t            \"enabled\": true,\n\t\t            \"name\": \"P_DEV_510_WAP\",\n\t\t            \"radios\": \"5\"\n\t\t        }\n        ],\n       \"totalWapCount\": 30\n     }"
              }
            }
          }
        }
      }
    },
    "/v1/cloudsettings/ssid/import": {
      "post": {
        "tags": ["CloudSettings"],
        "summary": "Imports SSID information",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Imports SSID information",
            "required": true,
            "schema": { "$ref": "#/definitions/SsidImportRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/cloudsettings/ssid/push": {
      "post": {
        "tags": ["CloudSettings"],
        "summary": "Applies pre-defined templates to location WAPs",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Applies pre-defined templates to location WAPs",
            "required": true,
            "schema": { "$ref": "#/definitions/SsidPushRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/cloudsettings/ssid/cancel": {
      "post": {
        "tags": ["CloudSettings"],
        "summary": "Cancels Push of SSID information",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Cancels Push of SSID information",
            "required": true,
            "schema": { "$ref": "#/definitions/SsidPushCancelRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/cloudsettings/ssid/wa": {
      "post": {
        "tags": ["CloudSettings"],
        "summary": "Saves Pakedge WA-series device settings to a template",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Saves Pakedge WA-series device settings to a template",
            "required": true,
            "schema": { "$ref": "#/definitions/SsidWaSaveRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      },
      "put": {
        "tags": ["CloudSettings"],
        "summary": "Updates Pakedge WA-series device settings on a template",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Updates Pakedge WA-series device settings on a template",
            "required": true,
            "schema": { "$ref": "#/definitions/SsidWaUpdateRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/cloudsettings/ssid/wkwx": {
      "post": {
        "tags": ["CloudSettings"],
        "summary": "Saves Wk/Wx-series WAP Settings to a template",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Saves Wk/Wx-series WAP Settings to a template",
            "required": true,
            "schema": { "$ref": "#/definitions/SsidWkWxSaveRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      },
      "put": {
        "tags": ["CloudSettings"],
        "summary": "Updates Wk/Wx-series template settings.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/cognito/lookup": {
      "get": {
        "tags": ["Cognito_Services"],
        "summary": "Called by the Cognito migration lambda to determine whether the user exists in the OvrC database.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/cognito/migrate": {
      "post": {
        "tags": ["Cognito_Services"],
        "summary": "Called by the Cognito migration lambda to validate the user's credentials.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/cognito/user": {
      "delete": {
        "tags": ["Cognito_Services"],
        "summary": "Called by an ERP lambda to delete a user in Cognito.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": { "200": { "description": "Success" } }
      },
      "get": {
        "tags": ["Cognito_Services"],
        "summary": "Called by an ERP lambda to get a user from Cognito.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": { "200": { "description": "Success" } }
      },
      "post": {
        "tags": ["Cognito_Services"],
        "summary": "Called by an ERP lambda to create a user in Cognito.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": { "200": { "description": "Success" } }
      },
      "put": {
        "tags": ["Cognito_Services"],
        "summary": "Called by an ERP lambda to update a user in Cognito.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/companies/logo": {
      "delete": {
        "tags": ["Companies"],
        "summary": "Delete your company public logo.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": { "200": { "description": "Success" } }
      },
      "put": {
        "tags": ["Companies"],
        "summary": "Upload a public image for your company to be displayed on OvrC Home.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Upload a public image for your company to be displayed on OvrC Home.",
            "required": true,
            "schema": { "$ref": "#/definitions/CompaniesLogoUpdateRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/companies/notificationhandler": {
      "put": {
        "tags": ["Companies"],
        "summary": "Set a customer notification event handler to be passed raw event data",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Set a customer notification event handler to be passed raw event data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompaniesNotificationHandlerUpdateRequest"
            }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/companies": {
      "get": {
        "tags": ["Companies"],
        "summary": "This Read API allows you to read information about your own company. This also includes companies that have invited your user account to their company using groups.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/CompaniesRead" },
            "examples": {
              "Success-Response:": {
                "value": "{\n  \"items\": [\n    {\n      \"companyId\": \"5e15dfaad5e6b54c94df7d1b\",\n      \"name\": \"Official A/V Co.\",\n      \"accountNum\": \"D10028\",\n      \"erpCode\": \"S12345\",\n      \"licenseType\": \"pro\",\n      \"logoUrl\": \"https://s3.amazonaws.com/snapav-userfiles/dew-qa/548227d3eff39f865700000b/companyLogo.png\",\n      \"contactName\": \"Official Audio Video\",\n      \"phone\": \"5551234567\",\n      \"phoneExtension\": \"2221\",\n      \"email\": \"test@officialav.com\"\n      \"supportProfile1\": {\n         \"email\": \"znaci_saj@hotmail.com\",\n         \"phone\": \"123456\",\n         \"phoneExt\": \"123\"\n      },\n      \"supportProfile2\": {\n         \"email\": \"znaci.saj@gmail.com\",\n         \"phone\": \"1234567\",\n         \"phoneExt\": \"124\"\n      }\n    }\n  ],\n  \"totalCount\": 1,\n  \"offset\": 0,\n  \"limit\": 1\n}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Companies"],
        "summary": "Update details about a Company.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Update details about a Company.",
            "required": true,
            "schema": { "$ref": "#/definitions/CompaniesUpdateRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/connect/activities": {
      "get": {
        "tags": ["Connect"],
        "summary": "Reads Connect Activities",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "locationId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Database GUID of location for which Connect activities are being requested."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/ConnectActivitiesRead" },
            "examples": {
              "Success-Response:": {
                "value": "{\n    \"items\": [\n        {\n            \"connectActivityId\": \"5693567b03b043895700004d\",\n            \"dateTime\": \"2016-01-11T07:15:07.150Z\",\n            \"details\": {\n                \"customerId\": \"54cf9f51dd15633c43000026\",\n                \"companyId\": \"548227d3eff39f865700000b\",\n                \"locationId\": \"54cf9f51dd15633c43000025\",\n                \"commandId\": \"5693565de39d0e0dc36be527\",\n                \"name\": \"Arvind\",\n                \"connectUserId\": \"5693452e03b0438957000010\"\n            },\n            \"display\": \"Arvind activated command pinga\",\n            \"source\": \"USER\"\n        },\n        {\n            \"connectActivityId\": \"568f6df9e684165431000032\",\n            \"dateTime\": \"2016-01-08T08:06:17.192Z\",\n            \"details\": {\n                \"customerId\": \"54cf9f51dd15633c43000026\",\n                \"companyId\": \"548227d3eff39f865700000b\",\n                \"locationId\": \"54cf9f51dd15633c43000025\",\n                \"commandId\": \"568f6deae39d0e0dc36be4b5\",\n                \"name\": \"falobuf-test\",\n                \"connectUserId\": \"568e0d6f74f96470590000a1\"\n            },\n            \"display\": \"falobuf-test activated command ResetDishNetwork\",\n            \"source\": \"USER\"\n        }\n    ],\n    \"limit\": 2,\n    \"message\": {\n        \"code\": 200,\n        \"description\": \"You have chosen... wisely.\",\n        \"title\": \"Success!\"\n    },\n    \"offset\": 3,\n    \"total\": 11\n}"
              }
            }
          }
        }
      }
    },
    "/v1/connect/commands": {
      "post": {
        "tags": ["Connect"],
        "summary": "Creates Connect Command",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Creates Connect Command",
            "required": true,
            "schema": { "$ref": "#/definitions/ConnectCommandsCreateRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      },
      "delete": {
        "tags": ["Connect"],
        "summary": "Deletes Connect Commands",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Deletes Connect Commands",
            "required": true,
            "schema": { "$ref": "#/definitions/ConnectCommandsDeleteRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      },
      "get": {
        "tags": ["Connect"],
        "summary": "Reads Connect Commands. Supports search/filter/sort/limit/offset",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "locationId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Database GUID of location for which Connect commands are being requested."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/ConnectCommandsRead" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t    \"items\": [\n\t\t        {\n\t\t            \"companyId\": \"548227d3eff39f865700000b\",\n\t\t            \"customerId\": \"5696b8fe1a069ac105000002\",\n\t\t            \"delayAfterRun\": 0,\n\t\t            \"deleted\": false,\n\t\t            \"displayOrder\": 1,\n\t\t            \"icon\": \"tv\",\n\t\t            \"lastRun\": \"2016-08-29T01:33:56.344-04:00\",\n\t\t            \"locationId\": \"5696bc421a069ac105000003\",\n\t\t            \"commandId\": \"57c3c8a883a81d69194c3da0\",\n\t\t            \"name\": \"edsad\",\n\t\t            \"nameL\": \"edsad\",\n\t\t            \"status\": \"UNAVAILABLE\",\n\t\t            \"steps\": [\n\t\t                {\n\t\t                    \"action\": \"resetOutlets\",\n\t\t                    \"delay\": 301000,\n\t\t                    \"deviceId\": \"57bdc91983a81d69194c3cef\",\n\t\t                    \"outlets\": [\n\t\t                        1\n\t\t                    ]\n\t\t                }\n\t\t            ]\n\t\t        },\n\t\t        {\n\t\t            \"companyId\": \"548227d3eff39f865700000b\",\n\t\t            \"customerId\": \"5696b8fe1a069ac105000002\",\n\t\t            \"delayAfterRun\": 0,\n\t\t            \"deleted\": false,\n\t\t            \"displayOrder\": 2,\n\t\t            \"icon\": \"streambox\",\n\t\t            \"lastRun\": \"2016-08-29T01:47:46-04:00\",\n\t\t            \"locationId\": \"5696bc421a069ac105000003\",\n\t\t            \"commandId\": \"57c3c92983a81d69194c3da2\",\n\t\t            \"name\": \"dsfs\",\n\t\t            \"nameL\": \"dsfs\",\n\t\t            \"status\": \"UNAVAILABLE\",\n\t\t            \"steps\": [\n\t\t                {\n\t\t                    \"action\": \"resetOutlets\",\n\t\t                    \"delay\": 121000,\n\t\t                    \"deviceId\": \"57bdc91983a81d69194c3cef\",\n\t\t                    \"outlets\": [\n\t\t                        1\n\t\t                    ]\n\t\t                }\n\t\t            ]\n\t\t        }\n\t\t    ],\n\t\t    \"limit\": 50,\n\t\t    \"message\": {\n\t\t        \"code\": 200,\n\t\t        \"description\": \"You have chosen... wisely.\",\n\t\t        \"title\": \"Success!\"\n\t\t    },\n\t\t    \"offset\": 0,\n\t\t    \"totalCount\": 2\n\t\t}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Connect"],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/ConnectCommandsUpdateRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/connect/commands/reorder": {
      "put": {
        "tags": ["Connect"],
        "summary": "Reorders Connect Commands",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Reorders Connect Commands",
            "required": true,
            "schema": { "$ref": "#/definitions/ConnectCommandsReorderRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/connect/commands/run": {
      "post": {
        "tags": ["Connect"],
        "summary": "Runs Connect Command",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Runs Connect Command",
            "required": true,
            "schema": { "$ref": "#/definitions/ConnectCommandsRunRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/connect/devices": {
      "get": {
        "tags": ["Connect"],
        "summary": "Reads Connect Enabled Devices. Supports search/sort.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "locationId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Database GUID of location for which Connect devices are being requested."
          },
          {
            "name": "sort",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The sort can equal &quot;asc&quot; or &quot;desc&quot; i.e. firmware:asc"
          },
          {
            "name": "monitored",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Use with sort=notify for the equivalent of sort=monitored"
          },
          {
            "name": "degraded",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Use with sort=notify for the equivalent of sort=degraded (puts monitored, degraded devices on top)"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/ConnectDevicesRead" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t    \"items\": [\n\t\t        {\n\t\t            \"brand\": \"Araknis Networks\",\n\t\t            \"category\": \"Networking\",\n\t\t            \"class\": \"OVRC\",\n\t\t            \"commands\": [\n\t\t                {\n\t\t                    \"actions\": {\n\t\t                        \"resetDevice\": \"/v1/devices/reset\"\n\t\t                    },\n\t\t                    \"sources\": [],\n\t\t                    \"title\": \"Reset Device\",\n\t\t                    \"type\": \"RESET_DEVICE\"\n\t\t                }\n\t\t            ],\n\t\t            \"connected\": false,\n\t\t            \"deviceId\": \"5b5f6e3783970a43df8db26e\",\n\t\t            \"deviceName\": \"AN-110-RT-2L1W-WIFI\",\n\t\t            \"firmware\": \"1.0.57\",\n\t\t            \"hasUPS\": false,\n\t\t            \"macAddress\": \"D4:6A:91:78:01:05\",\n\t\t            \"model\": \"AN-110-RT-2L1W-WIFI\",\n\t\t            \"type\": \"ROUTER_HUB\"\n\t\t        },\n\t\t        {\n\t\t            \"brand\": \"WattBox\",\n\t\t            \"category\": \"Power\",\n\t\t            \"class\": \"OVRC\",\n\t\t            \"commands\": [\n\t\t                {\n\t\t                    \"actions\": {\n\t\t                        \"resetDevice\": \"/v1/devices/reset\"\n\t\t                    },\n\t\t                    \"sources\": [],\n\t\t                    \"title\": \"Reset Device\",\n\t\t                    \"type\": \"RESET_DEVICE\"\n\t\t                },\n\t\t                {\n\t\t                    \"actions\": {\n\t\t                        \"resetMultipleOutlets\": \"/v1/wattbox/outlet/reset\"\n\t\t                    },\n\t\t                    \"sources\": [\n\t\t                        \"/v1/wattbox/alloutletsconfig\"\n\t\t                    ],\n\t\t                    \"title\": \"Reset Outlet(s)\",\n\t\t                    \"type\": \"RESET_MULTIPLE_OUTLETS\"\n\t\t                },\n\t\t                {\n\t\t                    \"actions\": {\n\t\t                        \"resetAllOutlets\": \"/v1/wattbox/resetalloutlets\"\n\t\t                    },\n\t\t                    \"sources\": [],\n\t\t                    \"title\": \"Reset All Outlets\",\n\t\t                    \"type\": \"RESET_ALL_OUTLETS\"\n\t\t                }\n\t\t            ],\n\t\t            \"connected\": false,\n\t\t            \"deviceId\": \"5ced962f91f44a14fb929ddd\",\n\t\t            \"deviceName\": \"WB-150-IPW-1B-2\",\n\t\t            \"firmware\": \"1.0.2.2\",\n\t\t            \"hasUPS\": false,\n\t\t            \"macAddress\": \"D4:6A:91:04:06:54\",\n\t\t            \"model\": \"WB-150-IPW-1B-2\",\n\t\t            \"type\": \"WATTBOX\"\n\t\t        },\n\t\t        {\n\t\t            \"brand\": \"WattBox\",\n\t\t            \"category\": \"Power\",\n\t\t            \"class\": \"OVRC\",\n\t\t            \"commands\": [\n\t\t                {\n\t\t                    \"actions\": {\n\t\t                        \"resetDevice\": \"/v1/devices/reset\"\n\t\t                    },\n\t\t                    \"sources\": [],\n\t\t                    \"title\": \"Reset Device\",\n\t\t                    \"type\": \"RESET_DEVICE\"\n\t\t                },\n\t\t                {\n\t\t                    \"actions\": {\n\t\t                        \"resetMultipleOutlets\": \"/v1/wattbox/outlet/reset\"\n\t\t                    },\n\t\t                    \"sources\": [\n\t\t                        \"/v1/wattbox/alloutletsconfig\"\n\t\t                    ],\n\t\t                    \"title\": \"Reset Outlet(s)\",\n\t\t                    \"type\": \"RESET_MULTIPLE_OUTLETS\"\n\t\t                },\n\t\t                {\n\t\t                    \"actions\": {\n\t\t                        \"resetAllOutlets\": \"/v1/wattbox/resetalloutlets\"\n\t\t                    },\n\t\t                    \"sources\": [],\n\t\t                    \"title\": \"Reset All Outlets\",\n\t\t                    \"type\": \"RESET_ALL_OUTLETS\"\n\t\t                }\n\t\t            ],\n\t\t            \"connected\": false,\n\t\t            \"deviceId\": \"5ced961a91f44a14fb929ddb\",\n\t\t            \"deviceName\": \"WB-250-IPW-2\",\n\t\t            \"firmware\": \"1.0.2.2\",\n\t\t            \"hasUPS\": false,\n\t\t            \"macAddress\": \"D4:6A:91:04:14:F4\",\n\t\t            \"model\": \"WB-250-IPW-2\",\n\t\t            \"type\": \"WATTBOX\"\n\t\t        },\n\t\t        {\n\t\t            \"brand\": \"WattBox\",\n\t\t            \"category\": \"Power\",\n\t\t            \"class\": \"OVRC\",\n\t\t            \"commands\": [\n\t\t                {\n\t\t                    \"actions\": {\n\t\t                        \"resetDevice\": \"/v1/devices/reset\"\n\t\t                    },\n\t\t                    \"sources\": [],\n\t\t                    \"title\": \"Reset Device\",\n\t\t                    \"type\": \"RESET_DEVICE\"\n\t\t                },\n\t\t                {\n\t\t                    \"actions\": {\n\t\t                        \"resetMultipleOutlets\": \"/v1/wattbox/outlet/reset\"\n\t\t                    },\n\t\t                    \"sources\": [\n\t\t                        \"/v1/wattbox/alloutletsconfig\"\n\t\t                    ],\n\t\t                    \"title\": \"Reset Outlet(s)\",\n\t\t                    \"type\": \"RESET_MULTIPLE_OUTLETS\"\n\t\t                },\n\t\t                {\n\t\t                    \"actions\": {\n\t\t                        \"resetAllOutlets\": \"/v1/wattbox/resetalloutlets\"\n\t\t                    },\n\t\t                    \"sources\": [],\n\t\t                    \"title\": \"Reset All Outlets\",\n\t\t                    \"type\": \"RESET_ALL_OUTLETS\"\n\t\t                }\n\t\t            ],\n\t\t            \"connected\": true,\n\t\t            \"deviceId\": \"55e485ba1a6e63a0110023b9\",\n\t\t            \"deviceName\": \"WB-300-IP-3\",\n\t\t            \"firmware\": \"WB10.6c14\",\n\t\t            \"hasUPS\": true,\n\t\t            \"macAddress\": \"D4:6A:91:00:CE:75\",\n\t\t            \"model\": \"WB-300-IP-3\",\n\t\t            \"type\": \"WATTBOX\"\n\t\t        },\n\t\t        {\n\t\t            \"brand\": \"WattBox\",\n\t\t            \"category\": \"Power\",\n\t\t            \"class\": \"OVRC\",\n\t\t            \"commands\": [\n\t\t                {\n\t\t                    \"actions\": {\n\t\t                        \"resetDevice\": \"/v1/devices/reset\"\n\t\t                    },\n\t\t                    \"sources\": [],\n\t\t                    \"title\": \"Reset Device\",\n\t\t                    \"type\": \"RESET_DEVICE\"\n\t\t                },\n\t\t                {\n\t\t                    \"actions\": {\n\t\t                        \"resetMultipleOutlets\": \"/v1/wattbox/outlet/reset\"\n\t\t                    },\n\t\t                    \"sources\": [\n\t\t                        \"/v1/wattbox/alloutletsconfig\"\n\t\t                    ],\n\t\t                    \"title\": \"Reset Outlet(s)\",\n\t\t                    \"type\": \"RESET_MULTIPLE_OUTLETS\"\n\t\t                },\n\t\t                {\n\t\t                    \"actions\": {\n\t\t                        \"resetAllOutlets\": \"/v1/wattbox/resetalloutlets\"\n\t\t                    },\n\t\t                    \"sources\": [],\n\t\t                    \"title\": \"Reset All Outlets\",\n\t\t                    \"type\": \"RESET_ALL_OUTLETS\"\n\t\t                }\n\t\t            ],\n\t\t            \"connected\": false,\n\t\t            \"deviceId\": \"566f488ae39d0e0dc36bcda6\",\n\t\t            \"deviceName\": \"WB-300VB-IP-5\",\n\t\t            \"firmware\": \"WB10.6c14\",\n\t\t            \"hasUPS\": false,\n\t\t            \"macAddress\": \"D4:6A:91:00:A6:9B\",\n\t\t            \"model\": \"WB-300VB-IP-5\",\n\t\t            \"type\": \"WATTBOX\"\n\t\t        }\n\t\t    ],\n        \"totalCount\": 10,\n        \"offset\": 0,\n        \"limit\": 5\n\t\t    \"message\": {\n\t\t        \"code\": 200,\n\t\t        \"description\": \"You have chosen... wisely.\",\n\t\t        \"title\": \"Success!\"\n\t\t    }\n\t\t}"
              }
            }
          }
        }
      }
    },
    "/v1/connect/users": {
      "post": {
        "tags": ["Connect"],
        "summary": "Creates Connect Users",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Creates Connect Users",
            "required": true,
            "schema": { "$ref": "#/definitions/ConnectUsersCreateRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      },
      "delete": {
        "tags": ["Connect"],
        "summary": "Deletes Connect Users",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Deletes Connect Users",
            "required": true,
            "schema": { "$ref": "#/definitions/ConnectUsersDeleteRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      },
      "get": {
        "tags": ["Connect"],
        "summary": "Reads Connect Users",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Database GUID of customer for which Connect users are being requested."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/ConnectUsersRead" },
            "examples": {
              "Success-Response:": {
                "value": "{\n    \"items\": [\n        {\n            \"connectUserId\": \"5a0ec3cbfd885c661ab679f2\",\n            \"createdAt\": \"2017-11-17T11:11:07.760Z\",\n            \"customerId\": \"57b43546226fad9b2b000024\",\n            \"companyId\": \"548227d3eff39f865700000b\",\n            \"deleted\": false,\n            \"language\": \"en-us\",\n            \"name\": \"aa@bb.cc\",\n            \"status\": \"ENABLED\",\n            \"username\": \"aa@bb.cc\"\n        },\n        {\n            \"connectUserId\": \"5a13f19101cd1915285c796f\",\n            \"createdAt\": \"2017-11-21T09:27:45.046Z\",\n            \"customerId\": \"57b43546226fad9b2b000024\",\n            \"companyId\": \"548227d3eff39f865700000b\",\n            \"deleted\": false,\n            \"language\": \"en-us\",\n            \"name\": \"test\",\n            \"status\": \"ENABLED\",\n            \"username\": \"test@test.co\"\n        },\n        {\n            \"connectUserId\": \"5dcc28a8bb5d4e185e26837e\",\n            \"createdAt\": \"2019-11-13T16:00:40.012Z\",\n            \"customerId\": \"57b43546226fad9b2b000024\",\n            \"companyId\": \"548227d3eff39f865700000b\",\n            \"deleted\": false,\n            \"language\": \"en-us\",\n            \"name\": \"duffyTest\",\n            \"status\": \"PENDING\",\n            \"username\": \"fray.duffy+1@gmail.com\"\n        }\n    ],\n    \"limit\": 0,\n    \"offset\": 0,\n    \"total\": 3\n}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Connect"],
        "summary": "Updates Connect Users",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Updates Connect Users",
            "required": true,
            "schema": { "$ref": "#/definitions/ConnectUsersUpdateRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/connect/resendinvite": {
      "put": {
        "tags": ["Connect"],
        "summary": "Resends invitation for connect user.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Resends invitation for connect user.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectUsersResendInviteRequest"
            }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/connect/networkclientlists": {
      "post": {
        "tags": ["Connect"],
        "summary": "Returns WAP network clients for specified customer.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Returns WAP network clients for specified customer.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectWAPNetworkClientListsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/ConnectWAPNetworkClientLists" }
            }
          }
        }
      }
    },
    "/v1/connect/locations": {
      "get": {
        "tags": ["Connect"],
        "summary": "Get locations for Ovrc Connect User",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "of the Ovrc Connect User (dealerId)."
          },
          {
            "name": "customerId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "of the Ovrc Connect User."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "Success-Response:": {
                "value": "{\n  \"items\": [\n\t\t{\n      \"_id\": \"5e15dfadd5e6b54c94df7d1c\",\n      \"address\": \"409 W W.T.Harris Blvd, Charlotte, NC 28262, USA\",\n      \"counts\": {\n          \"548227d3eff39f865700000b\": {\n              \"degradedDevices\": 0,\n              \"firmwareUpdates\": 2,\n              \"lastUpdated\": \"2021-07-01T15:58:56.459Z\",\n              \"offlineDevices\": 1,\n              \"onlineDevices\": 8,\n              \"totalDevices\": 9\n          }\n      },\n      \"countsNeedUpdate\": true,\n      \"createdAt\": \"2020-01-08T13:57:01.331Z\",\n      \"customer\": {\n          \"_id\": \"5e15dfaad5e6b54c94df7d1b\",\n          \"companyName\": \"Platform Dev Test Rack\",\n          \"companyNameL\": \"platform dev test rack\"\n      },\n      \"customerId\": \"5e15dfaad5e6b54c94df7d1b\",\n      \"dealerId\": \"548227d3eff39f865700000b\",\n      \"deleted\": false,\n      \"history\": {\n          \"created\": {\n              \"at\": \"2020-01-08T13:57:01.331Z\",\n              \"by\": \"548227d3eff39f865700000c\"\n          },\n          \"lastUpdated\": {\n              \"at\": \"2021-05-10T01:06:45.457Z\",\n              \"by\": \"5fd76179d5e6b57e58b8af9e\",\n              \"impersonatedBy\": \"5fd76179d5e6b57e58b8af9e\"\n          }\n      },\n      \"isSsidManagementEnabled\": false,\n      \"isp\": {},\n      \"licenseId\": \"58d030640e9c0a5f97447392\",\n      \"licenseType\": \"pro\",\n      \"locationId\": \"5e15dfadd5e6b54c94df7d1c\",\n      \"locationName\": \"CLT\",\n      \"locationNameL\": \"clt\",\n      \"notificationsDisabledUserIds\": [\n          \"6061d6ccd5e6b542bb79ac72\",\n          \"5cb4c0a4d5e6b557e87b1575\",\n          \"601d1f06d5e6b56f955ada3b\"\n      ],\n      \"proSettings\": {\n          \"deviceDiscovery\": {\n              \"deviceId\": \"5f99365b6975a38f5ba53ca9\",\n              \"frequency\": 86400\n          },\n          \"healthMonitor\": {\n              \"deviceId\": \"5f99365b6975a38f5ba53ca9\",\n              \"frequency\": 300\n          },\n          \"speedTest\": {\n              \"deviceId\": \"5f99365b6975a38f5ba53ca9\",\n              \"frequency\": 21600\n          }\n      },\n      \"sharedOut\": true,\n      \"ssidManagement_Old\": {\n          \"isImportInProgress\": false,\n          \"isPushInProgress\": false,\n          \"lastImportDate\": \"2021-04-28T13:35:11.159Z\",\n          \"lastPushDate\": \"2021-04-15T11:13:59.515Z\",\n          \"pushServer\": \"\"\n      },\n      \"ssidManagement_old2\": {\n          \"isImportInProgress\": false,\n          \"lastImportDate\": \"2021-04-29T10:38:27.979Z\"\n      },\n      \"stats\": {\n          \"totalDevices\": 0,\n          \"totalOfflineDevices\": 0,\n          \"totalUpdateDevices\": 0\n      },\n      \"verifiedAddress\": null\n  },\n  ],\n  \"message\": {\n      \"code\": 200,\n      \"description\": \"You have chosen... wisely.\",\n      \"title\": \"Success!\"\n  }\n}"
              }
            }
          }
        }
      }
    },
    "/v1/control4/backupavailable": {
      "get": {
        "tags": ["Control4"],
        "summary": "returns if the account has hit its storage limit and the Id of the oldest 'manual' backup that can be deleted",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/Control4BackupAvailable" }
          }
        }
      }
    },
    "/v1/control4/backupinfo": {
      "get": {
        "tags": ["Control4"],
        "summary": "Returns current backup information from the Control4 Controller",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/Control4BackupInfoRead" }
          }
        }
      }
    },
    "/v1/control4/cancelupdate": {
      "get": {
        "tags": ["Control4"],
        "summary": "Instructs the Control4 Controller to perform a cancel update OS operation",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/Control4CancelUpdate" }
          }
        }
      }
    },
    "/v1/control4/checkin": {
      "get": {
        "tags": ["Control4"],
        "summary": "Instructs the Control4 Controller to perform a site check in",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/Control4CheckIn" }
          }
        }
      }
    },
    "/v1/control4/directorinfo": {
      "get": {
        "tags": ["Control4"],
        "summary": "Returns current director information from the Control4 Controller",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/Control4DirectorInfoGet" }
          }
        }
      }
    },
    "/v1/control4/info": {
      "get": {
        "tags": ["Control4"],
        "summary": "Returns current information from the Control4 Controller",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/Control4InfoGet" }
          }
        }
      }
    },
    "/v1/control4/reboot": {
      "get": {
        "tags": ["Control4"],
        "summary": "Instructs the Control4 Controller to perform a Reboot",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/Control4Reboot" }
          }
        }
      }
    },
    "/v1/control4/backup": {
      "get": {
        "tags": ["Control4"],
        "summary": "Instructs the Control4 Controller to perform a backup operation",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/Control4Refresh" }
          }
        }
      },
      "delete": {
        "tags": ["Devices"],
        "summary": "Delete a Control4 cloud backup.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Delete a Control4 cloud backup.",
            "required": true,
            "schema": { "$ref": "#/definitions/Control4BackupDeleteRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/control4/refresh": {
      "get": {
        "tags": ["Control4"],
        "summary": "Instructs the Control4 Controller to perform a Refresh of Navigator Devices",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/Control4Refresh" }
          }
        }
      }
    },
    "/v1/control4/registrationinfo": {
      "get": {
        "tags": ["Control4"],
        "summary": "Returns current registration information from the Control4 Controller",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/Control4RegistrationInfoGet" }
          }
        }
      }
    },
    "/v1/control4/updatedevices": {
      "get": {
        "tags": ["Control4"],
        "summary": "Returns a list of devices in an OS update",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/Control4UpdateDevices" }
          }
        }
      }
    },
    "/v1/cusomers/counts": {
      "get": {
        "tags": ["Customers"],
        "summary": "Returns count of customers with associated key points fields included are:  customerCount, firmwareUpdateCount, needsAttentionCount, proLocationsCount, sharedInCount, sharedOutCount",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t\t\"customerCount\": 53,\n\t\t\t\"firmwareUpdateCount\": 19,\n\t\t\t\"message\": {\n\t\t\t\t\"code\": 200,\n\t\t\t\t\"description\": \"You have chosen... wisely.\",\n\t\t\t\t\"title\": \"Success!\"\n\t\t\t},\n\t\t\t\"needsAttentionCount\": 29,\n\t\t\t\"proLocationsCount\": 21,\n\t\t\t\"sharedInCount\": 7,\n\t\t\t\"sharedOutCount\": 51\n\t\t}"
              }
            }
          }
        }
      }
    },
    "/v1/customers": {
      "post": {
        "tags": ["Customers"],
        "summary": "Creates a customer for a given company.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Creates a customer for a given company.",
            "required": true,
            "schema": { "$ref": "#/definitions/CustomersCreateRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      },
      "delete": {
        "tags": ["Customers"],
        "summary": "Deletes a customer, its locations, and by default, moves all the devices to inventory. You can also request that the devices be unclaimed.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Deletes a customer, its locations, and by default, moves all the devices to inventory. You can also request that the devices be unclaimed.",
            "required": true,
            "schema": { "$ref": "#/definitions/CustomersDeleteRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      },
      "get": {
        "tags": ["Customers"],
        "summary": "This Read API allows you to read information about a customer to whom you have access.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/CustomersRead" },
            "examples": {
              "Success-Response:": {
                "value": "{\n  \"items\" : [\n    {\n      \"customerId\": \"5c17cf0da9b8831e4012dc17\",\n      \"accountNum\": \"C10123\",\n      \"name\": \"Customer Name\",\n      \"companyName\": \"Jim Bob's Emporium\",\n      \"licenseType\": \"basic\",\n      \"email\": \"customer@email.com\",\n      \"phone\": \"18005551234\",\n      \"deviceCount\": 10,\n      \"offlineDeviceCount\": 3,\n      \"onlineDeviceCount\": 7,\n      \"firmwareUpdateCount\": 0,\n      \"unverifiedLocationCount\": 1,\n      \"hasNotificationsEnabled\": true,\n      \"hasOfflineDevices\": true,\n      \"hasFirmwareUpdates\": false,\n      \"isSharedIn\": false,\n      \"isSharedOut\": true,\n      \"canEditGroups\": false,\n      \"canDelete\": false,\n      \"canAddLocations\": false,\n      \"hasContentFilteringEnabled\": false,\n      \"hasCommandsEnabled\": false,\n      \"hasWirelessProfilesEnabled\": false\n    }\n  ],\n  \"totalCount\": 1,\n  \"offset\": 0,\n  \"limit\": 1\n}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Customers"],
        "summary": "Update details about a Customer.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Update details about a Customer.",
            "required": true,
            "schema": { "$ref": "#/definitions/CustomersUpdateRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/customers/locationaccessread": {
      "post": {
        "tags": ["Customers"],
        "summary": "Given an array of group IDs, returns the customers/locations to which the combination of those groups have access.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Given an array of group IDs, returns the customers/locations to which the combination of those groups have access.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomersLocationAccessReadRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/CustomersLocationAccessRead" }
          }
        }
      }
    },
    "/v1/customers/networkclientlists": {
      "post": {
        "tags": ["Customers"],
        "summary": "Returns network clients for specified customer.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Returns network clients for specified customer.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomersNetworkClientListsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/CustomersNetworkClientLists" }
            }
          }
        }
      }
    },
    "/v1/customers/notifications": {
      "put": {
        "tags": ["Customers"],
        "summary": "Update a customer's notification settings for your account. When you disable the notifications for a customer, all location notifications will be disabled. When you re-enable the notifications for a customer, all location notifications will be enabled.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Update a customer's notification settings for your account. When you disable the notifications for a customer, all location notifications will be disabled. When you re-enable the notifications for a customer, all location notifications will be enabled.",
            "required": true,
            "schema": { "$ref": "#/definitions/CustomersNotificationsRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v2/customers": {
      "get": {
        "tags": ["Customers"],
        "summary": "This Read API allows you to read information about a customer to whom you have access.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "offset from start to get items"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "limit of items (default 10)"
          },
          {
            "name": "loclimit",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "limit of items (default 5 for non customer filter and 0 or unlimited when customer filter)"
          },
          {
            "name": "locoffset",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "offset from start of locations (Only usable when customerId filter is used)"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter on customerId to retrieve only one ex. filter=customerId:5e15dfaad5e6b54c84df7d1e. More filter - isSharedIn, isSharedOut,hasFirmwareupdates, hasOfflineDevice, isPro. Pattern is filter=isSharedIn:true"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filtering by part of the name. Example : search=co -&gt; it will return customers with 'co' chars in a name."
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "sort by name, update. It can be ascending or descending. Example : sort=name:asc or sort=update:desc"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/CustomersRead" },
            "examples": {
              "Success-Response:": {
                "value": "{\n  \"items\" : [\n    {\n      \"customerId\": \"5c17cf0da9b8831e4012dc17\",\n      \"accountNum\": \"C10123\",\n      \"name\": \"Customer Name\",\n      \"licenseType\": \"basic\",\n      \"email\": \"customer@email.com\",\n      \"phone\": \"18005551234\",\n      \"deviceCount\": 10,\n      \"offlineDeviceCount\": 3,\n      \"degradedDeviceCount\": 0,\n      \"onlineDeviceCount\": 7,\n      \"firmwareUpdateCount\": 0,\n      \"unverifiedLocationCount\": 1,\n      \"hasNotificationsEnabled\": true,\n      \"hasOfflineDevices\": true,\n      \"hasDegradedDevices\": false,\n      \"hasFirmwareUpdates\": false,\n      \"isSharedIn\": false,\n      \"isSharedOut\": true,\n      \"totalLocations\" : 1,\n      \"locations\": [\n        {\n          \"locationId\": \"5c17cf0da9b8831e4012dc18\",\n          \"name\": \"Location Name\",\n          \"licenseType\" : \"basic\",\n          \"address\" : \"123 Maple Lane Winston, MA\",\n          \"hasVerifiedAddress\" : false,\n          \"hasNotificationsEnabled\" : true,\n          \"hasFirmwareUpdates\" : false,\n          \"jobCode\": \"TheRealVIP\",\n          \"offlineDeviceCount\", 3\n        }\n      ]\n    }\n  ],\n  \"totalCount\": 1,\n  \"offset\": 0,\n  \"limit\": 1\n}"
              }
            }
          }
        }
      }
    },
    "/v2/customers/summary": {
      "get": {
        "tags": ["Customers"],
        "summary": "Provides a list of all customers and those customer locations. Requires Admin privilege",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "offset from start to get items"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "limit of items (default 10)"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/CustomersReadSummary" },
            "examples": {
              "Success-Response:": {
                "value": "{\n  \"items\" : [\n    {\n      \"customerId\": \"5c17cf0da9b8831e4012dc17\",\n      \"name\": \"Customer Name\",\n      \"licenseType\": \"basic\",\n      \"locations\": [\n        {\n          \"locationId\": \"5c17cf0da9b8831e4012dc18\",\n          \"name\": \"Location Name\"\n        }\n      ]\n    }\n  ],\n  \"totalCount\": 1,\n  \"offset\": 0,\n  \"limit\": 1\n}"
              }
            }
          }
        }
      }
    },
    "/v1/customers/groups": {
      "post": {
        "tags": ["Customers"],
        "summary": "Sets groups for one, or more, customers.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Sets groups for one, or more, customers.",
            "required": true,
            "schema": { "$ref": "#/definitions/CustomersSetGroupsRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/devices/contentfiltering": {
      "get": {
        "tags": ["Devices"],
        "summary": "Read content filtering information",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Database GUID of device to affect"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/ContentFilteringGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n    \"isContentFilteringEnabled\" : true,\n    \"contentFilteringOption\" : \"STRICT\"\n}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Devices"],
        "summary": "Affect content filtering information",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Affect content filtering information",
            "required": true,
            "schema": { "$ref": "#/definitions/ContentFilteringSetRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/ContentFilteringSet" }
          }
        }
      }
    },
    "/v1/control4/update": {
      "delete": {
        "tags": ["Devices"],
        "summary": "Cancel an update for a Control4 device.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Cancel an update for a Control4 device.",
            "required": true,
            "schema": { "$ref": "#/definitions/Control4UpdateDeleteRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      },
      "post": {
        "tags": ["Devices"],
        "summary": "Initiate a Control4 OS Update for a device.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Initiate a Control4 OS Update for a device.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DevicesFirmwareUpdateCreateRequest"
            }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/devices/details": {
      "get": {
        "tags": ["Devices"],
        "summary": "Returns details about the given device.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of the requested device."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/DeviceDetailsRead" },
            "examples": {
              "OvrC-Success-Response:": {
                "value": "{\n\t\t  \"brand\": \"Araknis Networks\",\n\t\t  \"canUnclaim\": true,\n\t\t  \"class\": \"OVRC\",\n\t\t  \"companyId\": \"57e5abe313ddcb260700000d\",\n\t\t  \"connected\": true,\n\t\t  \"customerId\": \"5b1059f2998f081c9f6c56dc\",\n\t\t  \"deviceId\": \"5cd9c9a9b30fc2082deb94a2\",\n\t\t  \"firmware\": \"1.0.5.39\",\n\t\t  \"firmwareUpdateStatus\": \"NONE\",\n\t\t  \"hasFirmwareUpdate\": false,\n\t\t  \"hasNotificationsEnabled\": true,\n\t\t  \"hasWebConnectEnabled\": true,\n\t      \"isUPnPEnabled\": false,\n\t\t  \"isSsidManagementCapable\": false,\n\t\t  \"ipAddress\": \"10.21.0.39\",\n\t\t  \"lanAddress\": \"192.168.1.1\",\n\t\t  \"lastSeenTime\": \"2019-05-24T00:36:39.973Z\",\n\t\t  \"firstSeenTime\": \"2018-07-21T00:36:39.973Z\",\n\t\t  \"locationId\": \"5b1059f3998f081c9f6c56dd\",\n\t\t  \"macAddress\": \"D4:6A:91:5F:5D:80\",\n\t\t  \"macAddresses\": {\n\t\t\t\t\"00:27:EB:E0:1E:DE\": false,\n\t\t\t\t\"D4:6A:91:5F:5D:80\": true,\n \t  },\n\t\t  \"message\": {\n\t\t    \"code\": 200,\n\t\t    \"description\": \"You have chosen... wisely.\",\n\t\t    \"title\": \"Success!\"\n\t\t  },\n\t\t  \"model\": \"AN-300-RT-4L2W\",\n\t\t  \"name\": \"300 Router\",\n\t\t  \"notes\": \"\",\n\t\t  \"platform\": \"\",\n\t\t  \"roomId\": \"624744073a95f5fe2715455d\",\n\t\t  \"type\": \"ROUTER\",\n\t\t  \"webConnectDetails\": [\n\t\t    {\n\t\t      \"port\": 80,\n\t\t      \"protocol\": \"HTTP\"\n\t\t    }\n\t\t  ],\n\t\t  \"canReboot\": true,\n\t\t  \"rebootAction\": \"/v1/hub/rebootdevice\",\n\t\t  \"canPingHost\" : true,\n\t\t  \"pingHostAction\" : \"/v1/hub/pinghost\",\n\t\t  \"canScanDevice\" : true,\n\t\t  \"scanDeviceAction\" : \"/v1/hub/scandevice\",\n\t\t   \"widgets\" : [\n\t\t    {\n\t\t      \"icon\": \"speed-test\",\n\t\t      \"localPath\": \"\\/details\",\n\t\t      \"title\": \"Details\",\n\t\t      \"type\": \"CONTAINER_TAB\",\n\t\t      \"widgets\": [\n\t\t        {\n\t\t          \"actions\": {\n\n\t\t          },\n\t\t          \"sources\": [\n\t\t            \"\\/v1\\/router\\/status\"\n\t\t          ],\n\t\t          \"title\": \"Device Details\",\n\t\t          \"type\": \"DEVICE_DETAILS\"\n\t\t        }\n\t\t      ]\n\t\t    },\n\t\t    {\n\t\t      \"icon\": \"cog\",\n\t\t      \"localPath\": \"\\/configure\",\n\t\t      \"title\": \"Configure\",\n\t\t      \"type\": \"CONTAINER_TAB\",\n\t\t      \"widgets\": [\n\n\t\t      ]\n\t\t    },\n\t\t    {\n\t\t      \"icon\": \"pro-diagnostics\",\n\t\t      \"localPath\": \"\\/activities\",\n\t\t      \"title\": \"Activities\",\n\t\t      \"type\": \"CONTAINER_TAB\",\n\t\t      \"widgets\": [\n\t\t        {\n\t\t          \"actions\": {\n\n\t\t          },\n\t\t          \"sources\": [\n\t\t            \"\\/v1\\/devices\\/activities\"\n\t\t          ],\n\t\t          \"title\": \"Device Activities\",\n\t\t          \"type\": \"DEVICE_ACTIVITIES_LIST\"\n\t\t        }\n\t\t      ]\n\t\t    },\n\t\t    {\n\t\t      \"icon\": \"pages\",\n\t\t      \"localPath\": \"\\/notes\",\n\t\t      \"title\": \"Notes\",\n\t\t      \"type\": \"CONTAINER_TAB\",\n\t\t      \"widgets\": [\n\t\t        {\n\t\t          \"actions\": {\n\n\t\t          },\n\t\t          \"sources\": [\n\t\t            \"\\/v1\\/devices\\/details\"\n\t\t          ],\n\t\t          \"title\": \"Device Notes\",\n\t\t          \"type\": \"DEVICE_NOTES\"\n\t\t        }\n\t\t      ]\n\t\t    }\n\t\t  ]\n\t\t}"
              }
            }
          }
        }
      }
    },
    "/v1/devices/activities": {
      "get": {
        "tags": ["Devices"],
        "summary": "Read activities for a device; sorted by dateTime descending.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Database GUID of device for which the user would like to read activities."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/DevicesActivities" },
            "examples": {
              "Success-Response:": {
                "value": "{\n  \"items\": [\n    {\n       \"activityId\": \"5c82b7e394634b7b3444fe7d\",\n       \"display\": \"LUM-510-TUR-IP-WH. connected to the cloud.\",\n       \"dateTime\": \"2019-03-08T18:38:33.858Z\",\n       \"severityLevel\": 1,\n       \"source\": \"DEVICE\"\n    },\n    {\n        \"activityId\": \"5cb4ba4f16581a32e55e36a3\",\n        \"dateTime\": \"2019-04-15T17:07:27.822Z\",\n        \"display\": \"Firmware upgrade to version 1.0.1.4 successful.\",\n        \"severityLevel\": 1,\n        \"source\": \"DEVICE\"\n    },\n    {\n        \"activityId\": \"5cb4b9bff358d98fee0e39ca\",\n        \"companyId\": \"548227d3eff39f865700000b\",\n        \"dateTime\": \"2019-04-15T17:05:03.588Z\",\n        \"display\": \"Firmware upgrade to version 1.0.1.4 initiated by Nathan Parmenter.\",\n        \"level\": 3,\n        \"name\": \"Nathan Parmenter\",\n        \"source\": \"USER\"\n    }\n  ],\n  \"totalCount\": 30,\n  \"offset\": 0,\n  \"limit\": 3\n}"
              }
            }
          }
        }
      }
    },
    "/v1/devices/claim": {
      "post": {
        "tags": ["Devices"],
        "summary": "The final step in claiming a device.  Ultimately assigning the device to specified location.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The final step in claiming a device.  Ultimately assigning the device to specified location.",
            "required": true,
            "schema": { "$ref": "#/definitions/DevicesClaimRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/devices/claiminventory": {
      "post": {
        "tags": ["Devices"],
        "summary": "The final step in claiming a device.  Ultimately assigning the device to inventory.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The final step in claiming a device.  Ultimately assigning the device to inventory.",
            "required": true,
            "schema": { "$ref": "#/definitions/DevicesClaimInventoryRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/devices/confirm": {
      "post": {
        "tags": ["Devices"],
        "summary": "The second of three steps in claiming a device.  Confirms ownership of the device via secondary information. Some devices will require a service tag, some a serial number. The client should send the appropriate field as indicated in the response of devices/find. For some devices, like NVRs/DVRs, the serial numbers are extremely long. In this case we allow the user to enter only the last 8 characters of the serial number for the confirmation step. If the provided serial number doesn't match the the full serial number in the database, we'll then try to match the last 8 of the serial in the database.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The second of three steps in claiming a device.  Confirms ownership of the device via secondary information. Some devices will require a service tag, some a serial number. The client should send the appropriate field as indicated in the response of devices/find. For some devices, like NVRs/DVRs, the serial numbers are extremely long. In this case we allow the user to enter only the last 8 characters of the serial number for the confirmation step. If the provided serial number doesn't match the the full serial number in the database, we'll then try to match the last 8 of the serial in the database.",
            "required": true,
            "schema": { "$ref": "#/definitions/DevicesConfirmRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/DevicesConfirm" }
          }
        }
      }
    },
    "/v1/devices/find": {
      "get": {
        "tags": ["Devices"],
        "summary": "Find a device; initial step in claiming a device.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "macAddress",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Mac address of device."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/DevicesFind" },
            "examples": {
              "Success-Response:": {
                "value": "{\n        \"model\": \"WB-600-IPVCE-12\",\n        \"macAddress\": \"D4:6A:91:47:42:40\",\n        \"class\": \"OVRC\",\n        \"secondaryInfoType\" : \"serialNumber\",\n\t\t   \"secondaryInfoDescription\" : \"Please enter the <b>serial number</b> of your device. The serial number can be found on the device.\",\n        \"brandName\" : \"Snap-AV\",\n        \"type\" : \"ROUTER_HUB\"\n     }"
              }
            }
          }
        }
      }
    },
    "/v1/devices/firmwareupdate": {
      "post": {
        "tags": ["Devices"],
        "summary": "Initiate a firmware update for a device.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Initiate a firmware update for a device.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DevicesFirmwareUpdateCreateRequest"
            }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      },
      "delete": {
        "tags": ["Devices"],
        "summary": "Cancel a firmware update for a device.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Cancel a firmware update for a device.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DevicesFirmwareUpdateDeleteRequest"
            }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/devices/inventory": {
      "get": {
        "tags": ["Devices"],
        "summary": "Reads Company's Inventory Devices. Supports search/filter/sort/limit/offset.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The number of inventory devices to return (default: 1)."
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The offset which should be used when returning devices (default: 0)."
          },
          {
            "name": "sort",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The sort can equal &quot;asc&quot; or &quot;desc&quot; i.e. firmware:asc"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/DevicesInventoryRead" },
            "examples": {
              "Success-Response:": {
                "value": "{\n    \"items\": [\n        {\n            \"brandName\": \"Araknis Networks\",\n            \"class\": \"OVRC\",\n            \"connected\": false,\n            \"deviceId\": \"5486d848fb27ac37550040c3\",\n            \"deviceName\": \"AN-300-SW-8-POE\",\n            \"ipAddress\": \"172.20.98.75\",\n            \"lanAddress\": \"192.168.1.101\",\n            \"isFirmwareUpdateAvailable\": true,\n            \"macAddress\": \"D4:6A:91:30:67:E3\",\n            \"type\": \"SWITCH\"\n        },\n        {\n            \"brandName\": \"Wirepath Surveillance\",\n            \"class\": \"OVRC\",\n            \"connected\": false,\n            \"deviceId\": \"54896a228d1e0fc11300227a\",\n            \"deviceName\": \"Cam 241\",\n            \"ipAddress\": \"219.65.93.114\",\n            \"lanAddress\": \"192.168.1.102\",\n            \"isFirmwareUpdateAvailable\": true,\n            \"macAddress\": \"00:0F:0D:26:5C:BA\",\n            \"type\": \"CAMERA\"\n        }\n    ],\n    \"limit\": 2,\n    \"message\": {\n        \"code\": 200,\n        \"description\": \"You have chosen... wisely.\",\n        \"title\": \"Success!\"\n    },\n    \"offset\": 0,\n    \"totalCount\": 38\n}"
              }
            }
          }
        }
      }
    },
    "/v1/devices/networkclientlists": {
      "post": {
        "tags": ["Devices"],
        "summary": "Returns network clients for specified device.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Returns network clients for specified device.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DevicesNetworkClientListsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/DevicesNetworkClientLists" }
            }
          }
        }
      }
    },
    "/v2/devices/networksettings": {
      "get": {
        "tags": ["Devices"],
        "summary": "This method instructs the device to return its network settings.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Id of the device."
          },
          {
            "name": "interfaces",
            "in": "query",
            "required": true,
            "type": "object[]",
            "description": "Array of interface objects. Required"
          },
          {
            "name": "interfaces.name",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Name of interface. Optional"
          },
          {
            "name": "interfaces.macAddress",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "MacAddress of network interface. Required"
          },
          {
            "name": "interfaces.state",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "State of network interface. Can be up or down. Optional."
          },
          {
            "name": "interfaces.ipAddress",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Local IP of network interface. Required when dhcpEnabled = true. Required"
          },
          {
            "name": "interfaces.subnet",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Subnet mask used on network interface. Required when dhcpEnabled = true. Required"
          },
          {
            "name": "interfaces.defaultGateway",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Default gateway address used on network interface. Required when dhcpEnabled = true. Required"
          },
          {
            "name": "interfaces.dhcpEnabled",
            "in": "query",
            "required": true,
            "type": "bool",
            "description": "Indicates whether DHCP is enabled on network interface. Can be true or false. Required"
          },
          {
            "name": "interfaces.dnsStatic",
            "in": "query",
            "required": false,
            "type": "bool",
            "description": "This field sets whether statis DNS is used on this interface. network interface. Can be true or false. Optional"
          },
          {
            "name": "interfaces.dnsServers",
            "in": "query",
            "required": true,
            "type": "string[]",
            "description": "This field sets an array of DNS server values for the given interface. Required"
          },
          {
            "name": "interfaces.speed",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "This field configures the speed of the given interface. Values can be - 10, 100, 1000, 10000, AUTO.Optional"
          },
          {
            "name": "interfaces.duplex",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "This field configures the duplex value of the given interface. Values can be FULL or HALF.Optional"
          },
          {
            "name": "interfaces.type",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "This field returns the type for this interface. It can be - wireless, wired or virtual.Optional"
          },
          {
            "name": "interfaces.stateActual",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "This field returns the actual state for this interface. It can be up, down or disconnected.Optional"
          },
          {
            "name": "interfaces.speedActual",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "This field returns the actual speed of the interface (unit is Mbit per second). Can be - 10,100, 1000, 10000.Optional"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/DevicesNetworkSettingsRead" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t  \"deviceId\": \"5d792a03513272d4ea07354c\",\n       \"deviceName\": \"genericDeviceName\",\n       \"interfaces\" : [\n\t\t\t\t{\n\t\t\t\t\"name\": \"name\",\n\t\t\t\t\"macAddress\": \"11:22:33:AA:BB:SS\",\n\t\t\t\t\"state\": \"up\",\n\t\t\t\t\"ipAddress\": \"192.168.1.103\",\n\t\t\t\t\"subnetMask\": \"255.255.255.0\",\n\t\t\t\t\"defaultGateway\": \"192.168.1.1\",\n\t\t\t\t\"dhcpEnabled\": \"false\",\n\t\t\t\t\"dnsStatic\": \"dnsStatic\",\n\t\t\t\t\"dnsServers\": [\n  \t\t\t\t\"192.168.1.1\", \"0.0.0.0\"\n\t\t\t\t],\n\t\t\t\t\"speed\": \"10\",\n\t\t\t\t\"duplex\": \"FULL\",\n\t\t\t\t\"type\" : wired,\n\t\t\t\t\"stateActual\" : up,\n\t\t\t\t\"speedActual\" : 100,\n\t\t\t\t}\n\t\t\t ]\n       \"webPagePort\": 443,\n     }"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Devices"],
        "summary": "Instruct the device to set its network settings.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instruct the device to set its network settings.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DevicesNetworkSettingsSetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/DevicesNetworkSettingsSet" }
          }
        }
      }
    },
    "/v1/devices/networksettings": {
      "get": {
        "tags": ["Devices"],
        "summary": "This method instructs the device to return its network settings.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Id of the device."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/DevicesNetworkSettingsRead" },
            "examples": {
              "Success-Response:": {
                "value": "{\n  \"deviceName\": \"genericDeviceName\",\n  \"deviceIpAddress\": \"192.168.1.120\",\n  \"deviceSubnetMask\": \"255.255.255.0\",\n  \"deviceDefaultGateway\": \"192.168.1.0\",\n  \"dhcpEnabled\": true,\n  \"dnsServer1\": \"8.8.8.8\",\n  \"dnsServer2\": \"4.4.4.4\",\n  \"webPagePort\": 443,\n}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Devices"],
        "summary": "Instruct the device to set its network settings.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instruct the device to set its network settings.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DevicesNetworkSettingsSetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/DevicesNetworkSettingsSet" }
          }
        }
      }
    },
    "/v1/devices/notifications": {
      "put": {
        "tags": ["Devices"],
        "summary": "Update a device's notification settings for your account.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Update a device's notification settings for your account.",
            "required": true,
            "schema": { "$ref": "#/definitions/DevicesNotificationsRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/devices/pro": {
      "get": {
        "tags": ["Devices"],
        "summary": "Returns a list of pro devices given a location id.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/DevicesProRead" },
            "examples": {
              "Success-Response:": {
                "value": "{\n       \"items\": [\n         {\n           \"brand\": \"OvrC\",\n           \"class\": \"OVRC\",\n           \"companyId\": \"548227d3eff39f865700000b\",\n           \"connected\": true,\n           \"customerId\": \"5cfa788fd5e6b520536d6f6c\",\n           \"deviceId\": \"5cfa8694b46f7b3a55244312\",\n           \"firmware\": \"5.1.0.2\",\n           \"hasNotificationsEnabled\": true,\n           \"ipAddress\": \"10.21.0.103\",\n           \"lanAddress\": \"192.168.1.3\",\n           \"locationId\": \"5cfa7890d5e6b520536d6f6d\",\n           \"macAddress\": \"D4:6A:91:01:02:03\",\n           \"model\": \"OVRC-300-PRO\",\n           \"name\": \"OVRC-300-PRO\",\n\t\t      \"notes\": \"device notes go here\",\n           \"platform\": \"BPi\",\n           \"type\": \"HUB\"\n           \"lastSeenTime\": 2020-11-18T19:00:00-05:00,\n           \"hasFirmwareUpdate\": false,\n           \"firmwareUpdateStatus\": \"NONE\"\n           \"hasNotificationsEnabled\": true\n           \"hasWebConnectEnabled\": true,\n\t\t\t  \"isUPnPEnabled\": false,\n           \"webConnectDetails\": [\n             {\n               \"port\": 80\n               \"protocol\": \"HTTP\",\n             }\n           ]\n         }\n       ],\n       \"totalCount\": 1,\n       \"offset\": 0,\n       \"limit\": 1\n     }"
              }
            }
          }
        }
      }
    },
    "/v1/devices": {
      "get": {
        "tags": ["Devices"],
        "summary": "Returns a list of devices given a location id. Supports search/filter/sort/limit/offset.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The sort can equal &quot;asc&quot; or &quot;desc&quot; i.e. firmware:asc"
          },
          {
            "name": "monitored",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Use with sort=notify for the equivalent of sort=monitored"
          },
          {
            "name": "degraded",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Use with sort=notify for the equivalent of sort=degraded (puts monitored, degraded devices on top)"
          },
          {
            "name": "filter",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "comma separated list of options to narrow search. - locationId: to limit to devices from specific location - roomId: to limit to devices from a specific room (should be used in conjunction with location filter) - connected:true to show only connected devices - connected:false to show only disconnected devices - degraded:true to show only degraded devices - name:* to show all device names (default if not specified) - name:*router to show all devices with router in the name"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/DevicesRead" },
            "examples": {
              "Success-Response:": {
                "value": "{\n       \"items\": [\n         {\n           \"brand\": \"Araknis Networks\",\n           \"class\": \"OVRC\",\n           \"companyId\": \"548227d3eff39f865700000b\",\n           \"connected\": false,\n           \"customerId\": \"59975e5803b12b33643df75e\",\n           \"deviceId\": \"599760df56538d6ca226b02f\",\n           \"firmware\": \"1.2.00\",\n           \"hasNotificationsEnabled\": true,\n           \"ipAddress\": \"10.21.0.103\",\n           \"lanAddress\": \"192.168.1.3\",\n           \"locationId\": \"59975e5803b12b33643df75d\",\n           \"macAddress\": \"D4:6A:91:57:D9:E5\",\n\t      \"activeMacAddress\": \"D4:6A:91:57:D9:E5\",\n           \"model\": \"AN-310-SW-24-POE\",\n           \"name\": \"AN-310-SW-24-POE\",\n\t      \"notes\": \"device notes go here\",\n           \"platform\": \"RTL8382\",\n\t      \"roomId\": \"624744073a95f5fe2715455d\",\n           \"type\": \"SWITCH\",\n           \"lastSeenTime\": 2018-11-18T19:00:00-05:00,\n           \"hasFirmwareUpdate\": true,\n           \"firmwareUpdateStatus\": \"NONE\",\n           \"hasNotificationsEnabled\": true,\n           \"hasWebConnectEnabled\": true,\n\t      \"isUPnPEnabled\": false,\n           \"hasGuacData\": true,\n           \"webConnectDetails\": [\n             {\n               \"port\": 80\n               \"protocol\": \"HTTP\",\n             },\n             {\n               \"port\": 8080,\n               \"protocol\": \"HTTPS\",\n             }\n           ]\n         }\n       ],\n       \"totalCount\": 30,\n       \"offset\": 0,\n       \"limit\": 1\n     }"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Devices"],
        "summary": "Update details about a device.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Update details about a device.",
            "required": true,
            "schema": { "$ref": "#/definitions/DevicesUpdateRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/devices/timeseries": {
      "post": {
        "tags": ["Devices"],
        "summary": "Reads time-series data for either WAPs (throughput) or HUBs (speedtest) for graphing.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Reads time-series data for either WAPs (throughput) or HUBs (speedtest) for graphing.",
            "required": true,
            "schema": { "$ref": "#/definitions/DevicesReadTimeSeriesRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/devices/reset": {
      "post": {
        "tags": ["Devices"],
        "summary": "Instructs the device to perform a soft reset.  This is NOT a factory reset â it is a reboot of the device.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instructs the device to perform a soft reset.  This is NOT a factory reset â it is a reboot of the device.",
            "required": true,
            "schema": { "$ref": "#/definitions/DevicesResetRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/devices/room": {
      "put": {
        "tags": ["Devices"],
        "summary": "Assigns a device to a room.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Assigns a device to a room.",
            "required": true,
            "schema": { "$ref": "#/definitions/DevicesRoomSetRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/devices/snapshot": {
      "get": {
        "tags": ["Devices"],
        "summary": "Instructs a device with access to a camera to take a snapshot.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Database GUID of device.  The device may have access to a camera, or it may be an OvrC Pro device that can access another device with a camera."
          },
          {
            "name": "channel",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The channel of an NVR, DVR, or Chime doorbell."
          },
          {
            "name": "resolution",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The resolution of a Chime doorbell snapshot."
          },
          {
            "name": "quality",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The quality of a Chime doorbell snapshot."
          },
          {
            "name": "streamid",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The stream id of a Chime doorbell."
          },
          {
            "name": "fileType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Can be used to specify the image file type. (Always jpg right now)"
          },
          {
            "name": "targetMac",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The MAC address of a device that is proxied by the above device.  (Required if the above device is an OvrC Pro device.)"
          },
          {
            "name": "protocol",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The value of the device document's protocols object that contains the CameraSnapshotGroup and CameraSnapshotCard widget (i.e. &quot;ONVIF&quot;). (Required if the device above is an OvrC Pro device.)"
          },
          {
            "name": "internalPath",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "THe value of the device document's protocols..CameraSnapshotGroup.children.props.internalPath (i.e. http://192.168.1.178:80/onvifsnapshot/media_service/snapshot?channel=1&amp;subtype=0). (Required if the device above is an OvrC Pro device.)"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/DevicesSnapshotGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n  \"url\": \"https://snapav-snapshots.s3.amazonaws.com/03afe9b5-acfe-4d18-aa13-69c5dd378f21.jpg?AWSAccessKeyId=SOMEAWSKEY&Expires=1561047277&Signature=OUw7RW8maKdnJt7DIPzIa7ttns8%3D\"\n}"
              }
            }
          }
        }
      }
    },
    "/v1/devices/timesettings": {
      "get": {
        "tags": ["Devices"],
        "summary": "This method instructs the device to return its time settings.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Id of the device."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/DevicesTimeSettingsRead" },
            "examples": {
              "Success-Response:": {
                "value": "{\n  \"name\": \"America/New_York\",\n  \"notes\": \"Eastern Time (US & Canada)\",\n  \"offset\": 300,\n  \"currentTime\": \"2019-03-24T13:42:45-04:00\",\n}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Devices"],
        "summary": "This method instructs the device to set its time settings.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "This method instructs the device to set its time settings.",
            "required": true,
            "schema": { "$ref": "#/definitions/DevicesTimeSettingsSetRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/devices/transfer": {
      "post": {
        "tags": ["Devices"],
        "summary": "Transfers a device to another location, or inventory.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Transfers a device to another location, or inventory.",
            "required": true,
            "schema": { "$ref": "#/definitions/DevicesTransferRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/devices/unclaim": {
      "post": {
        "tags": ["Devices"],
        "summary": "Removes a device from its current account.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Removes a device from its current account.",
            "required": true,
            "schema": { "$ref": "#/definitions/DevicesUnclaimRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/devices/webconnect": {
      "post": {
        "tags": ["Devices"],
        "summary": "Remotely web-connect to a device.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Remotely web-connect to a device.",
            "required": true,
            "schema": { "$ref": "#/definitions/DevicesWebconnectRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/mesh/discover": {
      "post": {
        "tags": ["Devices"],
        "summary": "Tells Mesh Controller at location to discover nodes. NOTE that discovery takes 5 seconds or more on device.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Tells Mesh Controller at location to discover nodes. NOTE that discovery takes 5 seconds or more on device.",
            "required": true,
            "schema": { "$ref": "#/definitions/MeshNodeDiscoverRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/MeshNodeDiscover" }
            }
          }
        }
      }
    },
    "/v1/mesh/initiateTransformation": {
      "post": {
        "tags": ["Devices"],
        "summary": "Sets controller and nodes for mesh network along with setting 3 ssid network configurations",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Sets controller and nodes for mesh network along with setting 3 ssid network configurations",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Mesh_Initiate_TransformationRequest"
            }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/mesh/transformLocationToStandAlone": {
      "post": {
        "tags": ["Devices"],
        "summary": "Updates opMode to AP for mesh supported devices for a given location",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Updates opMode to AP for mesh supported devices for a given location",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Mesh_Transform_Location_To_Stand_AloneRequest"
            }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/mesh/updateOpMode": {
      "post": {
        "tags": ["Devices"],
        "summary": "Update opMode and opRole for mesh supported devices for a given location",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Update opMode and opRole for mesh supported devices for a given location",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Mesh_Update_Operation_ModeRequest"
            }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/devices/throughput": {
      "get": {
        "tags": ["Devices"],
        "summary": "Reads throughput data",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "DeviceId for the device you'd like data for."
          },
          {
            "name": "endDate",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Max date to pull data up to. Format &quot;YYYY-MM-DDTHH:MM:SS.SSSZ&quot;"
          },
          {
            "name": "span",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "How far back, from the endDate, to pull data for."
          },
          {
            "name": "env",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Based on the target type,"
          },
          {
            "name": "radio",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Denotes the radio(s) being requested."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "WAP Success Response:": {
                "value": "{\n    \"radio.ALL.rx\" : {\n        \"xAxis\" : {\n            \"timestamp\" : [\n                1557763302000,\n                1557763903000,\n                ...,\n                1557849099000\n            ]\n        },\n       \"yAxis\" : {\n           \"sum\" : [\n                0,\n                0,\n                18125792,\n                29656,\n                ...,\n                112264,\n           ]\n       }\n    },\n    \"radio.ALL.tx\": {\n        \"xAxis\" : {\n            \"timestamp\" : [\n                1557763302000,\n                1557763903000,\n                ...,\n                1557849099000\n            ]\n        \"yAxis\" : {\n           \"sum\" : [\n                0,\n                0,\n                239232,\n                257024,\n                ...,\n                640128,\n           ]\n        }\n    },\n    \"radio.ALL.clients\": {\n        \"xAxis\" : {\n            \"timestamp\" : [\n                1557763302000,\n                1557763903000,\n                ...,\n                1557849099000\n            ]\n        \"yAxis\" : {\n           \"max\" : [\n                0,\n                0,\n                239232,\n                257024,\n                ...,\n                640128,\n           ]\n        }\n    },\n    \"radio.ALL.networks\": {\n        \"xAxis\" : {\n            \"timestamp\" : [\n                1557763302000,\n                1557763903000,\n                ...,\n                1557849099000\n            ]\n        \"yAxis\" : {\n           \"max\" : [\n                2,\n                2,\n                2,\n                2,\n                ...,\n                2\n           ]\n        }\n    }\n}"
              }
            }
          }
        }
      }
    },
    "/v1/doorbell/status": {
      "get": {
        "tags": ["Doorbell"],
        "summary": "Returns the latest status for a given doorbell.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/DoorbellStatusGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n         \"deviceId\": \"55e4ab6c1a6e63a011002a84\",\n         \"status\": \"Online\",\n         \"signalStrength\": \"-58 dBm\",\n         \"ssid\": \"default\",\n         \"band\": \"2.412 GHz\",\n         \"channel\": \"6\",\n         \"countryCode\": \"US\",\n\t\t}"
              }
            }
          }
        }
      }
    },
    "/v1/esa/status": {
      "get": {
        "tags": ["Episode_Amplifier_Commands"],
        "summary": "Instructs the amplifier to return the overall system status.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/EpisodeAmplifierStatusGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n     \t\"deviceId\": \"FF:FF:FF:FF:FF:FF\",\n\t\t\t\"dateTime\": \"2013-09-10T08:15:30-05:00\",\n     \t\"uptime\": \"20 Day(s) 12Hr 54Min\",\n     \t\"systemFault\": \"OK\",\n     \t\"deviceStatus\": \"ON\",\n    \t\t\"voltageValue\": \"Safe\",\n      \t\"tempValue\": 90,\n      \t\"inputs\": [\n          \t{\n             \t\"channel\": 1,\n               \t\"channelFault\": \"OK\"\n          \t}\n       \t],\n       \t\"outputs\": [\n           \t{\n               \t\"channel\": 1,\n               \t\"channelFault\": \"OK\",\n               \t\"level\": 20,\n               \t\"clipping\": \"false\"\n           \t}\n       \t]\n\t\t}"
              }
            }
          }
        }
      }
    },
    "/v1/firmware": {
      "get": {
        "tags": ["Firmware"],
        "summary": "Given a deviceId, returns the current firmware AND the latest available firmware to which the device can update.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Database GUID of device."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/FirmwareRead" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t    \"current\": {\n\t\t        \"fileName\": \"Wattbox_WB10.7327_20170425.bin\",\n\t\t        \"fileSize\": \"4100096\",\n\t\t        \"releaseDate\": \"2017-04-16T20:00:00-04:00\",\n\t\t        \"releaseNotes\": \"<ul><li>Minor Bug Fixes</li></ul>\",\n\t\t        \"url\": \"https://s3.amazonaws.com/snapav-firmware/Power/Wattbox_WB10.7327_20170425.bin\",\n\t\t        \"version\": \"WB10.7327\"\n\t\t    },\n\t\t    \"upgrade\": {\n\t\t        \"fileName\": \"Wattbox_WB10.6c14_20161220.bin\",\n\t\t        \"fileSize\": \"4096000\",\n\t\t        \"releaseDate\": \"2016-12-19T19:00:00-05:00\",\n\t\t        \"releaseNotes\": \"<b>This firmware provides capabilities for your existing WattBox to work with a few additional products</b><br/><ul><li>3 new UPS models (WB-OVRC-UPS-1100/1500/2000-1) available for sale on 1/13/2017</li><li>1 new trigger accessory (WB-ACC-TRIGGER) available for sale on 1/13/2017</li></ul><b>Important notes on \\\"Factory Default\\\":</b><br/><ul><li>This firmware does not change username and password on your WattBox. However, if you factory reset the device, both the username and password will be reset to wattbox. This is a change from the previous factory default settings.</li></ul><b>The firmware also includes general bug fixes and improvements to product reliability.</b>\",\n\t\t        \"url\": \"https://s3.amazonaws.com/snapav-firmware/Power/Wattbox_WB10.6c14_20161220.bin\",\n\t\t        \"version\": \"WB10.6c14\"\n\t\t    }\n\t\t}"
              }
            }
          }
        }
      }
    },
    "/v1/groups": {
      "post": {
        "tags": ["Groups"],
        "summary": "Creates a Group.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Creates a Group.",
            "required": true,
            "schema": { "$ref": "#/definitions/GroupsCreateRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      },
      "delete": {
        "tags": ["Groups"],
        "summary": "Deletes group(s).",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Deletes group(s).",
            "required": true,
            "schema": { "$ref": "#/definitions/GroupsDeleteRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      },
      "get": {
        "tags": ["Groups"],
        "summary": "Returns group information.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/GroupsRead" },
            "examples": {
              "Success-Response:": {
                "value": "{\n  \"items\": [\n    {\n      \"groupId\" : \"5c096390e2f887b5a6193932\",\n      \"name\" : \"Owner\",\n      \"companyId\" : \"5c096356e2f887b5a6193931\",\n      \"description\" : \"Owner's group.\",\n      \"userCount\": 1,\n      \"customerCount\": 4,\n      \"isOwner\" : true,\n      \"hasAllCustomers\" : true,\n      \"customers\": [],\n      \"hasAdministrationActions\" : true,\n      \"hasDeleteActions\" : true,\n      \"hasSurveillanceActions\" : true,\n      \"canTransferOwnership\" : true\n    },\n    {\n     \"groupId\" : \"5c096390e2f887b5a6193932\",\n      \"name\" : \"Admin\",\n      \"companyId\" : \"5c096356e2f887b5a6193931\",\n      \"description\" : \"Administrators group.\",\n      \"userCount\": 12,\n      \"customerCount\": 50,\n      \"isOwner\" : false,\n      \"hasAllCustomers\" : true,\n      \"customers\": [],\n      \"hasAdministrationActions\" : true,\n      \"hasDeleteActions\" : true,\n      \"hasSurveillanceActions\" : true,\n      \"canTransferOwnership\" : false\n    },\n    {\n      \"groupId\" : \"5c096390e2f887b5a6193932\",\n      \"name\" : \"Technicians\",\n      \"companyId\" : \"5c096356e2f887b5a6193931\",\n      \"description\" : \"Technician's group.\",\n      \"userCount\": 23,\n      \"customerCount\": 42,\n      \"isOwner\" : false,\n      \"hasAllCustomers\" : false,\n      \"customers\": [\n        {\n          \"customerId\": \"5a1da4c6132018768191ab58\",\n          \"hasAllLocations\": false,\n          \"locations\": [\n            {\n              \"locationId\": \"5a30db82915b9c323b9a9f23\"\n            }\n          ]\n        },\n        {\n          \"customerId\": \"5af1c7a4998f08127c8301e1\",\n          \"hasAllLocations\": true,\n          \"locations\": []\n        },\n      \"hasAdministrationActions\" : false,\n      \"hasDeleteActions\" : true,\n      \"hasSurveillanceActions\" : false,\n      \"canTransferOwnership\" : true\n    }\n  ],\n  \"totalCount\": 3,\n  \"offset\": 0,\n  \"limit\": 5\n}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Groups"],
        "summary": "Updates group information.  Allows for updates to name and permissions of a group. Does NOT update assignment of users or customers for a group; for assignment updates be sure to use the appropriate assign API.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Updates group information.  Allows for updates to name and permissions of a group. Does NOT update assignment of users or customers for a group; for assignment updates be sure to use the appropriate assign API.",
            "required": true,
            "schema": { "$ref": "#/definitions/GroupsUpdateRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v2/groups": {
      "post": {
        "tags": ["Groups"],
        "summary": "Create group, groups customer access and groups users It will replace 3 consecutive calls to API which are v1/groups, v1/groups/setusers and v1/groups/customeraccesss. After this endpoint and {PUT} v2/groups is verified and successfully implemented those 3 endpoints will be deprecated.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Create group, groups customer access and groups users It will replace 3 consecutive calls to API which are v1/groups, v1/groups/setusers and v1/groups/customeraccesss. After this endpoint and {PUT} v2/groups is verified and successfully implemented those 3 endpoints will be deprecated.",
            "required": true,
            "schema": { "$ref": "#/definitions/GroupsCreateV2Request" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      },
      "put": {
        "tags": ["Groups"],
        "summary": "Updates group information.  Allows for updates to name and permissions of a group. This endpoint will allow update of customers and users in group. It will replace 3 consecutive calls to API which are v1/groups, v1/groups/setusers and v1/groups/customeraccesss. After this endpoint is verified and successfully implemented those 3 endpoints will be deprecated.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Updates group information.  Allows for updates to name and permissions of a group. This endpoint will allow update of customers and users in group. It will replace 3 consecutive calls to API which are v1/groups, v1/groups/setusers and v1/groups/customeraccesss. After this endpoint is verified and successfully implemented those 3 endpoints will be deprecated.",
            "required": true,
            "schema": { "$ref": "#/definitions/GroupsUpdateV2Request" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/groups/customeraccesss": {
      "post": {
        "tags": ["Groups"],
        "summary": "Sets customers (all locations), or specific locations, for one, or more, groups. Please note, customers with specific locations are implied - so you either put the customerId in the first array for ALL LOCATIONS, OR you put the specific locationIds in the second array.  Their parent customer(s) are implied access.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Sets customers (all locations), or specific locations, for one, or more, groups. Please note, customers with specific locations are implied - so you either put the customerId in the first array for ALL LOCATIONS, OR you put the specific locationIds in the second array.  Their parent customer(s) are implied access.",
            "required": true,
            "schema": { "$ref": "#/definitions/GroupsSetCustomerAccessRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/groups/setusers": {
      "post": {
        "tags": ["Groups"],
        "summary": "Sets users for one, or more, groups.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Sets users for one, or more, groups.",
            "required": true,
            "schema": { "$ref": "#/definitions/GroupsSetUsersRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/hub/forgetdevice": {
      "post": {
        "tags": ["HUB"],
        "summary": "Instructs a hub to forget(hide) a specific device.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instructs a hub to forget(hide) a specific device.",
            "required": true,
            "schema": { "$ref": "#/definitions/HubForgetDeviceRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/hub/performaction": {
      "post": {
        "tags": ["HUB"],
        "summary": "Instructs a hub to perform a generic action used with GUAC.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instructs a hub to perform a generic action used with GUAC.",
            "required": true,
            "schema": { "$ref": "#/definitions/HubPerformActionRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/hub/periodicservicesfrequency": {
      "get": {
        "tags": ["HUB"],
        "summary": "Retrieves frequency and status of device discovery, speed test, and health monitoring service.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/HubPeriodicServicesFrequencyGet"
            },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t\t\"deviceId\": \"5cdad7a3b30fc2082deb94af\",\n\t\t\t\"deviceDiscovery\": {\n\t\t\t\t\"frequency\": 3600,\n\t\t\t\t\"isEnabled\": true\n\t\t\t},\n\t\t\t\"speedTest\": {\n\t\t\t\t\"frequency\": 3600,\n\t\t\t\t\"isEnabled\": true\n\t\t\t},\n\t\t\t\"healthMonitor\": {\n\t\t\t\t\"frequency\": 300,\n\t\t\t\t\"isEnabled\": true\n\t\t\t},\n\t\t\t\"traceroute\": {\n\t\t\t\t\"frequency\": 3600,\n\t\t\t\t\"isEnabled\": true\n\t\t\t}\n     }"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["HUB"],
        "summary": "Sets frequency and status of device discovery, speed test, and health monitoring service.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Sets frequency and status of device discovery, speed test, and health monitoring service.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HubPeriodicServicesFrequencySetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/HubPeriodicServicesFrequencySet"
            }
          }
        }
      }
    },
    "/v1/hub/persistdata": {
      "put": {
        "tags": ["HUB"],
        "summary": "Sets persist data for a HUB.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Sets persist data for a HUB.",
            "required": true,
            "schema": { "$ref": "#/definitions/HubPersistDataPutRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/HubPersistDataPut" }
          }
        }
      }
    },
    "/v1/hub/pinghost": {
      "post": {
        "tags": ["HUB"],
        "summary": "Instructs a hub to ping a host.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instructs a hub to ping a host.",
            "required": true,
            "schema": { "$ref": "#/definitions/HubPingHostRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/HubPingHost" }
          }
        }
      }
    },
    "/v1/hub/portscansettings": {
      "get": {
        "tags": ["HUB"],
        "summary": "Retrieves the port scanning configuration information of the hub.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The device's device ID."
          },
          {
            "name": "selection",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Indicates whether the hub will return the default or current list."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/HubPortScanSettingsGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t    \"deviceId\": \"5cdad7a3b30fc2082deb94af\",\n\t\t    \"ports\": [\n\t\t        {\n\t\t            \"default\": true,\n\t\t            \"desc\": \"Default\",\n\t\t            \"port\": 22,\n\t\t            \"protocol\": \"SSH\"\n\t\t        },\n\t\t        {\n\t\t            \"default\": true,\n\t\t            \"desc\": \"Default\",\n\t\t            \"port\": 23,\n\t\t            \"protocol\": \"TELNET\"\n\t\t        },\n\t\t        {\n\t\t            \"default\": true,\n\t\t            \"desc\": \"Default\",\n\t\t            \"port\": 80,\n\t\t            \"protocol\": \"HTTP\"\n\t\t        },\n\t\t        {\n\t\t            \"default\": true,\n\t\t            \"desc\": \"Default\",\n\t\t            \"port\": 443,\n\t\t            \"protocol\": \"HTTPS\"\n\t\t        },\n\t\t        {\n\t\t            \"default\": true,\n\t\t            \"desc\": \"Default\",\n\t\t            \"port\": 5000,\n\t\t            \"protocol\": \"HTTP\"\n\t\t        },\n\t\t        {\n\t\t            \"default\": true,\n\t\t            \"desc\": \"Default\",\n\t\t            \"port\": 8008,\n\t\t            \"protocol\": \"HTTP\"\n\t\t        },\n\t\t        {\n\t\t            \"default\": true,\n\t\t            \"desc\": \"Default\",\n\t\t            \"port\": 8080,\n\t\t            \"protocol\": \"HTTP\"\n\t\t        },\n\t\t        {\n\t\t            \"default\": true,\n\t\t            \"desc\": \"Default\",\n\t\t            \"port\": 8443,\n\t\t            \"protocol\": \"HTTPS\"\n\t\t        },\n\t\t        {\n\t\t            \"default\": true,\n\t\t            \"desc\": \"Default\",\n\t\t            \"port\": 8888,\n\t\t            \"protocol\": \"HTTP\"\n\t\t        }\n\t\t    ]\n\t\t}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["HUB"],
        "summary": "Instructs the hub to set the current port scanning configuration information.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instructs the hub to set the current port scanning configuration information.",
            "required": true,
            "schema": { "$ref": "#/definitions/HubPortScanSettingsSetRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/HubPortScanSettingsSet" }
          }
        }
      }
    },
    "/v1/hub/rebootdevice": {
      "post": {
        "tags": ["HUB"],
        "summary": "Asks the HUB to reboot a single device.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Asks the HUB to reboot a single device.",
            "required": true,
            "schema": { "$ref": "#/definitions/HubRebootDeviceRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/HubRebootDevice" }
          }
        }
      }
    },
    "/v1/hub/scandevice": {
      "post": {
        "tags": ["HUB"],
        "summary": "Asks the HUB to scan a single device and update its information.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Asks the HUB to scan a single device and update its information.",
            "required": true,
            "schema": { "$ref": "#/definitions/HubScanDeviceRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/HubScanDevice" }
          }
        }
      }
    },
    "/v1/hub/status": {
      "get": {
        "tags": ["HUB"],
        "summary": "Retrieves HUB status information.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/HubStatusGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t    \"deviceId\": \"587f7c3d479a3bb289cc4651\",\n\t\t\t\"uptime\": 1887808000,\n\t\t\t\"cpuUsage\": 0,\n\t\t\t\"memoryFree\": \"972 MB\",\n\t\t\t\"memoryUsed\": \"34 MB\",\n\t\t\t\"lastDeviceDiscoveryTime\": \"2019-08-21T17:50:01.56Z\",\n\t\t\t\"lastSpeedTestTime\": \"2019-08-21T15:54:36.656Z\"\n\t\t}"
              }
            }
          }
        }
      }
    },
    "/v1/hub/vlansettings": {
      "get": {
        "tags": ["HUB"],
        "summary": "Retrieves VLAN configuration information.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/HubVLANSettingsGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t    \"deviceId\": \"587f7c3d479a3bb289cc4651\",\n\t\t    \"vlans\": [\n\t\t        {\n\t\t            \"id\": 2,\n\t\t            \"ip\": \"10.102.107.24\",\n\t\t            \"subnetMask\": \"255.255.255.0\"\n\t\t        }\n\t\t    ]\n\t\t}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["HUB"],
        "summary": "Sets VLAN configuration information.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Sets VLAN configuration information.",
            "required": true,
            "schema": { "$ref": "#/definitions/HubVLANSettingsSetRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/HubVLANSettingsSet" }
          }
        }
      }
    },
    "/v1/locations/contentfiltering": {
      "get": {
        "tags": ["Locations"],
        "summary": "Read content filtering information",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "locationId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Database GUID of location to read"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/ContentFilteringGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n        \"isContentFilteringEnabled\" : true,\n        \"contentFilteringOption\" : \"LIGHT\"\n}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Locations"],
        "summary": "Affect content filtering information for a location",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Affect content filtering information for a location",
            "required": true,
            "schema": { "$ref": "#/definitions/ContentFilteringSetRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/ContentFilteringSet" }
          }
        }
      }
    },
    "/v1/locations/linkedresources/download": {
      "get": {
        "tags": ["Locations"],
        "summary": "Upload CSV to s3 bucket and provide link for downloading in response.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "locationId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Location which resources we are getting."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/DownloadLinkedResources" },
            "examples": {
              "Success-Response:": {
                "value": "{\n  \"url\": \"https://ovrc-csv-dev.s3.amazonaws.com/643cc5e9-8f0b-4cf6-a84d-f0689d979220.Location%201.csv?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT5GHIYXBRNTKRTLM%2F20220131%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20220131T095359Z&X-Amz-Expires=900&X-Amz-SignedHeaders=host&X-Amz-Signature=03eef67e96284aab76619817a8bdb41a04aab49fc4e68531804a1fb3125bfa36\"\n}"
              }
            }
          }
        }
      }
    },
    "/v1/locations/linkedresources": {
      "post": {
        "tags": ["Locations"],
        "summary": "Creates a linked resource on given location",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Creates a linked resource on given location",
            "required": true,
            "schema": { "$ref": "#/definitions/LinkedResourceCreateRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      },
      "delete": {
        "tags": ["Locations"],
        "summary": "Deletes selected linked resource.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Deletes selected linked resource.",
            "required": true,
            "schema": { "$ref": "#/definitions/LinkedResourceDeleteRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      },
      "get": {
        "tags": ["Locations"],
        "summary": "Read linked resource on given location. We can read only favourites or all. If all it will return first 5 with isFavorite=true then rest of them.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "locationId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Location which resources we are getting."
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Flag saying should we return only favourites."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/LinkedResourceRead" },
            "examples": {
              "Success-Response:": {
                "value": "{\n  \"count\": 5,\n  \"items\": [\n      {\n          \"linkedResourceId\": \"61e96d01cfc83365e4313981\",\n          \"name\": \"res1\",\n          \"type\": \"image\",\n          \"url\": \"www.res1.com\",\n          \"locationId\": \"61c20b9ad5e6b539eaad6364\",\n          \"isFavorite\": true,\n           \"lastUserModified\": \"Nathan Parmenter\",\n           \"dateModified\": \"2022-01-21T13:49:44.793+01:00\"\n      },\n      {\n          \"linkedResourceId\": \"61e96d03cfc83365e4313988\",\n          \"name\": \"res2\",\n          \"type\": \"image\",\n          \"url\": \"www.res2.com\",\n          \"locationId\": \"61c20b9ad5e6b539eaad6364\",\n          \"isFavorite\": true,\n          \"lastUserModified\": \"Nathan Parmenter\",\n          \"dateModified\": \"2022-01-21T13:49:44.793+01:00\"\n      },\n      {\n          \"linkedResourceId\": \"61e96d03cfc83365e431398f\",\n          \"name\": \"res3\",\n          \"type\": \"image\",\n          \"url\": \"www.res3.com\",\n          \"locationId\": \"61c20b9ad5e6b539eaad6364\",\n          \"isFavorite\": true,\n          \"lastUserModified\": \"Nathan Parmenter\",\n          \"dateModified\": \"2022-01-21T13:49:44.793+01:00\"\n      },\n      {\n          \"linkedResourceId\": \"61e96d05cfc83365e4313996\",\n          \"name\": \"res4\",\n          \"type\": \"image\",\n          \"url\": \"www.res4.com\",\n          \"locationId\": \"61c20b9ad5e6b539eaad6364\",\n          \"isFavorite\": true,\n          \"lastUserModified\": \"Nathan Parmenter\",\n          \"dateModified\": \"2022-01-21T13:49:44.793+01:00\"\n      },\n      {\n          \"linkedResourceId\": \"61eaabe8f4e5724958efa513\",\n          \"name\": \"ovrc home page\",\n          \"type\": \"link\",\n          \"url\": \"www.ovrc.com\",\n          \"locationId\": \"61c20b9ad5e6b539eaad6364\",\n          \"isFavorite\": true,\n           \"lastUserModified\": \"Nathan Parmenter\",\n           \"dateModified\": \"2022-01-21T13:49:44.793+01:00\"\n        }\n    ],\n    \"message\": {\n        \"code\": 200,\n        \"description\": \"You have chosen... wisely.\",\n        \"title\": \"Success!\"\n    }\n}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Locations"],
        "summary": "Update linked resource. We can make it favourite or not, or just update any of its properties.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Update linked resource. We can make it favourite or not, or just update any of its properties.",
            "required": true,
            "schema": { "$ref": "#/definitions/LinkedResourceUpdateRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/locations/scan": {
      "post": {
        "tags": ["Locations"],
        "summary": "Requests the HUB device at this location to initiate a scan.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Requests the HUB device at this location to initiate a scan.",
            "required": true,
            "schema": { "$ref": "#/definitions/LocationScanRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/locations": {
      "post": {
        "tags": ["Locations"],
        "summary": "Creates a customer for a given company.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Creates a customer for a given company.",
            "required": true,
            "schema": { "$ref": "#/definitions/LocationsCreateRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      },
      "delete": {
        "tags": ["Locations"],
        "summary": "Deletes a location, and associated sub-resources, and by default, moves all the devices to inventory. You can also request that the devices be unclaimed.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Deletes a location, and associated sub-resources, and by default, moves all the devices to inventory. You can also request that the devices be unclaimed.",
            "required": true,
            "schema": { "$ref": "#/definitions/LocationsDeleteRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      },
      "get": {
        "tags": ["Locations"],
        "summary": "Read locations.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/LocationsRead" },
            "examples": {
              "Success-Response:": {
                "value": "{\n       \"items\": [\n         {\n           \"address\": \"1900 Broadway, New York, NY 10023, USA\",\n           \"isHubIdle\": true,\n           \"canDelete\": true,\n           \"canGrabSnapshots\": true,\n           \"canTransferToInventory\": false,\n           \"customerId\": \"5b1059f2998f081c9f6c56dc\",\n           \"customerName\": \"Kims AV\",\n           \"customerPhone\": \"1-800-123-4567\",\n           \"deviceCount\": 12,\n           \"firmwareUpdateCount\": 4,\n           \"geometry\": {\n\t\t\t  \t\t\"lat\": 40.771542,\n\t\t\t\t\t\"lng\": -73.98146450000002\n\t\t\t  },\n           \"groupCount\": 4,\n           \"hasNotificationsEnabled\": true,\n           \"hasVerifiedAddress\": true,\n           \"isMonitoredByOwnerOnly\": false,\n           \"isOffline\": true,\n           \"isScanning\": false,\n           \"hasScanDevice\": true,\n           \"isSharedIn\": true,\n           \"isSharedOut\": true,\n           \"ispName\": \"Comcast Corporation\",\n           \"licenseType\": \"basic\",\n           \"locationId\": \"5b1059f3998f081c9f6c56dd\",\n           \"name\": \"1\",\n           \"notes\": \"\",\n           \"offlineDeviceCount\": 3,\n           \"onlineDeviceCount\": 9,\n           \"isHubOnline\": true,\n           \"hasVlanSupport\": true,\n           \"hubDeviceId\": \"5b1059f3998f081a1b2e79df\",\n           \"isRouterOnline\": true,\n           \"isSsidManagementEnabled\" : false,\n           \"ssidManagement\": {\n              \"isPushInProgress\": false,\n              \"isImportInProgress\": false,\n              \"lastImportDate\": \"2020-09-17T12:52:56.527Z\",\n              \"lastPushDate\": \"2020-09-22T19:53:54.041Z\",\n              \"countryCode\": \"GB\",\n              \"isPendingChanges\": false,\n              \"hasCapableDevices\": true,\n              \"hasInternationalDevices\": true,\n              \"isCountryUnlocked\": true,\n              \"hasCompletedImport\": true\n\t\t\t   }\n         },\n       ],\n     }"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Locations"],
        "summary": "Update details about a Location.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Update details about a Location.",
            "required": true,
            "schema": { "$ref": "#/definitions/LocationsUpdateRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/locations/dashboard": {
      "get": {
        "tags": ["Locations"],
        "summary": "Returns location dashboard information",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "locationId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Database GUID of location"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/LocationsDashboard" },
            "examples": {
              "Success-Response:": {
                "value": "{\n    \"canDisplayDHCPClientList\": true,\n    \"canDisplaySpeedTest\": true,\n    \"canDisplayWirelessClientList\": true,\n    \"connected\": 34,\n    \"degraded\": 2,\n    \"disconnected\": 20,\n    \"firmwareUpdates\": 5,\n    \"routers\": 1,\n    \"switches\": 1,\n    \"waps\": 1\n}"
              }
            }
          }
        }
      }
    },
    "/v1/locations/forgetinactive": {
      "post": {
        "tags": ["Locations"],
        "summary": "Instructs a location's HUB to forget all offline discovered devices.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instructs a location's HUB to forget all offline discovered devices.",
            "required": true,
            "schema": { "$ref": "#/definitions/LocationsForgetInactiveRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/locations/prosettings": {
      "get": {
        "tags": ["Locations"],
        "summary": "Gets the Pro device settings for the location.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "locationId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Id of the location you want to update Pro settings for."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/LocationsGetProSettings" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t    \"deviceDiscovery\": {\n\t\t\t\t\"deviceId\": \"548fc4ede1901f8b7700005f\",\n\t\t        \"frequency\": 3600\n\t\t    },\n\t\t    \"healthMonitor\": {\n\t\t\t\t\"deviceId\": \"548fc4ede1901f8b7700005f\",\n\t\t        \"frequency\": 300\n\t\t    },\n\t\t    \"speedTest\": {\n\t\t\t\t\"deviceId\": \"587f7c3d479a3bb289cc4651\",\n\t\t        \"frequency\": 21600\n\t\t    }\n\t\t}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Locations"],
        "summary": "Updates the Pro device settings for the location.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Updates the Pro device settings for the location.",
            "required": true,
            "schema": { "$ref": "#/definitions/LocationsSetProSettingsRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/locations/header": {
      "get": {
        "tags": ["Locations"],
        "summary": "Read locations header",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "locationId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Id of the location you want to get data."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/LocationsHeaderRead" },
            "examples": {
              "Success-Response:": {
                "value": "{\n           \"isHubOnline\": true,\n           \"hasVlanSupport\": true,\n           \"hubDeviceId\": \"5b1059f3998f081a1b2e79df\",\n           \"isRouterOnline\": true,\n\t\t\t  \"isHubIdle\": true,\n           \"isScanning\": false,\n           \"hasScanDevice\": true,\n           \"ssidManagement\": {\n              \"isPushInProgress\": false,\n              \"isImportInProgress\": false,\n              \"lastImportDate\": \"2020-09-17T12:52:56.527Z\",\n              \"lastPushDate\": \"2020-09-22T19:53:54.041Z\",\n              \"countryCode\": \"GB\",\n              \"isPendingChanges\": false,\n              \"hasCapableDevices\": true,\n              \"hasInternationalDevices\": true,\n              \"isCountryUnlocked\": true,\n              \"hasCompletedImport\": true\n\t\t\t   }\n\t\t\t}"
              }
            }
          }
        }
      }
    },
    "/v1/locations/networkclientlists": {
      "post": {
        "tags": ["Locations"],
        "summary": "Returns network clients for specified location.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Returns network clients for specified location.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LocationsNetworkClientListsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/LocationsNetworkClientLists" }
            }
          }
        }
      }
    },
    "/v1/locations/notifications": {
      "put": {
        "tags": ["Locations"],
        "summary": "Update a location's notification settings for your account. When you disable all location's notification settings, the customer's notification setting will also be disabled. When you enable a location's notification settings, it ensures that the customer's notification setting is also enabled.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Update a location's notification settings for your account. When you disable all location's notification settings, the customer's notification setting will also be disabled. When you enable a location's notification settings, it ensures that the customer's notification setting is also enabled.",
            "required": true,
            "schema": { "$ref": "#/definitions/LocationsNotificationsRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v2/locations": {
      "get": {
        "tags": ["Locations"],
        "summary": "Read locations V2. Optimised v1, removing site settings data",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "locationId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Id of the location you want to get data."
          },
          {
            "name": "customerId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Id of the customer you want to get data. Use only one of these 2!"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "offset from start to get items"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "limit of items (default 1)"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/LocationsReadV2" },
            "examples": {
              "Success-Response:": {
                "value": "{\n       \"items\": [\n         {\n           \"address\": \"1900 Broadway, New York, NY 10023, USA\",\n           \"canDelete\": true,\n           \"canGrabSnapshots\": true,\n           \"customerId\": \"5b1059f2998f081c9f6c56dc\",\n           \"customerName\": \"Kims AV\",\n           \"firmwareUpdateCount\": 4,\n           \"deviceCount\": 12,\n           \"geometry\": {\n\t\t\t  \t\t\"lat\": 40.771542,\n\t\t\t\t\t\"lng\": -73.98146450000002\n\t\t\t  },\n           \"groupCount\": 4,\n           \"hasNotificationsEnabled\": true,\n           \"isMonitoredByOwnerOnly\": false,\n           \"isOffline\": true,\n           \"isSharedIn\": true,\n           \"isSharedOut\": true,\n           \"ispName\": \"Comcast Corporation\",\n           \"licenseType\": \"basic\",\n           \"locationId\": \"5b1059f3998f081c9f6c56dd\",\n           \"name\": \"1\",\n           \"onlineDeviceCount\": 9,\n\t\t\t  \"timeZoneOffsetMinutes\" : \"-570\",\n\t\t\t  \"timeZoneId\" : \"5a04a6c199447b1a235f0143\",\n\t\t\t  \"jobCode\":\"Home\",\n         }\n       ],\n\t\t  \"totalCount\": 1\n     }"
              }
            }
          }
        }
      }
    },
    "/v1/locations/groups": {
      "post": {
        "tags": ["Locations"],
        "summary": "Sets groups for one, or more, locations.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Sets groups for one, or more, locations.",
            "required": true,
            "schema": { "$ref": "#/definitions/LocationsSetGroupsRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/locations/simple": {
      "get": {
        "tags": ["Locations"],
        "summary": "Read locations data, limited processing",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/LocationsSimpleRead" },
            "examples": {
              "Success-Response:": {
                "value": "{\n  \"items\": [\n    {\n      \"address\": \"6500 Excelsior Boulevard, St. Louis Park, MN, USA\",\n      \"canDelete\": true,\n      \"canGrabSnapshots\": true,\n      \"canTransferToInventory\": true,\n      \"customerId\": \"5e8b8617d5e6b54c97b8a97a\",\n      \"customerName\": \"Eric Woodward\",\n      \"customerPhone\": \"+18888888888\",\n      \"degradedDeviceCount\": 0,\n      \"deviceCount\": 0,\n      \"firmwareUpdateCount\": 0,\n      \"geometry\": {\n          \"lat\": 44.9306363,\n          \"lng\": -93.3621119\n      },\n      \"groupCount\": 15,\n      \"hasNotificationsEnabled\": false,\n      \"hasVerifiedAddress\": true,\n      \"isMonitoredByOwnerOnly\": false,\n      \"isOffline\": false,\n      \"isSharedIn\": false,\n      \"isSharedOut\": true,\n      \"isSsidManagementEnabled\": true,\n      \"ispName\": null,\n      \"jobCode\": null,\n      \"licenseType\": \"basic\",\n      \"locationId\": \"5e8b861bd5e6b54c97b8a97c\",\n      \"name\": \"Beach House\",\n      \"notes\": null,\n      \"offlineDeviceCount\": 0,\n      \"onlineDeviceCount\": 0,\n      \"timeZoneOffsetMinutes\": null\n    },\n  ],\n}"
              }
            }
          }
        }
      }
    },
    "/v1/locations/speedtest": {
      "get": {
        "tags": ["Locations"],
        "summary": "Returns speed test results for your location.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "locationId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Location to gather results for."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/LocationsSpeedTestGet" },
            "examples": {
              "Success Response:": {
                "value": "{\n    \"data\": [\n        {\n            \"createdAt\": \"2019-09-16T01:30:34.717-04:00\",\n            \"download\": 91.737305,\n            \"latency\": 19,\n            \"upload\": 91.858398\n        },\n        {\n            \"createdAt\": \"2019-09-16T09:34:35.191-04:00\",\n            \"download\": 91.574219,\n            \"latency\": 5,\n            \"upload\": 92.613281\n        }\n    ]\n}"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Locations"],
        "summary": "Requests the HUB device at this location to initiate a speedtest.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Requests the HUB device at this location to initiate a speedtest.",
            "required": true,
            "schema": { "$ref": "#/definitions/LocationsSpeedTestPostRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/LocationsSpeedTestPost" }
          }
        }
      }
    },
    "/v1/locations/summary": {
      "get": {
        "tags": ["Locations"],
        "summary": "Read locations summary. Endpoint will respond with minimum of information.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/LocationsSummaryRead" },
            "examples": {
              "Success-Response:": {
                "value": "{\n           \"locationId\": \"5b1059f3998f081c9f6c56dd\",\n           \"address\": \"1900 Broadway, New York, NY 10023, USA\",\n           \"customerId\": \"5b1059f2998f081c9f6c56dc\",\n           \"customerName\": \"Kims AV\",\n\t\t\t  \"ispName\": \"Comcast Corporation\",\n           \"name\": \"Home\",\n\t  \t \t  \"notes\": \"[{\\\"insert\\\":\\\"I have some notes\\\\n\\\"}]\",\n\t\t\t}"
              }
            }
          }
        }
      }
    },
    "/v1/locations/morelocations": {
      "get": {
        "tags": ["Locations"],
        "summary": "This Read API allows you to read information about a more-locations page for locations user have access to.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "required": true,
            "type": "number",
            "description": "customerId for more-locations page"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "offset from start to get items"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "limit of items (default 10)"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filtering by all, connected, disconnected. Example : filter=connected:true, filter=connected:false or you can omit it. If you want multiple sorts use this: update:desc,address:asc"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filtering by part of the name. Example : search=lo -&gt; it will return locations with 'lo' chars in a name."
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "sort by name, status, name, isp, address, update. It can be ascending or descending. Example : sort=name:asc or sort=status:desc"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoreLocations" },
            "examples": {
              "Success-Response:": {
                "value": "{\n  \"items\" : [\n    {\n      \"customerId\": \"61562477d5e6b54ccad03ce9\",\n      \"accountNum\": \"C10123\",\n      \"name\": \"Customer Name\",\n      \"licenseType\": \"basic\",\n      \"email\": \"customer@email.com\",\n      \"phone\": \"18005551234\",\n      \"deviceCount\": 10,\n      \"offlineDeviceCount\": 0,\n      \"degradedDeviceCount\": 0,\n      \"onlineDeviceCount\": 7,\n      \"firmwareUpdateCount\": 0,\n      \"unverifiedLocationCount\": 1,\n      \"hasNotificationsEnabled\": true,\n      \"hasOfflineDevices\": true,\n      \"hasDegradedDevices\": false,\n      \"hasFirmwareUpdates\": false,\n      \"isSharedIn\": false,\n      \"isSharedOut\": true,\n      \"totalLocations\" : 1,\n      \"locations\": [\n        {\n          \"locationId\": \"5c17cf0da9b8831e4012dc18\",\n          \"name\": \"Location Name\",\n          \"licenseType\" : \"basic\",\n          \"address\" : \"123 Maple Lane Winston, MA\",\n          \"hasVerifiedAddress\" : false,\n          \"hasNotificationsEnabled\" : true,\n          \"hasFirmwareUpdates\" : false,\n          \"jobCode\": \"TheRealVIP\",\n          \"offlineDeviceCount\", 3\n        }\n      ]\n    }\n  ],\n  \"totalCount\": 1,\n  \"offset\": 0,\n  \"limit\": 1\n}"
              }
            }
          }
        }
      }
    },
    "/v1/locations/rooms": {
      "post": {
        "tags": ["Locations"],
        "summary": "Creates a room at a given location.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Creates a room at a given location.",
            "required": true,
            "schema": { "$ref": "#/definitions/RoomsCreateRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/RoomsCreate" }
          }
        }
      },
      "delete": {
        "tags": ["Locations"],
        "summary": "Deletes a room at a given location.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Deletes a room at a given location.",
            "required": true,
            "schema": { "$ref": "#/definitions/RoomsDeleteRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      },
      "get": {
        "tags": ["Locations"],
        "summary": "Read rooms at a given location.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "locationId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Location containing the rooms you want to get."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/RoomsRead" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t  \"count\": 1,\n       \"items\": [\n         {\n           \"id\": \"624497fa3a95f5ccd028c8b1\",\n\t\t\t  \"name\": \"Bathroom\",\n\t\t\t  \"order\": 1\n         },\n       ]\n     }"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Locations"],
        "summary": "Updates a room at a given location.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Updates a room at a given location.",
            "required": true,
            "schema": { "$ref": "#/definitions/RoomsUpdateRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/locations/coverage": {
      "get": {
        "tags": ["Locations"],
        "summary": "Read all accessible locations to user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/UsersLocationsCoverage" },
            "examples": {
              "Success-Response:": {
                "value": "{\n       \"items\": [\n         {\n           \"address\": \"1900 Broadway, New York, NY 10023, USA\",\n           \"canDelete\": true,\n           \"canGrabSnapshots\": true,\n           \"customerId\": \"5b1059f2998f081c9f6c56dc\",\n           \"customerName\": \"Kims AV\",\n           \"firmwareUpdateCount\": 4,\n           \"deviceCount\": 12,\n           \"geometry\": {\n\t\t\t  \t\t\"lat\": 40.771542,\n\t\t\t\t\t\"lng\": -73.98146450000002\n\t\t\t  },\n           \"groupCount\": 4,\n           \"hasNotificationsEnabled\": true,\n           \"isMonitoredByOwnerOnly\": false,\n           \"isOffline\": true,\n           \"isSharedIn\": true,\n           \"isSharedOut\": true,\n           \"ispName\": \"Comcast Corporation\",\n           \"licenseType\": \"basic\",\n           \"locationId\": \"5b1059f3998f081c9f6c56dd\",\n           \"name\": \"1\",\n           \"onlineDeviceCount\": 9,\n\t\t\t  \"timeZoneOffsetMinutes\" : \"-570\",\n\t\t\t  \"timeZoneId\" : \"5a04a6c199447b1a235f0143\",\n\t\t\t  \"jobCode\":\"Home\",\n         }\n       ]\n     }"
              }
            }
          }
        }
      }
    },
    "/v1/users/nextstep": {
      "get": {
        "tags": ["Login_Flow"],
        "summary": "Returns a user's next step and Canny token after a Cognito login. This api should be called only after a user logs in via Cognito.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/UserNextStop" },
            "examples": {
              "No-Next-Step-Response:": {
                "value": "{\n  \"cannyToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRlc3RAZXhhbXBsZS5jb20iLCJpZCI6IjEyMzQiLCJuYW1lIjoiSm9obiBEb2UifQ.TIxnCA8Cbh_M3l6SuyMRmXT1u-NMjKIs-1tHsjAbt2o\"\n  \"isMigratedToCognito\": true,\n  \"hasLoggedInViaCognito\": false,\n  \"mfaEnabled\": false,\n  \"mfaMethod\": \"\"\n}"
              }
            }
          }
        }
      }
    },
    "/v1/users/accepttermsofservice": {
      "post": {
        "tags": ["Login_Flow"],
        "summary": "Allows a user to accept new terms of service to complete / continue their log-in flow.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Allows a user to accept new terms of service to complete / continue their log-in flow.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UsersAcceptTermsOfServiceRequest"
            }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/users/forgotpassword": {
      "post": {
        "tags": ["Login_Flow"],
        "summary": "This API is used to initiate forgot password process. Successful execution of this API will result in an email to user, allowing them to set a new password.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "This API is used to initiate forgot password process. Successful execution of this API will result in an email to user, allowing them to set a new password.",
            "required": true,
            "schema": { "$ref": "#/definitions/UsersForgotPasswordRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      },
      "get": {
        "tags": ["Tech_Support"],
        "summary": "This API gets an URL which should be sent on email, used for redirection on page to change a password. This endpoint is only used by those who have 'ops' account.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Email for which password is being changed."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "Success-Response:": {
                "value": "https://ovrc.com/#/confirm/5fec773ad5e6b55ea2e7a367"
              }
            }
          }
        }
      }
    },
    "/v1/users/forgotpasswordcomplete": {
      "post": {
        "tags": ["Login_Flow"],
        "summary": "This API is used to complete forgot password process. This API is called from the in-email link that is sent to a user to verify it is their email address.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "This API is used to complete forgot password process. This API is called from the in-email link that is sent to a user to verify it is their email address.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UsersForgotPasswordCompleteRequest"
            }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/users/login": {
      "post": {
        "tags": ["Login_Flow"],
        "summary": "Validates a given username / password combination, then determine if the user is able to login or not. If so, an accessToken will be returned for use in future requests.  Otherwise, a nextActionType string will indicate the next steps to complete login.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Validates a given username / password combination, then determine if the user is able to login or not. If so, an accessToken will be returned for use in future requests.  Otherwise, a nextActionType string will indicate the next steps to complete login.",
            "required": true,
            "schema": { "$ref": "#/definitions/UsersLoginRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/UsersLogin" }
          }
        }
      }
    },
    "/v1/users/logout": {
      "post": {
        "tags": ["Login_Flow"],
        "summary": "Requires no payload, and will end the given session.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/users/mfasendtoken": {
      "post": {
        "tags": ["Login_Flow"],
        "summary": "Identifies a user and creates/sends a MFA Code to the user's selected device. If a token already exists, it is deleted before a new token is created. This API immediately precedes MFA Verify Token. Note: By default, MFA codes are sent via the method specified under the user's settings. However, if the user selects a different method when resending the code, the default method will be overridden.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Identifies a user and creates/sends a MFA Code to the user's selected device. If a token already exists, it is deleted before a new token is created. This API immediately precedes MFA Verify Token. Note: By default, MFA codes are sent via the method specified under the user's settings. However, if the user selects a different method when resending the code, the default method will be overridden.",
            "required": true,
            "schema": { "$ref": "#/definitions/UsersMFASendtokenRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/users/mfaverifytoken": {
      "post": {
        "tags": ["Login_Flow"],
        "summary": "This API retrieves a user's token and verifies that the correct code was entered. If the code entered was correct and the user wishes to &quot;rememberDevice&quot;, a &quot;deviceToken&quot; will be returned and a corresponding &quot;knownDevices&quot; entry will be created. The API then checks for needed ToS updates and proceeds accordingly. This API is called when the user enters their mfaCode, immediately following MFA Send Token. Note: A success message will be returned even if a ToS update is required, but nextActionType will be set to &quot;termsOfServiceUpdate&quot; and a login session will not be created.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "This API retrieves a user's token and verifies that the correct code was entered. If the code entered was correct and the user wishes to &quot;rememberDevice&quot;, a &quot;deviceToken&quot; will be returned and a corresponding &quot;knownDevices&quot; entry will be created. The API then checks for needed ToS updates and proceeds accordingly. This API is called when the user enters their mfaCode, immediately following MFA Send Token. Note: A success message will be returned even if a ToS update is required, but nextActionType will be set to &quot;termsOfServiceUpdate&quot; and a login session will not be created.",
            "required": true,
            "schema": { "$ref": "#/definitions/UsersMFAVerifyTokenRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/luma/cameraconfiguration": {
      "get": {
        "tags": ["Luma_Camera"],
        "summary": "Get the Luma Camera Configuration",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/LumaCameraConfigurationGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t\t\"antiFlicker\": \"Auto\",\n\t\t\t\"message\": {\n\t\t\t\t\"code\": 200,\n\t\t\t\t\"description\": \"You have chosen... wisely.\",\n\t\t\t\t\"title\": \"Success!\"\n\t\t\t},\n\t\t\t\"microphoneEnabled:\": false,\n\t\t\t\"microphoneSensitivity:\": 100,\n\t\t\t\"nightVision\": \"auto\",\n\t\t\t\"recorderSettings\": \"Set at the Site Level\",\n\t\t\t\"recorderSettingsEnabled\": false,\n\t\t\t\"videoQuality\": \"medium\",\n\t\t\t\"whiteLight\": \"auto\"\n\t\t}"
              }
            }
          }
        }
      }
    },
    "/v1/lumacameraconfiguration": {
      "post": {
        "tags": ["Luma_Camera"],
        "summary": "Set the Luma Camera Configuration",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/lumaforgotpassword": {
      "post": {
        "tags": ["Luma_Link_APIs"],
        "summary": "This API is used by the Luma Link app to start the forgot password process.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "This API is used by the Luma Link app to start the forgot password process.",
            "required": true,
            "schema": { "$ref": "#/definitions/LumaForgotPasswordRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/lumalogin": {
      "post": {
        "tags": ["Luma_Link_APIs"],
        "summary": "This API is used by the Luma Link app to login to OvrC. Successful execution of this API will result in a list of Luma devices the user has access to.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "This API is used by the Luma Link app to login to OvrC. Successful execution of this API will result in a list of Luma devices the user has access to.",
            "required": true,
            "schema": { "$ref": "#/definitions/LumaLoginRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/lutron/clientdevices": {
      "get": {
        "tags": ["Lutron"],
        "summary": "Get Client Devices for Lutron device.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Lutron Device ID."
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/lutron/pairingstatus": {
      "get": {
        "tags": ["Lutron"],
        "summary": "Get pairing status for Lutron device.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "macAddress",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Lutron MAC Address."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t\t\"status\": \"success\",\n\t\t\t\"code\": 200,\n\t\t\t\"message\": \"Pairing pending\",\n\t\t\t\"params\": {\n\t\t\t\"macAddress\": \"AB:CD:EF:00:00:00\"\n\t\t\t},\n\t\t\t\"data\" : {\n\t\t\t\"deviceId\" : \"\"\n\t\t\t}\n\t\t}\n\t\t{\n\t\t\t\"status\": \"success\",\n\t\t\t\"code\": 200,\n\t\t\t\"message\": \"Pairing complete\",\n\t\t\t\"params\": {\n  \t\t\"macAddress\": \"AB:CD:EF:00:00:00\"\n\t\t\t},\n\t\t\t\"data\" : {\n \t\t\"deviceId\" : \"5a902779998f082bb9000001\"\n\t\t\t}\n\t\t}"
              }
            }
          }
        }
      }
    },
    "/v1/lutron/rebootdevice": {
      "post": {
        "tags": ["Lutron"],
        "summary": "Reboot lutron device via lutron cloud.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Reboot lutron device via lutron cloud.",
            "required": true,
            "schema": { "$ref": "#/definitions/LutronRebootDeviceRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/lutron/remoteaccess": {
      "post": {
        "tags": ["Lutron"],
        "summary": "Remote access to lutron device.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Remote access to lutron device.",
            "required": true,
            "schema": { "$ref": "#/definitions/LutronRemoteAccessRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/lutron/retransferconfig": {
      "post": {
        "tags": ["Lutron"],
        "summary": "Retransfer configurations to its clients.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Retransfer configurations to its clients.",
            "required": true,
            "schema": { "$ref": "#/definitions/LutronRetransferConfigRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/knowndevices": {
      "delete": {
        "tags": ["MFA_Known_Devices"],
        "summary": "Deletes known device(s).",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Deletes known device(s).",
            "required": true,
            "schema": { "$ref": "#/definitions/KnownDevicesDeleteRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      },
      "get": {
        "tags": ["MFA_Known_Devices"],
        "summary": "Reads known device(s).",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "parentUser",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Parent user of known devices to read."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/KnownDevicesRead" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t\"documents\": [\n     \t{\n       \t\t\"_id\": \"2e4f42d21323dbc1c8b69811\",\n       \t\t\"model\": \"Mac\",\n       \t\t\"os\": \"Mac OS X\",\n       \t\t\"userId\": \"42b342e70323d69fc9c6981e\",\n       \t\t\"ipAddress\": \"146.20.22.54\",\n       \t\t\"createdAt\": \"2018-07-24 09:31:22\",\n       \t\t\"cookie\": \"20sjz0q0pa90nvIE1Cj9da8bBa98w10v\"\n    \t\t}\n   \t],\n   \t\"limit\": 10,\n   \t\"offset\": 0,\n   \t\"totalCount\": 1\n    }"
              }
            }
          }
        }
      }
    },
    "/v1/mesh/channeloptimization": {
      "post": {
        "tags": ["Mesh_Wifi"],
        "summary": "Instructs the device which role is controller to perform the auto channel to the mesh network.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instructs the device which role is controller to perform the auto channel to the mesh network.",
            "required": true,
            "schema": { "$ref": "#/definitions/MeshChannelOptimizationRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MeshChannelOptimization" }
          }
        }
      }
    },
    "/v1/mesh/connectiontest": {
      "post": {
        "tags": ["Mesh_Wifi"],
        "summary": "Instructs the device which role is controller to perform the throughput test on the mesh network. Only supports node to node tests.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instructs the device which role is controller to perform the throughput test on the mesh network. Only supports node to node tests.",
            "required": true,
            "schema": { "$ref": "#/definitions/MeshConnectionTestRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MeshConnectionTest" }
          }
        }
      }
    },
    "/v1/mesh/deletenode": {
      "post": {
        "tags": ["Mesh_Wifi"],
        "summary": "Instructs the device which role is controller to delete the given node from the Mesh Network.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instructs the device which role is controller to delete the given node from the Mesh Network.",
            "required": true,
            "schema": { "$ref": "#/definitions/MeshDeleteNodeRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MeshDeleteNode" }
          }
        }
      }
    },
    "/v1/mesh/devices": {
      "get": {
        "tags": ["Mesh_Wifi"],
        "summary": "Gets wireless access points for a location with SSID management metadata sprinkled on top.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "locationId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of location for which one would like to get SSID Management devices"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MeshDevices" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t\t\"limit\": 1,\n\t\t\t\"offset: 1,\n\t\t\t\"totalCount: 12,\n\t\t\t\"items\": [\n\t\t        {\n\t\t            \"connected\": false,\n\t\t            \"deviceId\": \"5e15e00db7ab52a3cc46818e\",\n\t\t            \"firmware\": \"2.0.02\",\n\t\t            \"role\": \"CONTROLLER\",\n\t\t            \"lanAddress\": \"192.168.233.108\",\n\t\t            \"lastSeenTime\": \"2020-06-30T03:02:02.584-04:00\",\n\t\t            \"macAddress\": \"D4:6A:91:C4:80:DB\",\n\t\t            \"devicesConnectedNumber\": 8,\n\t\t            \"channel2g\": 1,\n\t\t            \"channel5g\": 40,\n\t\t            \"channel5gBackhaul\": 153,\n\t\t            \"power2g\": 26,\n\t\t            \"power5g\": 25,\n\t\t            \"power5gBackhaul\": 29,\n\t\t            \"distance\": \"Too close\",\n\t\t            \"isMeshMember\": true,\n\t\t            \"meshIsNode\": false,\n\t\t            \"meshIsController\": true,\n\t\t            \"meshIsPaired\": true,\n\t\t            \"metadata\": {\n\t\t                \"deviceFamily\": \"ANA\",\n\t\t                \"isSsidManagementCapable\": true,\n\t\t                \"isMeshCapable\": true,\n\t\t                \"wireless\": {\n\t\t                    \"ssidCounts\": {\n\t\t                        \"radio24\": {\n\t\t                            \"maxTotal\": 8,\n\t\t                            \"maxPrivate\": 8,\n\t\t                            \"maxGuest\": 8\n\t\t                        },\n\t\t                        \"radio5\": {\n\t\t                            \"maxTotal\": 8,\n\t\t                            \"maxPrivate\": 8,\n\t\t                            \"maxGuest\": 8\n\t\t                        }\n\t\t                    },\n\t\t                    \"securityModes\": {\n\t\t                        \"privateSecurityModes\": [\n\t\t                            {\n\t\t                                \"displayName\": \"Open\",\n\t\t                                \"requestValue\": \"OPEN\",\n\t\t                                \"hasRadiusServer\": false,\n\t\t                                \"notes\": \"\"\n\t\t                            },\n\t\t                            {\n\t\t                                \"displayName\": \"WPA2-PSK\",\n\t\t                                \"requestValue\": \"WPA2-PSK\",\n\t\t                                \"hasRadiusServer\": false,\n\t\t                                \"notes\": \"\"\n\t\t                            },\n\t\t                            {\n\t\t                                \"displayName\": \"WPA-PSK Mixed\",\n\t\t                                \"requestValue\": \"WPA-PSK MIXED\",\n\t\t                                \"hasRadiusServer\": false,\n\t\t                                \"notes\": \"\"\n\t\t                            },\n\t\t                            {\n\t\t                                \"displayName\": \"WPA2\",\n\t\t                                \"requestValue\": \"WPA2\",\n\t\t                                \"hasRadiusServer\": true,\n\t\t                                \"notes\": \"\"\n\t\t                            },\n\t\t                            {\n\t\t                                \"displayName\": \"WPA Mixed\",\n\t\t                                \"requestValue\": \"WPA MIXED\",\n\t\t                                \"hasRadiusServer\": true,\n\t\t                                \"notes\": \"\"\n\t\t                            }\n\t\t                        ],\n\t\t                        \"guestSecurityModes\": [\n\t\t                            {\n\t\t                                \"displayName\": \"Open\",\n\t\t                                \"requestValue\": \"OPEN\",\n\t\t                                \"hasRadiusServer\": false,\n\t\t                                \"notes\": \"\"\n\t\t                            },\n\t\t                            {\n\t\t                                \"displayName\": \"WPA2-PSK\",\n\t\t                                \"requestValue\": \"WPA2-PSK\",\n\t\t                                \"hasRadiusServer\": false,\n\t\t                                \"notes\": \"\"\n\t\t                            },\n\t\t                            {\n\t\t                                \"displayName\": \"WPA-PSK Mixed\",\n\t\t                                \"requestValue\": \"WPA-PSK MIXED\",\n\t\t                                \"hasRadiusServer\": false,\n\t\t                                \"notes\": \"\"\n\t\t                            }\n\t\t                        ]\n\t\t                    },\n\t\t                    \"clientIsolation\": {\n\t\t                        \"isPrivateDynamic\": true,\n\t\t                        \"isGuestDynamic\": true\n\t\t                    },\n\t\t                    \"radio\": {\n\t\t                        \"band24\": {\n\t\t                            \"available_wirelessmodes\": [\n\t\t                                {\n\t\t                                    \"displayName\": \"802.11 B\",\n\t\t                                    \"requestValue\": \"802.11B\"\n\t\t                                },\n\t\t                                {\n\t\t                                    \"displayName\": \"802.11 G\",\n\t\t                                    \"requestValue\": \"802.11G\"\n\t\t                                },\n\t\t                                {\n\t\t                                    \"displayName\": \"802.11 B/G\",\n\t\t                                    \"requestValue\": \"802.11BG\"\n\t\t                                },\n\t\t                                {\n\t\t                                    \"displayName\": \"802.11 B/G/N\",\n\t\t                                    \"requestValue\": \"802.11BGN\"\n\t\t                                }\n\t\t                            ],\n\t\t                            \"available_channels\": {\n\t\t                                \"*\": [\n\t\t                                    {\n\t\t                                        \"displayName\": \"Auto\",\n\t\t                                        \"requestValue\": 0\n\t\t                                    }\n\t\t                                ]\n\t\t                            }\n\t\t                        },\n\t\t                        \"band5\": {\n\t\t                            \"available_wirelessmodes\": [\n\t\t                                {\n\t\t                                    \"displayName\": \"802.11 A\",\n\t\t                                    \"requestValue\": \"802.11A\"\n\t\t                                },\n\t\t                                {\n\t\t                                    \"displayName\": \"802.11 N\",\n\t\t                                    \"requestValue\": \"802.11N\"\n\t\t                                },\n\t\t                                {\n\t\t                                    \"displayName\": \"802.11 A/N\",\n\t\t                                    \"requestValue\": \"802.11AN\"\n\t\t                                },\n\t\t                                {\n\t\t                                    \"displayName\": \"802.11 A/C/N\",\n\t\t                                    \"requestValue\": \"802.11ACN\"\n\t\t                                }\n\t\t                            ],\n\t\t                            \"available_channels\": {\n\t\t                                \"*\": [\n\t\t                                    {\n\t\t                                        \"displayName\": \"Auto\",\n\t\t                                        \"requestValue\": 0\n\t\t                                    }\n\t\t                                ]\n\t\t                            }\n\t\t                        }\n\t\t                    }\n\t\t                }\n\t\t            },\n\t\t        }\n\t\t    ]\n     }"
              }
            }
          }
        }
      }
    },
    "/v1/mesh/joinnode": {
      "post": {
        "tags": ["Mesh_Wifi"],
        "summary": "Resets the mesh network based on nodes sent in removing and joining based on nodes value and also sets ssid network config data.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Resets the mesh network based on nodes sent in removing and joining based on nodes value and also sets ssid network config data.",
            "required": true,
            "schema": { "$ref": "#/definitions/MeshJoinNodeRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MeshJoinNode" }
          }
        }
      }
    },
    "/v1/mesh/networkstatus": {
      "get": {
        "tags": ["Mesh_Wifi"],
        "summary": "Instructs the device which role is controller to provide details on nodes in the Mesh",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MeshNetworkStatus" },
            "examples": {
              "Success-Response:": {
                "value": "{\n  \"deviceId\":\"5c993d15cc9b310d785e657f\",\n  \"node\": [\n     {\n        \"model\": \"AN-510-AP-I-AC\",\n        \"systemName\": \"Upstairs WAP\",\n        \"role\": \"CONTROLLER\",\n        \"lanIPAddress\": \"192.168.200.199\",\n        \"channel2g\": 11,\n        \"channel5g\": 157,\n        \"channel5gBackhaul\": \"Wired\",\n        \"devicesConnectedNumber\": 12,\n        \"power2g\": \"135\",\n        \"power5g\": \"98\",\n        \"power5gBackhaul\": \"NA\",\n     }\n  ]\n}"
              }
            }
          }
        }
      }
    },
    "/v1/mesh/nodeidentification": {
      "post": {
        "tags": ["Mesh_Wifi"],
        "summary": "Instructs the device which role is controller to trigger the function of identify nodes.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instructs the device which role is controller to trigger the function of identify nodes.",
            "required": true,
            "schema": { "$ref": "#/definitions/MeshNodeIdentificationRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MeshNodeIdentification" }
          }
        }
      }
    },
    "/v1/mesh/poweroptimization": {
      "post": {
        "tags": ["Mesh_Wifi"],
        "summary": "Instructs the device which role is controller to perform the auto power to the mesh network.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instructs the device which role is controller to perform the auto power to the mesh network.",
            "required": true,
            "schema": { "$ref": "#/definitions/MeshPowerOptimizationRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MeshPowerOptimization" }
          }
        }
      }
    },
    "/v1/mesh/updateFirmware": {
      "post": {
        "tags": ["Mesh_Wifi"],
        "summary": "Instructs the device which role is controller to initiate firmware updates to WAPs in the mesh community.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instructs the device which role is controller to initiate firmware updates to WAPs in the mesh community.",
            "required": true,
            "schema": { "$ref": "#/definitions/MeshUpdateFirmwareRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/moip/audio_rx": {
      "get": {
        "tags": ["MoIP_Commands"],
        "summary": "Instructs the device to return its status.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          },
          {
            "name": "endpointId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Endpoint ID for the audio receiver endpoint."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipAudioRxGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\"deviceId\": \"54cf37570642205944000899\",\n\t\"dateTime\": \"2013-09-10T08:15:30-05:00\",\n}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["MoIP_Commands"],
        "summary": "A AudioRx object update request.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "A AudioRx object update request.",
            "required": true,
            "schema": { "$ref": "#/definitions/MoipAudioRxPutRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipAudioRxPut" }
          }
        }
      }
    },
    "/v1/moip/audio_tx": {
      "get": {
        "tags": ["MoIP_Commands"],
        "summary": "Instructs the device to return its status.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          },
          {
            "name": "endpointId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Endpoint ID for the audio transmitter."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipAudioTxGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\"deviceId\": \"54cf37570642205944000899\",\n\t\"dateTime\": \"2013-09-10T08:15:30-05:00\",\n}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["MoIP_Commands"],
        "summary": "A AudioTx object update request.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "A AudioTx object update request.",
            "required": true,
            "schema": { "$ref": "#/definitions/MoipAudioTxPutRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipAudioTxPut" }
          }
        }
      }
    },
    "/v1/moip/change": {
      "get": {
        "tags": ["MoIP_Commands"],
        "summary": "This is only a placeholder. It is actually a websocket endpoint for listening to change events. The JSON response schema does describe the message format received on the websocket.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipChangeGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\"deviceId\": \"54cf37570642205944000899\",\n\t\"dateTime\": \"2013-09-10T08:15:30-05:00\",\n}"
              }
            }
          }
        }
      }
    },
    "/v1/moip/group_rx": {
      "get": {
        "tags": ["MoIP_Commands"],
        "summary": "Instructs the group to return its status.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          },
          {
            "name": "endpointId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The EndpointId ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipGroupRxGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\"deviceId\": \"54cf37570642205944000899\",\n\t\"dateTime\": \"2013-09-10T08:15:30-05:00\",\n}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["MoIP_Commands"],
        "summary": "A GroupRx object update request.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "A GroupRx object update request.",
            "required": true,
            "schema": { "$ref": "#/definitions/MoipGroupRxPutRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipGroupRxPut" }
          }
        }
      }
    },
    "/v1/moip/group_tx": {
      "get": {
        "tags": ["MoIP_Commands"],
        "summary": "Instructs the group to return its status.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          },
          {
            "name": "endpointId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Endpoint ID for the transmitter group."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipGroupTxGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\"deviceId\": \"54cf37570642205944000899\",\n\t\"dateTime\": \"2013-09-10T08:15:30-05:00\",\n}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["MoIP_Commands"],
        "summary": "A GroupTx object update request.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "A GroupTx object update request.",
            "required": true,
            "schema": { "$ref": "#/definitions/MoipGroupTxPutRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipGroupTxPut" }
          }
        }
      }
    },
    "/v1/moip/ir_rx": {
      "get": {
        "tags": ["MoIP_Commands"],
        "summary": "Instructs the device to return its status.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          },
          {
            "name": "endpointId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Endpoint ID for the receiver."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipIrRxGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\"deviceId\": \"54cf37570642205944000899\",\n\t\"dateTime\": \"2013-09-10T08:15:30-05:00\",\n}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["MoIP_Commands"],
        "summary": "A IrRx object update request.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "A IrRx object update request.",
            "required": true,
            "schema": { "$ref": "#/definitions/MoipIrRxPutRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipIrRxPut" }
          }
        }
      }
    },
    "/v1/moip/ir_tx": {
      "get": {
        "tags": ["MoIP_Commands"],
        "summary": "Instructs the device to return its status.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          },
          {
            "name": "endpointId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Endpoint ID for the transmitter."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipIrTxGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\"deviceId\": \"54cf37570642205944000899\",\n\t\"dateTime\": \"2013-09-10T08:15:30-05:00\",\n}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["MoIP_Commands"],
        "summary": "A IrTx object update request.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "A IrTx object update request.",
            "required": true,
            "schema": { "$ref": "#/definitions/MoipIrTxPutRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipIrTxPut" }
          }
        }
      }
    },
    "/v1/moip/metadata": {
      "get": {
        "tags": ["MoIP_Commands"],
        "summary": "Get MoIP device metadata",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipMetadataGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\"deviceId\": \"54cf37570642205944000899\",\n\t\"metadata\": {\n\t\t\"deviceStatus\": {\n\t\t\t\"items\": [\n\t\t\t\t{ \"requestValue\": \"detecting\", \"displayName\": \"Detecting\" },\n\t\t\t\t{ \"requestValue\": \"unsupported\", \"displayName\": \"Not Supported\" }\n\t\t\t],\n\t\t\t\"filter\": [\n\t\t\t\t{\n\t\t\t\t\t\"displayName\": \"Offline\",\n\t\t\t\t\t\"displayGroup\": [ \"Detecting\", \"Not Supported\" ]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"displayName\": \"All\",\n\t\t\t\t\t\"displayGroup\": [ \"*\" ]\n\t\t\t\t}\n\t\t},\n\t\t\"diagMode\": [\n\t\t\t\t{ \"requestValue\": \"idle\",     \"displayName\": \"Idle\" },\n\t\t\t\t{ \"requestValue\": \"identify\", \"displayName\": \"Identify\" },\n\t\t\t\t{ \"requestValue\": \"cycle\",    \"displayName\": \"Cycle\" }\n\t\t],\n\t\t\"changes\": [\n\t\t\t\t{ \"requestValue\": \"add\",      \"displayName\": \"Add\" },\n\t\t\t\t{ \"requestValue\": \"modify\",   \"displayName\": \"Modify\" },\n\t\t\t\t{ \"requestValue\": \"delete\",   \"displayName\": \"Delete\" }\n\t\t],\n\t\t\"upgradeStage\": [\n\t\t\t\t{ \"requestValue\": \"idle\",     \"displayName\": \"Idle\" },\n\t\t\t\t{ \"requestValue\": \"failed\",   \"displayName\": \"Failed\" },\n\t\t\t\t{ \"requestValue\": \"rebooting\",\"displayName\": \"Rebooting\" },\n\t\t\t\t{ \"requestValue\": \"unpacking\",\"displayName\": \"Unpacking\" }\n\t\t]\n\t}\n}"
              }
            }
          }
        }
      }
    },
    "/v1/moip/poll_change": {
      "get": {
        "tags": ["MoIP_Commands"],
        "summary": "This is a long poll endpoint. It will block until changes are available. The websocket is the preferred solution but this may be used as a fallback.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipPollChangeGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\"deviceId\": \"54cf37570642205944000899\",\n\t\"dateTime\": \"2013-09-10T08:15:30-05:00\",\n}"
              }
            }
          }
        }
      }
    },
    "/v1/moip/rebootdevice": {
      "post": {
        "tags": ["MoIP_Commands"],
        "summary": "Reboot a MoIP device",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Reboot a MoIP device",
            "required": true,
            "schema": { "$ref": "#/definitions/MoipRebootDeviceRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipRebootDevice" }
          }
        }
      }
    },
    "/v1/moip/receivers": {
      "get": {
        "tags": ["MoIP_Commands"],
        "summary": "Instructs the device to return its status.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          },
          {
            "name": "unitId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Unit ID for the receiver."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipReceiversGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\"deviceId\": \"54cf37570642205944000899\",\n\t\"dateTime\": \"2013-09-10T08:15:30-05:00\",\n}"
              }
            }
          }
        }
      }
    },
    "/v1/moip/serial_rx": {
      "get": {
        "tags": ["MoIP_Commands"],
        "summary": "Instructs the device to return its status.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          },
          {
            "name": "endpointId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Endpoint ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipSerialRxGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\"deviceId\": \"54cf37570642205944000899\",\n\t\"dateTime\": \"2013-09-10T08:15:30-05:00\",\n}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Serial_MoIP_Commands"],
        "summary": "A SerialRx object update request.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "A SerialRx object update request.",
            "required": true,
            "schema": { "$ref": "#/definitions/MoipSerialRxPutRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipSerialRxPut" }
          }
        }
      }
    },
    "/v1/moip/serial_tx": {
      "get": {
        "tags": ["MoIP_Commands"],
        "summary": "Instructs the device to return its status.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          },
          {
            "name": "endpointId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Endpoint ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipSerialTxGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\"deviceId\": \"54cf37570642205944000899\",\n\t\"dateTime\": \"2013-09-10T08:15:30-05:00\",\n}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Serial_MoIP_Commands"],
        "summary": "A SerialTx object update request.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "A SerialTx object update request.",
            "required": true,
            "schema": { "$ref": "#/definitions/MoipSerialTxPutRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipSerialTxPut" }
          }
        }
      }
    },
    "/v1/moip/status": {
      "get": {
        "tags": ["MoIP_Commands"],
        "summary": "Instructs the device to return its current status.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipStatusGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\"deviceId\": \"54cf37570642205944000899\",\n\t\"dateTime\": \"2013-09-10T08:15:30-05:00\",\n\t\"uptime\": 24600,\n\t\"rxCount\": 1,\n\t\"txCount\": 1\n}"
              }
            }
          }
        }
      }
    },
    "/v1/moip/system": {
      "get": {
        "tags": ["MoIP_Commands"],
        "summary": "Instructs the device to return its system information.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipSystemGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\"deviceId\": \"54cf37570642205944000899\",\n\t\"dateTime\": \"2013-09-10T08:15:30-05:00\",\n\t\"name\": \"OvrC-MoIP\",\n\t\"diag_mode: \"idle\"\n}"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["MoIP_Commands"],
        "summary": "IA System Action request.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "IA System Action request.",
            "required": true,
            "schema": { "$ref": "#/definitions/MoipSystemPostRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipSystemPost" }
          }
        }
      },
      "put": {
        "tags": ["MoIP_Commands"],
        "summary": "Instructs the device to update its name.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instructs the device to update its name.",
            "required": true,
            "schema": { "$ref": "#/definitions/MoipSystemPutRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipSystemPut" }
          }
        }
      }
    },
    "/v1/moip/transmitters": {
      "get": {
        "tags": ["MoIP_Commands"],
        "summary": "Instructs the device to return its status.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          },
          {
            "name": "unitId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Unit ID for the receiver."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipTransmittersGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\"deviceId\": \"54cf37570642205944000899\",\n\t\"dateTime\": \"2013-09-10T08:15:30-05:00\",\n}"
              }
            }
          }
        }
      }
    },
    "/v1/moip/unit": {
      "delete": {
        "tags": ["MoIP_Commands"],
        "summary": "Remove a unit from the system.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Remove a unit from the system.",
            "required": true,
            "schema": { "$ref": "#/definitions/MoipUnitDeleteRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipUnitDelete" }
          }
        }
      },
      "get": {
        "tags": ["MoIP_Commands"],
        "summary": "Returns the current status of one of the units connected to the MoIP Controller.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID for the MoIP Controller, or alternatively the Device ID for the unit."
          },
          {
            "name": "unitId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Unit ID for the receiver/transmitter, required when the deviceId is for the controller instead of the unit."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipUnitGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t\t\"deviceId\": \"54cf37570642205944000899\",\n\t\t\t\"dateTime\": \"2013-09-10T08:15:30-05:00\",\n \t\t\"id\": 0,\n \t\t\"associations\": {\n \t\t\t\"audio\": {\n \t\t\t  \"rx\": [\n \t\t\t\t0\n \t\t\t  ],\n \t\t\t  \"tx\": [\n \t\t\t\t0\n \t\t\t  ]\n \t\t\t},\n \t\t\t\"video\": {\n \t\t\t  \"rx\": [\n \t\t\t\t0\n \t\t\t  ],\n \t\t\t  \"tx\": [\n \t\t\t\t0\n \t\t\t  ]\n \t\t\t},\n \t\t\t\"serial\": {\n \t\t\t  \"rx\": [\n \t\t\t\t0\n \t\t\t  ],\n \t\t\t  \"tx\": [\n \t\t\t\t0\n \t\t\t  ]\n \t\t\t},\n \t\t\t\"ir\": {\n \t\t\t  \"rx\": [\n \t\t\t\t0\n \t\t\t  ],\n \t\t\t  \"tx\": [\n \t\t\t\t0\n \t\t\t  ]\n \t\t\t},\n \t\t\t\"group\": {\n \t\t\t  \"rx\": [\n \t\t\t\t0\n \t\t\t  ],\n \t\t\t  \"tx\": [\n \t\t\t\t0\n \t\t\t  ]\n \t\t\t}\n \t\t  },\n \t\t  \"status\": {\n \t\t\t\"unit_state\": \"unconnected\",\n \t\t\t\"upgrade_state\": {\n \t\t\t  \"percent\": 0,\n \t\t\t  \"stage\": \"transfering\"\n \t\t\t},\n \t\t\t\"mac\": \"string\",\n \t\t\t\"model\": \"string\",\n \t\t\t\"version\": \"string\"\n \t\t  },\n \t\t  \"settings\": {\n \t\t\t\"name\": \"string\"\n \t\t  }\n\t\t}"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["MoIP_Commands"],
        "summary": "A Unit Action request.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "A Unit Action request.",
            "required": true,
            "schema": { "$ref": "#/definitions/MoipUnitPostRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipUnitPost" }
          }
        }
      },
      "put": {
        "tags": ["MoIP_Commands"],
        "summary": "A Unit object update request.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "A Unit object update request.",
            "required": true,
            "schema": { "$ref": "#/definitions/MoipUnitPutRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipUnitPut" }
          }
        }
      }
    },
    "/v1/moip/unit/log": {
      "get": {
        "tags": ["MoIP_Commands"],
        "summary": "Instructs the device to return the log for a receiver/transmitter unit.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          },
          {
            "name": "unitId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Unit ID for the receiver/transmitter."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipUnitLogGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\"deviceId\": \"54cf37570642205944000899\",\n\t\"dateTime\": \"2013-09-10T08:15:30-05:00\",\n\t\"controllerDeviceId\": \"54cf37570642205944000899\",\n\t\"result\": \"user.info: Jan 20 04:13:39 TX-D46A91E14510 B-900-MOIP-4K-TX-2AC video hdmi_5v on\\n\",\n\t\"unitDeviceId\": \"61817733222621226cd77867\",\n}"
              }
            }
          }
        }
      }
    },
    "/v1/moip/units": {
      "get": {
        "tags": ["MoIP_Commands"],
        "summary": "Instructs the device to return the collection of receiver/transmitter units.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipUnitsGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\"deviceId\": \"54cf37570642205944000899\",\n\t\"dateTime\": \"2013-09-10T08:15:30-05:00\",\n\t\"items\": [0]\n}"
              }
            }
          }
        }
      }
    },
    "/v1/moip/vidwalldetails": {
      "get": {
        "tags": ["MoIP_Commands"],
        "summary": "Instructs the device to return the collection of vidwalls associated with itself.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipVidWallDetailsGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t\t\"deviceId\": \"54cf37570642205944000899\",\n\t\t\t\"dateTime\": \"2013-09-10T08:15:30-05:00\",\n\t\t\t\"vidWalls\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": 1040,\n\t\t\t\t\t\t\"associations\": {\n\t\t\t\t\t\t\t\t\"group_rx\": [\n\t\t\t\t\t\t\t\t\t\t1031, 1039, 1043, 1046\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\"paired_tx\": 1023\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"status\": {\n\t\t\t\t\t\t\t\t\"state\": \"streaming\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"settings\": {\n\t\t\t\t\t\t\t\t\"height\": 2,\n\t\t\t\t\t\t\t\t\"width\": 2,\n\t\t\t\t\t\t\t\t\"index\": 3,\n\t\t\t\t\t\t\t\t\"name\": \"Living Room 2x2 video wall\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"supportedTx\": {\n\t\t\t\t\t\t\t\"id\": 1,\n\t\t\t\t\t\t\t\"name\": \"Living Room Roku\",\n                     },\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t}"
              }
            }
          }
        }
      }
    },
    "/v1/moip/video_rx": {
      "get": {
        "tags": ["MoIP_Commands"],
        "summary": "Instructs the device to return its status.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          },
          {
            "name": "endpointId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Endpoint ID for the receiver."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipVideoRxGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\"deviceId\": \"54cf37570642205944000899\",\n\t\"dateTime\": \"2013-09-10T08:15:30-05:00\",\n}"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["MoIP_Commands"],
        "summary": "A VideoRx object update request.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "A VideoRx object update request.",
            "required": true,
            "schema": { "$ref": "#/definitions/MoipVideoRxPostRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipVideoRxPost" }
          }
        }
      },
      "put": {
        "tags": ["MoIP_Commands"],
        "summary": "A VideoRx object update request.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "A VideoRx object update request.",
            "required": true,
            "schema": { "$ref": "#/definitions/MoipVideoRxPutRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipVideoRxPut" }
          }
        }
      }
    },
    "/v1/moip/video_tx": {
      "get": {
        "tags": ["MoIP_Commands"],
        "summary": "Instructs the device to return its status.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          },
          {
            "name": "endpointId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Endpoint ID for the transmitter."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipVideoTxGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\"deviceId\": \"54cf37570642205944000899\",\n\t\"dateTime\": \"2013-09-10T08:15:30-05:00\",\n}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["MoIP_Commands"],
        "summary": "A VideoTx object update request.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "A VideoTx object update request.",
            "required": true,
            "schema": { "$ref": "#/definitions/MoipVideoTxPutRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipVideoTxPut" }
          }
        }
      }
    },
    "/v1/moip/video_tx/preview": {
      "get": {
        "tags": ["MoIP_Commands"],
        "summary": "Instructs the device to return a preview image from a video transmitter.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          },
          {
            "name": "endpointId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Endpoint ID for the transmitter."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipVideoTxPreviewGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\"deviceId\": \"54cf37570642205944000899\",\n\t\"dateTime\": \"2013-09-10T08:15:30-05:00\",\n}"
              }
            }
          }
        }
      }
    },
    "/v1/moip/vidwall": {
      "delete": {
        "tags": ["MoIP_Commands"],
        "summary": "Remove a video wall from the system.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Remove a video wall from the system.",
            "required": true,
            "schema": { "$ref": "#/definitions/MoipVidwallDeleteRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipVidwallDelete" }
          }
        }
      },
      "get": {
        "tags": ["MoIP_Commands"],
        "summary": "Instructs the device to return the status for a vidwall.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          },
          {
            "name": "vidwallId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The ID for the vidwall."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipVidwallGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\"deviceId\": \"54cf37570642205944000899\"\n}"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["MoIP_Commands"],
        "summary": "A Vidwall create request.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipVidwallPost" }
          }
        }
      },
      "put": {
        "tags": ["MoIP_Commands"],
        "summary": "A Vidwall object update request.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "A Vidwall object update request.",
            "required": true,
            "schema": { "$ref": "#/definitions/MoipVidwallPutRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipVidwallPut" }
          }
        }
      }
    },
    "/v1/moip/vidwalls": {
      "get": {
        "tags": ["MoIP_Commands"],
        "summary": "Instructs the device to return the collection of vidwalls associated with itself.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/MoipVidwallsGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t\t\"deviceId\": \"54cf37570642205944000899\",\n\t\t\t\"dateTime\": \"2013-09-10T08:15:30-05:00\",\n                    \"items\": [1041,1043,1044]\n\t\t}"
              }
            }
          }
        }
      }
    },
    "/v1/nvrdvr/channelsettings": {
      "get": {
        "tags": ["NVR_and_DVR"],
        "summary": "Instructs the NVR or DVR to return its channel settings.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/NvrDvrChannelSettingsGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\"deviceId\": \"54cf37570642205944000899\",\n\t\"channels\": [\n\t\t{\n\t\t\t\"number\": 1,\n\t\t\t\"name\": \"Camera 1\",\n\t\t\t\"ipAddress\": \"192.168.1.110\",\n\t\t\t\"status\": 1,\n\t\t\t\"desc\": \"Connected\",\n\t\t\t\"resolution\": \"1920x1080\",\n\t\t\t\"attached\": true,\n\t\t\t\"hasCameraDashboard\": true,\n\t\t\t\"deviceId\": \"5ba2617a10e16e71b84b2942\",\n\t\t\t\"macAddress\": \"FF:FF:FF:FF:FF:FF\",\n\t\t\t\"port\": \"2701\",\n\t\t\t\"enableRecordingSchedule\": true,\n\t\t\t\"enableEmailNotifications\": true,\n\t\t\t\"enablePrivacyMask\": false\n\t\t}\n\t]\n}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["NVR_and_DVR"],
        "summary": "Instructs the NVR or DVR to update its channel settings.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instructs the NVR or DVR to update its channel settings.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NvrDvrChannelSettingsSetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/NvrDvrChannelSettingsSet" }
          }
        }
      }
    },
    "/v1/nvrdvr/hddsettings": {
      "get": {
        "tags": ["NVR_and_DVR"],
        "summary": "Instructs the NVR or DVR to return its hard disk drive settings.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/NvrDvrHddSettingsGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\"deviceId\": \"54cf37570642205944000899\",\n\t\"enableHddSleeping\": true,\n\t\"drives\": [\n\t\t{\n\t\t\t\"hddNum\": \"HDD03\",\n\t\t\t\"capacity\": 4096,\n\t\t\t\"free\": 0,\n\t\t\t\"status\": \"Normal\",\n\t\t\t\"type\": \"Local\",\n\t\t\t\"property\": \"R/W\"\n\t\t}\n\t]\n}"
              }
            }
          }
        }
      }
    },
    "/v1/nvrdvr/recordingstats": {
      "get": {
        "tags": ["NVR_and_DVR"],
        "summary": "Instructs the NVR or DVR to return stats about recordings it has made.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/NvrDvrRecordingStatsGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\"deviceId\": \"54cf37570642205944000899\",\n\t\"totalTime\": \"2:15:32\",\n\t\"eventTime\": \"0:23:27\",\n\t\"fullTime\": \"1:16:8\",\n\t\"oldestEvent\": \"2014-09-10T22:43:02-05:00\",\n\t\"oldestFull\": \"2014-09-10T22:43:02-05:00\",\n\t\"channels\": [\n\t\t{\n\t\t\t\"number\": 1,\n\t\t\t\"latestEvent\": \"2014-09-10T22:43:02-05:00\"\n\t\t}\n\t]\n}"
              }
            }
          }
        }
      }
    },
    "/v1/nvrdvr/status": {
      "get": {
        "tags": ["NVR_and_DVR"],
        "summary": "Instructs the NVR or DVR to return its present status.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/NvrDvrStatusGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\"deviceId\": \"54cf37570642205944000899\",\n\t\"oldestEvent\": \"2014-09-10\",\n\t\"channels\": [\n\t\t{\n\t\t\t\"number\": 1,\n\t\t\t\"latestEvent\": \"2014-10-22T22:43:02-05:00\",\n\t\t\t\"status\": 1,\n\t\t\t\"desc\": \"Connected\",\n\t\t}\n\t]\n}"
              }
            }
          }
        }
      }
    },
    "/v1/networking/cycleportpower": {
      "post": {
        "tags": ["Networking"],
        "summary": "Instructs the networking device to cycle the power on the given port(s).",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instructs the networking device to cycle the power on the given port(s).",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkingCyclePortPowerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/NetworkingCyclePortPower" }
          }
        }
      }
    },
    "/v1/networking/portconfig": {
      "get": {
        "tags": ["Networking"],
        "summary": "Retrieves the config of ports from a networking device.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The device's device ID"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/NetworkingPortConfigGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t\t\"deviceId\": \"5e8d361d02844907d5baff96\",\n\t\t\t\"lanPorts\": [{\n\t\t\t\t\"duplex\": \"Full\",\n\t\t\t\t\"duplexOptions\": [{\n\t\t\t\t\t\"displayName\": \"Full\",\n\t\t\t\t\t\"requestValue\": \"Full\"\n\t\t\t\t}, {\n\t\t\t\t\t\"displayName\": \"Half\",\n\t\t\t\t\t\"requestValue\": \"Half\"\n\t\t\t\t}, {\n\t\t\t\t\t\"displayName\": \"Disabled\",\n\t\t\t\t\t\"requestValue\": \"Disabled\"\n\t\t\t\t}],\n\t\t\t\t\"isSfp\": false,\n\t\t\t\t\"isUp\": true,\n\t\t\t\t\"name\": \"AN-210-SW-R-8-POE\",\n\t\t\t\t\"rx\": 13130547,\n\t\t\t\t\"setSpeed\": \"Auto (1Gbps)\",\n\t\t\t\t\"setSpeedOptions\": [{\n\t\t\t\t\t\"displayName\": \"Auto (1 Gbps)\",\n\t\t\t\t\t\"requestValue\": \"Auto (1Gbps)\"\n\t\t\t\t}, {\n\t\t\t\t\t\"displayName\": \"100 Mbps\",\n\t\t\t\t\t\"requestValue\": \"100Mbps\"\n\t\t\t\t}, {\n\t\t\t\t\t\"displayName\": \"10 Mbps\",\n\t\t\t\t\t\"requestValue\": \"10Mbps\"\n\t\t\t\t}, {\n\t\t\t\t\t\"displayName\": \"Disabled\",\n\t\t\t\t\t\"requestValue\": \"Disabled\"\n\t\t\t\t}],\n\t\t\t\t\"tx\": 4138104\n\t\t\t}, {\n\t\t\t\t\"duplex\": \"Full\",\n\t\t\t\t\"duplexOptions\": [{\n\t\t\t\t\t\"displayName\": \"Full\",\n\t\t\t\t\t\"requestValue\": \"Full\"\n\t\t\t\t}, {\n\t\t\t\t\t\"displayName\": \"Half\",\n\t\t\t\t\t\"requestValue\": \"Half\"\n\t\t\t\t}, {\n\t\t\t\t\t\"displayName\": \"Disabled\",\n\t\t\t\t\t\"requestValue\": \"Disabled\"\n\t\t\t\t}],\n\t\t\t\t\"isSfp\": false,\n\t\t\t\t\"isUp\": true,\n\t\t\t\t\"name\": \"OVRC-100-HUB\",\n\t\t\t\t\"rx\": 400988094,\n\t\t\t\t\"setSpeed\": \"Auto (1Gbps)\",\n\t\t\t\t\"setSpeedOptions\": [{\n\t\t\t\t\t\"displayName\": \"Auto (1 Gbps)\",\n\t\t\t\t\t\"requestValue\": \"Auto (1Gbps)\"\n\t\t\t\t}, {\n\t\t\t\t\t\"displayName\": \"100 Mbps\",\n\t\t\t\t\t\"requestValue\": \"100Mbps\"\n\t\t\t\t}, {\n\t\t\t\t\t\"displayName\": \"10 Mbps\",\n\t\t\t\t\t\"requestValue\": \"10Mbps\"\n\t\t\t\t}, {\n\t\t\t\t\t\"displayName\": \"Disabled\",\n\t\t\t\t\t\"requestValue\": \"Disabled\"\n\t\t\t\t}],\n\t\t\t\t\"tx\": 393525931\n\t\t\t}, {\n\t\t\t\t\"duplex\": \"Full\",\n\t\t\t\t\"duplexOptions\": [{\n\t\t\t\t\t\"displayName\": \"Full\",\n\t\t\t\t\t\"requestValue\": \"Full\"\n\t\t\t\t}, {\n\t\t\t\t\t\"displayName\": \"Half\",\n\t\t\t\t\t\"requestValue\": \"Half\"\n\t\t\t\t}, {\n\t\t\t\t\t\"displayName\": \"Disabled\",\n\t\t\t\t\t\"requestValue\": \"Disabled\"\n\t\t\t\t}],\n\t\t\t\t\"isSfp\": false,\n\t\t\t\t\"isUp\": false,\n\t\t\t\t\"name\": \"LAN3\",\n\t\t\t\t\"rx\": 0,\n\t\t\t\t\"setSpeed\": \"Auto (1Gbps)\",\n\t\t\t\t\"setSpeedOptions\": [{\n\t\t\t\t\t\"displayName\": \"Auto (1 Gbps)\",\n\t\t\t\t\t\"requestValue\": \"Auto (1Gbps)\"\n\t\t\t\t}, {\n\t\t\t\t\t\"displayName\": \"100 Mbps\",\n\t\t\t\t\t\"requestValue\": \"100Mbps\"\n\t\t\t\t}, {\n\t\t\t\t\t\"displayName\": \"10 Mbps\",\n\t\t\t\t\t\"requestValue\": \"10Mbps\"\n\t\t\t\t}, {\n\t\t\t\t\t\"displayName\": \"Disabled\",\n\t\t\t\t\t\"requestValue\": \"Disabled\"\n\t\t\t\t}],\n\t\t\t\t\"tx\": 0\n\t\t\t}, {\n\t\t\t\t\"duplex\": \"Full\",\n\t\t\t\t\"duplexOptions\": [{\n\t\t\t\t\t\"displayName\": \"Full\",\n\t\t\t\t\t\"requestValue\": \"Full\"\n\t\t\t\t}, {\n\t\t\t\t\t\"displayName\": \"Half\",\n\t\t\t\t\t\"requestValue\": \"Half\"\n\t\t\t\t}, {\n\t\t\t\t\t\"displayName\": \"Disabled\",\n\t\t\t\t\t\"requestValue\": \"Disabled\"\n\t\t\t\t}],\n\t\t\t\t\"isSfp\": false,\n\t\t\t\t\"isUp\": false,\n\t\t\t\t\"name\": \"LAN4\",\n\t\t\t\t\"rx\": 0,\n\t\t\t\t\"setSpeed\": \"Auto (1Gbps)\",\n\t\t\t\t\"setSpeedOptions\": [{\n\t\t\t\t\t\"displayName\": \"Auto (1 Gbps)\",\n\t\t\t\t\t\"requestValue\": \"Auto (1Gbps)\"\n\t\t\t\t}, {\n\t\t\t\t\t\"displayName\": \"100 Mbps\",\n\t\t\t\t\t\"requestValue\": \"100Mbps\"\n\t\t\t\t}, {\n\t\t\t\t\t\"displayName\": \"10 Mbps\",\n\t\t\t\t\t\"requestValue\": \"10Mbps\"\n\t\t\t\t}, {\n\t\t\t\t\t\"displayName\": \"Disabled\",\n\t\t\t\t\t\"requestValue\": \"Disabled\"\n\t\t\t\t}],\n\t\t\t\t\"tx\": 0\n\t\t\t}],\n\t\t\t\"wanPorts\": [{\n\t\t\t\t\"duplex\": \"Full\",\n\t\t\t\t\"duplexOptions\": [{\n\t\t\t\t\t\"displayName\": \"Full\",\n\t\t\t\t\t\"requestValue\": \"Full\"\n\t\t\t\t}, {\n\t\t\t\t\t\"displayName\": \"Half\",\n\t\t\t\t\t\"requestValue\": \"Half\"\n\t\t\t\t}, {\n\t\t\t\t\t\"displayName\": \"Disabled\",\n\t\t\t\t\t\"requestValue\": \"Disabled\"\n\t\t\t\t}],\n\t\t\t\t\"isSfp\": false,\n\t\t\t\t\"isUp\": true,\n\t\t\t\t\"name\": \"WAN1\",\n\t\t\t\t\"rx\": 359316080,\n\t\t\t\t\"setSpeed\": \"Auto (1Gbps)\",\n\t\t\t\t\"setSpeedOptions\": [{\n\t\t\t\t\t\"displayName\": \"Auto (1 Gbps)\",\n\t\t\t\t\t\"requestValue\": \"Auto (1Gbps)\"\n\t\t\t\t}, {\n\t\t\t\t\t\"displayName\": \"100 Mbps\",\n\t\t\t\t\t\"requestValue\": \"100Mbps\"\n\t\t\t\t}, {\n\t\t\t\t\t\"displayName\": \"10 Mbps\",\n\t\t\t\t\t\"requestValue\": \"10Mbps\"\n\t\t\t\t}, {\n\t\t\t\t\t\"displayName\": \"Disabled\",\n\t\t\t\t\t\"requestValue\": \"Disabled\"\n\t\t\t\t}],\n\t\t\t\t\"tx\": 402004051\n\t\t\t}, {\n\t\t\t\t\"duplex\": \"Full\",\n\t\t\t\t\"duplexOptions\": [{\n\t\t\t\t\t\"displayName\": \"Full\",\n\t\t\t\t\t\"requestValue\": \"Full\"\n\t\t\t\t}, {\n\t\t\t\t\t\"displayName\": \"Half\",\n\t\t\t\t\t\"requestValue\": \"Half\"\n\t\t\t\t}, {\n\t\t\t\t\t\"displayName\": \"Disabled\",\n\t\t\t\t\t\"requestValue\": \"Disabled\"\n\t\t\t\t}],\n\t\t\t\t\"isSfp\": false,\n\t\t\t\t\"isUp\": false,\n\t\t\t\t\"name\": \"WAN2\",\n\t\t\t\t\"rx\": 0,\n\t\t\t\t\"setSpeed\": \"Auto (1Gbps)\",\n\t\t\t\t\"setSpeedOptions\": [{\n\t\t\t\t\t\"displayName\": \"Auto (1 Gbps)\",\n\t\t\t\t\t\"requestValue\": \"Auto (1Gbps)\"\n\t\t\t\t}, {\n\t\t\t\t\t\"displayName\": \"100 Mbps\",\n\t\t\t\t\t\"requestValue\": \"100Mbps\"\n\t\t\t\t}, {\n\t\t\t\t\t\"displayName\": \"10 Mbps\",\n\t\t\t\t\t\"requestValue\": \"10Mbps\"\n\t\t\t\t}, {\n\t\t\t\t\t\"displayName\": \"Disabled\",\n\t\t\t\t\t\"requestValue\": \"Disabled\"\n\t\t\t\t}],\n\t\t\t\t\"tx\": 438\n\t\t\t}]\n\t\t}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Networking"],
        "summary": "Updates the config of ports from a networking device.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Updates the config of ports from a networking device.",
            "required": true,
            "schema": { "$ref": "#/definitions/NetworkingPortConfigSetRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/NetworkingPortConfigSet" }
          }
        }
      }
    },
    "/v1/ovrcconnect/activateuser": {
      "put": {
        "tags": ["Ovrc_Connect"],
        "summary": "Executes Activate user logic for OvrC Connect account",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Executes Activate user logic for OvrC Connect account",
            "required": true,
            "schema": { "$ref": "#/definitions/Activate_UserRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/ovrcconnect/changepassword": {
      "post": {
        "tags": ["Ovrc_Connect"],
        "summary": "Change password for Ovrc Connect account",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Change password for Ovrc Connect account",
            "required": true,
            "schema": { "$ref": "#/definitions/Change_PasswordRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/ovrcconnect/commands": {
      "get": {
        "tags": ["Ovrc_Connect"],
        "summary": "Reads Connect Commands. Supports search/filter/sort/limit/offset",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "locationId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Database GUID of location for which Connect commands are being requested."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/Commands_Get" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t    \"items\": [\n\t\t        {\n\t\t            \"companyId\": \"548227d3eff39f865700000b\",\n\t\t            \"customerId\": \"5696b8fe1a069ac105000002\",\n\t\t            \"delayAfterRun\": 0,\n\t\t            \"deleted\": false,\n\t\t            \"displayOrder\": 1,\n\t\t            \"icon\": \"tv\",\n\t\t            \"lastRun\": \"2016-08-29T01:33:56.344-04:00\",\n\t\t            \"locationId\": \"5696bc421a069ac105000003\",\n\t\t            \"commandId\": \"57c3c8a883a81d69194c3da0\",\n\t\t            \"name\": \"edsad\",\n\t\t            \"nameL\": \"edsad\",\n\t\t            \"status\": \"UNAVAILABLE\",\n\t\t            \"steps\": [\n\t\t                {\n\t\t                    \"action\": \"resetOutlets\",\n\t\t                    \"delay\": 301000,\n\t\t                    \"deviceId\": \"57bdc91983a81d69194c3cef\",\n\t\t                    \"outlets\": [\n\t\t                        1\n\t\t                    ]\n\t\t                }\n\t\t            ]\n\t\t        },\n\t\t        {\n\t\t            \"companyId\": \"548227d3eff39f865700000b\",\n\t\t            \"customerId\": \"5696b8fe1a069ac105000002\",\n\t\t            \"delayAfterRun\": 0,\n\t\t            \"deleted\": false,\n\t\t            \"displayOrder\": 2,\n\t\t            \"icon\": \"streambox\",\n\t\t            \"lastRun\": \"2016-08-29T01:47:46-04:00\",\n\t\t            \"locationId\": \"5696bc421a069ac105000003\",\n\t\t            \"commandId\": \"57c3c92983a81d69194c3da2\",\n\t\t            \"name\": \"dsfs\",\n\t\t            \"nameL\": \"dsfs\",\n\t\t            \"status\": \"UNAVAILABLE\",\n\t\t            \"steps\": [\n\t\t                {\n\t\t                    \"action\": \"resetOutlets\",\n\t\t                    \"delay\": 121000,\n\t\t                    \"deviceId\": \"57bdc91983a81d69194c3cef\",\n\t\t                    \"outlets\": [\n\t\t                        1\n\t\t                    ]\n\t\t                }\n\t\t            ]\n\t\t        }\n\t\t    ],\n\t\t    \"limit\": 50,\n\t\t    \"message\": {\n\t\t        \"code\": 200,\n\t\t        \"description\": \"You have chosen... wisely.\",\n\t\t        \"title\": \"Success!\"\n\t\t    },\n\t\t    \"offset\": 0,\n\t\t    \"totalCount\": 2\n\t\t}"
              }
            }
          }
        }
      }
    },
    "/v1/ovrcconnect/commands/run": {
      "post": {
        "tags": ["Ovrc_Connect"],
        "summary": "Runs Ovrc Connect Command",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Runs Ovrc Connect Command",
            "required": true,
            "schema": { "$ref": "#/definitions/Commands_PostRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/ovrcconnect/companies": {
      "get": {
        "tags": ["Ovrc_Connect"],
        "summary": "This Read API allows you to read information about your own company. This also includes companies that have invited your user account to their company using groups.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/Companies_Get" },
            "examples": {
              "Success-Response:": {
                "value": "{\n  \"items\": [\n    {\n      \"companyId\": \"5e15dfaad5e6b54c94df7d1b\",\n      \"name\": \"Official A/V Co.\",\n      \"accountNum\": \"D10028\",\n      \"erpCode\": \"S12345\",\n      \"licenseType\": \"pro\",\n      \"logoUrl\": \"https://s3.amazonaws.com/snapav-userfiles/dew-qa/548227d3eff39f865700000b/companyLogo.png\",\n      \"contactName\": \"Official Audio Video\",\n      \"phone\": \"5551234567\",\n      \"phoneExtension\": \"2221\",\n      \"email\": \"test@officialav.com\",\n      \"supportProfile1\": {\n         \"email\": \"znaci_saj@hotmail.com\",\n         \"phone\": \"123456\",\n         \"phoneExt\": \"123\"\n      },\n      \"supportProfile2\": {\n         \"email\": \"znaci.saj@gmail.com\",\n         \"phone\": \"1234567\",\n         \"phoneExt\": \"124\"\n      }\n    }\n  ],\n  \"totalCount\": 1,\n  \"offset\": 0,\n  \"limit\": 1\n}"
              }
            }
          }
        }
      }
    },
    "/v1/ovrcconnect/completeforgotpassword": {
      "put": {
        "tags": ["Ovrc_Connect"],
        "summary": "Executes complete forgot password logic for OvrC Connect account",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Executes complete forgot password logic for OvrC Connect account",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Complete_Forgot_PasswordRequest"
            }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/ovrcconnect/contentfiltering": {
      "get": {
        "tags": ["Ovrc_Connect"],
        "summary": "Read content filtering information",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "locationId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Database GUID of location to read"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/Content_Filtering" },
            "examples": {
              "Success-Response:": {
                "value": "{\n        \"isContentFilteringEnabled\" : true,\n        \"contentFilteringOption\" : \"LIGHT\"\n}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Ovrc_Connect"],
        "summary": "Changes content filtering information for a location",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Changes content filtering information for a location",
            "required": true,
            "schema": { "$ref": "#/definitions/Content_FilteringRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/Content_Filtering" }
          }
        }
      }
    },
    "/v1/ovrcconnect/customers": {
      "get": {
        "tags": ["Ovrc_Connect"],
        "summary": "This Read API allows you to read information about customer who is using Ovrc Connect.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/Customers" },
            "examples": {
              "Success-Response:": {
                "value": "{\n  \"customerId\": \"5e15dfaad5e6b54c94df7d1b\",\n  \"contentFilteringEnabled\": true,\n  \"macroCommandsEnabled\": true,\n  \"parentalControlsEnabled\": true\n}"
              }
            }
          }
        }
      }
    },
    "/v1/ovrcconnect/forgotpassword": {
      "post": {
        "tags": ["Ovrc_Connect"],
        "summary": "Executes forgot password logic for OvrC Connect account",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Executes forgot password logic for OvrC Connect account",
            "required": true,
            "schema": { "$ref": "#/definitions/Forgot_PasswordRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/ovrcconnect/locations": {
      "get": {
        "tags": ["Ovrc_Connect"],
        "summary": "Get locations for Ovrc Connect User",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "of the Ovrc Connect User (dealerId)."
          },
          {
            "name": "customerId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "of the Ovrc Connect User."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "Success-Response:": {
                "value": "{\n  \"items\": [\n\t\t{\n      \"_id\": \"5e15dfadd5e6b54c94df7d1c\",\n      \"address\": \"409 W W.T.Harris Blvd, Charlotte, NC 28262, USA\",\n      \"counts\": {\n          \"548227d3eff39f865700000b\": {\n              \"degradedDevices\": 0,\n              \"firmwareUpdates\": 2,\n              \"lastUpdated\": \"2021-07-01T15:58:56.459Z\",\n              \"offlineDevices\": 1,\n              \"onlineDevices\": 8,\n              \"totalDevices\": 9\n          }\n      },\n      \"countsNeedUpdate\": true,\n      \"createdAt\": \"2020-01-08T13:57:01.331Z\",\n      \"customer\": {\n          \"_id\": \"5e15dfaad5e6b54c94df7d1b\",\n          \"companyName\": \"Platform Dev Test Rack\",\n          \"companyNameL\": \"platform dev test rack\"\n      },\n      \"customerId\": \"5e15dfaad5e6b54c94df7d1b\",\n      \"dealerId\": \"548227d3eff39f865700000b\",\n      \"deleted\": false,\n      \"history\": {\n          \"created\": {\n              \"at\": \"2020-01-08T13:57:01.331Z\",\n              \"by\": \"548227d3eff39f865700000c\"\n          },\n          \"lastUpdated\": {\n              \"at\": \"2021-05-10T01:06:45.457Z\",\n              \"by\": \"5fd76179d5e6b57e58b8af9e\",\n              \"impersonatedBy\": \"5fd76179d5e6b57e58b8af9e\"\n          }\n      },\n      \"isSsidManagementEnabled\": false,\n      \"isp\": {},\n      \"licenseId\": \"58d030640e9c0a5f97447392\",\n      \"licenseType\": \"pro\",\n      \"locationId\": \"5e15dfadd5e6b54c94df7d1c\",\n      \"locationName\": \"CLT\",\n      \"locationNameL\": \"clt\",\n      \"notificationsDisabledUserIds\": [\n          \"6061d6ccd5e6b542bb79ac72\",\n          \"5cb4c0a4d5e6b557e87b1575\",\n          \"601d1f06d5e6b56f955ada3b\"\n      ],\n      \"proSettings\": {\n          \"deviceDiscovery\": {\n              \"deviceId\": \"5f99365b6975a38f5ba53ca9\",\n              \"frequency\": 86400\n          },\n          \"healthMonitor\": {\n              \"deviceId\": \"5f99365b6975a38f5ba53ca9\",\n              \"frequency\": 300\n          },\n          \"speedTest\": {\n              \"deviceId\": \"5f99365b6975a38f5ba53ca9\",\n              \"frequency\": 21600\n          }\n      },\n      \"sharedOut\": true,\n      \"ssidManagement_Old\": {\n          \"isImportInProgress\": false,\n          \"isPushInProgress\": false,\n          \"lastImportDate\": \"2021-04-28T13:35:11.159Z\",\n          \"lastPushDate\": \"2021-04-15T11:13:59.515Z\",\n          \"pushServer\": \"\"\n      },\n      \"ssidManagement_old2\": {\n          \"isImportInProgress\": false,\n          \"lastImportDate\": \"2021-04-29T10:38:27.979Z\"\n      },\n      \"stats\": {\n          \"totalDevices\": 0,\n          \"totalOfflineDevices\": 0,\n          \"totalUpdateDevices\": 0\n      },\n      \"verifiedAddress\": null\n  },\n  ],\n  \"message\": {\n      \"code\": 200,\n      \"description\": \"You have chosen... wisely.\",\n      \"title\": \"Success!\"\n  }\n}"
              }
            }
          }
        }
      }
    },
    "/v1/ovrcconnect/locations/networkclientlists": {
      "get": {
        "tags": ["Ovrc_Connect"],
        "summary": "Updates network clients for specified location.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "locationId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of location"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Locations_Network_Client_Lists_Get"
            },
            "examples": {
              "Success-Response:": {
                "value": "{\n  \"networkDevices\":[\n    {\n      \"deviceId\":\"54cf9d9506422059440015d6\",\n      \"macAddress\":\"D4:6A:91:32:00:04\",\n      \"deviceName\":\"WAP Sim\",\n      \"type\":\"WAP\",\n      \"connected\":true\n    },\n    {\n      \"deviceId\":\"5a05ccfd90c5f910537ed471\",\n      \"macAddress\":\"D4:6A:91:00:00:01\",\n      \"deviceName\":\"Router Sim\",\n      \"type\":\"ROUTER\",\n      \"connected\":true\n    }\n  ],\n  \"wired\" : [\n    {\n      \"Name\" : \"AN-500-AP Upstairs\",\n      \"Ip\" : \"192.168.254.103\",\n      \"Mac\" : \"D4:6A:91:A9:4C:3C\",\n      \"Mfg\" : \"Snap AV\",\n      \"Res\" : false,\n      \"Online\" : true,\n      \"Source\": \"Router\",\n      \"SourceMac\" : \"D4:6A:91:00:00:01\",\n      \"SourceType\" : \"ROUTER\"\n    }\n  ],\n  \"wireless\" : [\n    {\n      \"Name\": \"wapDevice2\",\n      \"Ip\": \"192.168.1.103\",\n      \"Mac\": \"76:AB:E5:09:2A:76\",\n      \"Mfg\": \"Unknown\",\n      \"OS\": \"MyOS1\",\n      \"Int\": \"2.4GHz\",\n      \"Ssid\": \"986544\",\n      \"Rssi\": -93,\n      \"Rx\": 454321,\n      \"Tx\": 353212,\n      \"Source\": \"Upstairs WAP\",\n      \"SourceMac\" : \"D4:6A:91:00:00:02\",\n      \"SourceType\" : \"WAP\"\n    },\n    {\n      \"Name\": \"Chromecast\",\n      \"Ip\": \"192.168.254.200\",\n      \"Mac\": \"FA:8F:CA:2C:EB:12\",\n      \"Mfg\": \"Unknown\",\n      \"OS\": \"\",\n      \"Int\": \"\",\n      \"Ssid\": \"OvrC Beach House\",\n      \"Rssi\": 100,\n      \"Rx\": 854322,\n      \"Tx\": 753212,\n      \"Source\": \"Router\",\n      \"SourceMac\" : \"D4:6A:91:00:00:01\",\n      \"SourceType\" : \"ROUTER\"\n    }\n  ]\n}"
              }
            }
          }
        }
      }
    },
    "/v1/ovrcconnect/login": {
      "post": {
        "tags": ["Ovrc_Connect"],
        "summary": "Login for Ovrc Connect account http://api.ovrc.com/v1/ovrcconnect/login",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Login for Ovrc Connect account http://api.ovrc.com/v1/ovrcconnect/login",
            "required": true,
            "schema": { "$ref": "#/definitions/LoginRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/ovrcconnect/logout": {
      "post": {
        "tags": ["Ovrc_Connect"],
        "summary": "Executes logout logic for OvrC Connect account",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/ovrcconnect/rememberme": {
      "get": {
        "tags": ["Ovrc_Connect"],
        "summary": "This Read API allows you to read information about Ovrc Connect user by his sessionId read from headers. This is used for Remember Me logic on frontend.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/Remember_me_Get" },
            "examples": {
              "Success-Response:": {
                "value": "{\n  \"companyId\": \"5e15dfaad5e6b54c94df7d1b\",\n  \"dealerId\": \"548227d3eff39f865700000b\",\n  \"name\": \"mark\",\n  \"status\": \"ENABLED\",\n  \"userId\": \"615d9b1ec4b5f05dff479392\",\n  \"username\": \"mark.johnson@snapone.com\"\n}"
              }
            }
          }
        }
      }
    },
    "/v1/ovrcconnect/wirelessprofiles/runaction": {
      "post": {
        "tags": ["Ovrc_Connect"],
        "summary": "Pause or Resume a wireless schedule",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Pause or Resume a wireless schedule",
            "required": true,
            "schema": { "$ref": "#/definitions/Run_ActionRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/ovrcconnect/sendemail": {
      "post": {
        "tags": ["Ovrc_Connect"],
        "summary": "Send Email on Ovrc Connect to Support",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Send Email on Ovrc Connect to Support",
            "required": true,
            "schema": { "$ref": "#/definitions/Send_EmailRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/ovrcconnect/timezones": {
      "get": {
        "tags": ["Ovrc_Connect"],
        "summary": "Read all timezones",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/Timezones" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t \t\t\"items\": [\n\t\t\t\t{\n\t\t\t\t\t\"timezoneId\": \"5a00aa80e21950d76d0e0532\",\n\t\t\t\t\t\"name\": \"America/New_York\",\n\t\t\t\t\t\"notes\": \"Eastern Time (US & Canada)\",\n\t\t\t\t\t\"offset\": 300\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"timezoneId\": \"5a00ac90e21950d76d0e053c\",\n\t\t\t\t\t\"name\": \"America/Chicago\",\n\t\t\t\t\t\"notes\": \"Central Time (US & Canada)\",\n\t\t\t\t\t\"offset\": 360\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"timezoneId\": \"5a00add2e21950d76d0e0543\",\n\t\t\t\t\t\"name\": \"America/Denver\",\n\t\t\t\t\t\"notes\": \"Mountain Time (US & Canada)\",\n\t\t\t\t\t\"offset\": 420\n\t\t\t\t}\n\t\t\t]\n     }"
              }
            }
          }
        }
      }
    },
    "/v1/ovrcconnect/wirelessprofiles/schedules": {
      "delete": {
        "tags": ["Ovrc_Connect"],
        "summary": "Deletes wireless profile schedules",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Deletes wireless profile schedules",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Wireless_Profile_Schedules_DeleteRequest"
            }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      },
      "get": {
        "tags": ["Ovrc_Connect"],
        "summary": "Read wireless profile schedules",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "wirelessProfileId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The wireless profile id to find wireless schedules for."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Wireless_Profile_Schedules_Get"
            },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t    \"items\": [\n\t\t        {\n\t\t            \"companyId\": \"548227d3eff39f865700000b\",\n\t\t            \"customerId\": \"5e15dfaad5e6b54c94df7d1b\",\n\t\t            \"isEnabled\": true,\n\t\t            \"scheduleName\": \"New Schedule\",\n\t\t            \"status\": \"PAUSED\",\n\t\t            \"timezone\": \"America/New_York\",\n\t\t            \"userId\": \"548227d3eff39f865700000c\",\n\t\t            \"weekdays\": {\n\t\t                \"days\": {\n\t\t                    \"friday\": true,\n\t\t                    \"monday\": true,\n\t\t                    \"saturday\": true,\n\t\t                    \"sunday\": true,\n\t\t                    \"thursday\": true,\n\t\t                    \"tuesday\": true,\n\t\t                    \"wednesday\": true\n\t\t                },\n\t\t                \"isEnabled\": true,\n\t\t                \"pauseTime\": 2000,\n\t\t                \"pauseTimeDisplay\": \"8:00PM EST\",\n\t\t                \"resumeTime\": 600,\n\t\t                \"resumeTimeDisplay\": \"06:00AM EST\"\n\t\t            },\n\t\t            \"weekends\": {\n\t\t                \"days\": {\n\t\t                    \"friday\": false,\n\t\t                    \"monday\": false,\n\t\t                    \"saturday\": false,\n\t\t                    \"sunday\": false,\n\t\t                    \"thursday\": false,\n\t\t                    \"tuesday\": false,\n\t\t                    \"wednesday\": false\n\t\t                },\n\t\t                \"isEnabled\": false,\n\t\t                \"pauseTime\": 200,\n\t\t                \"pauseTimeDisplay\": \"02:00AM EST\",\n\t\t                \"resumeTime\": 350,\n\t\t                \"resumeTimeDisplay\": \"03:50AM EST\"\n\t\t            },\n\t\t            \"wirelessProfileId\": \"5e18c769d5e6b56e76fa49fe\",\n\t\t            \"wirelessScheduleId\": \"5e2003262bfcbd9e2670fb37\"\n\t\t        }\n\t\t    ],\n\t\t    \"limit\": 25,\n\t\t    \"message\": {\n\t\t        \"code\": 200,\n\t\t        \"description\": \"You have chosen... wisely.\",\n\t\t        \"title\": \"Success!\"\n\t\t    },\n\t\t    \"offset\": 0,\n\t\t    \"totalCount\": 1\n\t\t}"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Ovrc_Connect"],
        "summary": "Creates a wireless profile schedule",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Creates a wireless profile schedule",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Wireless_Profile_Schedules_PostRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Wireless_Profile_Schedules_Post"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Ovrc_Connect"],
        "summary": "Updates a wireless profile schedule",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Updates a wireless profile schedule",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Wireless_Profile_Schedules_PutRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Wireless_Profile_Schedules_Put"
              }
            }
          }
        }
      }
    },
    "/v1/ovrcconnect/wirelessprofiles": {
      "delete": {
        "tags": ["Ovrc_Connect"],
        "summary": "Deletes a wireless profile",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Deletes a wireless profile",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Wireless_Profiles_DeleteRequest"
            }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      },
      "get": {
        "tags": ["Ovrc_Connect"],
        "summary": "Read a wireless profile.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "customerID",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Customer ID of the Wireless Profiles you'd like to see."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/Wireless_Profiles_Get" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t    \"items\": [\n\t\t        {\n\t\t            \"devices\": [\n\t\t                {\n\t\t                    \"macAddress\": \"34:4D:F7:0E:16:6F\",\n\t\t                    \"manufacturer\": \"LG Electronics (Mobile Communications)\",\n\t\t                    \"name\": \"\",\n\t\t                    \"os\": \"Android\"\n\t\t                }\n\t\t            ],\n\t\t            \"name\": \"tt\",\n\t\t            \"wirelessProfileId\": \"356131646231306234343739383834656364333661613839\"\n\t\t            \"status\": \"PAUSED\",\n                 \"nextUp\": {\n                                 \"nextRun\": \"2020-02-11T01:01:00Z\",\n                                 \"action\": \"PAUSE\",\n                                 \"nextRunDisplay\": \"8:01PM EST\"\n                             }\n\t\t        }\n\t\t    ],\n\t\t    \"limit\": 25,\n\t\t    \"message\": {\n\t\t        \"code\": 200,\n\t\t        \"description\": \"You have chosen... wisely.\",\n\t\t        \"title\": \"Success!\"\n\t\t    },\n\t\t    \"offset\": 0,\n\t\t    \"totalCount\": 1\n\t\t}"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Ovrc_Connect"],
        "summary": "Creates a wireless profile",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Creates a wireless profile",
            "required": true,
            "schema": { "$ref": "#/definitions/Wireless_Profiles_PostRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      },
      "put": {
        "tags": ["Ovrc_Connect"],
        "summary": "Update a wireless profile",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Update a wireless profile",
            "required": true,
            "schema": { "$ref": "#/definitions/Wireless_Profiles_PutRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/pakedge/macfilter": {
      "get": {
        "tags": ["PakEdge_WAP"],
        "summary": "Instructs a PakEdge WAP to get it's MAC Filters settings.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The device's device ID"
          }
        ],
        "responses": { "200": { "description": "Success" } }
      },
      "put": {
        "tags": ["PakEdge_WAP"],
        "summary": "Instructs a PakEdge WAP to change it's MAC Filters to the given settings.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instructs a PakEdge WAP to change it's MAC Filters to the given settings.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PakEdgeWapMACFilterSettingsUpdateRequest"
            }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/pakedge/wawireless": {
      "get": {
        "tags": ["PakEdge_WAP"],
        "summary": "Instructs a PakEdge WAP to return it's wireless settings (SKU Prefix: WA)",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The device's device ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t    \"noGoodDeviceYet\": \"unknown\"\n\t\t}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["PakEdge_WAP"],
        "summary": "Instructs a PakEdge WAP to change it's wireless configuration to the given settings. (SKU Prefix: WA)",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instructs a PakEdge WAP to change it's wireless configuration to the given settings. (SKU Prefix: WA)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PakEdgeWapWaWirelessSettingsUpdateRequest"
            }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/pakedge/wireless": {
      "get": {
        "tags": ["PakEdge_WAP"],
        "summary": "Instructs a PakEdge WAP to return it's wireless settings",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The device's device ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t    \"advanced\": {\n\t\t        \"beacon_interval\": {\n\t\t            \"band24\": \"100\",\n\t\t            \"band5\": \"100\"\n\t\t        },\n\t\t        \"bss\": {\n\t\t            \"band24\": \"off\",\n\t\t            \"band5\": \"off\"\n\t\t        },\n\t\t        \"multicast_ench\": {\n\t\t            \"band24\": \"off\",\n\t\t            \"band5\": \"off\"\n\t\t        },\n\t\t        \"protection_mode\": {\n\t\t            \"band24\": \"none\"\n\t\t        },\n\t\t        \"rssi_reject\": {\n\t\t            \"band24\": \"off\",\n\t\t            \"band5\": \"off\"\n\t\t        },\n\t\t        \"rssi_value\": {\n\t\t            \"band24\": \"-94\",\n\t\t            \"band5\": \"-94\"\n\t\t        },\n\t\t        \"rts_cts\": {\n\t\t            \"band24\": \"2346\",\n\t\t            \"band5\": \"2347\"\n\t\t        },\n\t\t        \"transmit_power\": {\n\t\t            \"band24\": \"13\",\n\t\t            \"band5\": \"18\"\n\t\t        }\n\t\t    },\n\t\t    \"dateTime\": \"2020-02-19T22:12:24Z\",\n\t\t    \"deviceId\": \"5e456f8ab7ab52a3cc6a661f\",\n\t\t    \"guest_network\": {\n\t\t        \"band24\": [\n\t\t            {\n\t\t                \"network_index\": 0,\n\t\t                \"security_profile\": \"Guest Default\",\n\t\t                \"ssid\": \"PakedgeGuest2.4\",\n\t\t                \"status\": \"off\"\n\t\t            }\n\t\t        ],\n\t\t        \"band5\": [\n\t\t            {\n\t\t                \"network_index\": 50,\n\t\t                \"security_profile\": \"Guest Default\",\n\t\t                \"ssid\": \"PakedgeGuest5\",\n\t\t                \"status\": \"off\"\n\t\t            }\n\t\t        ],\n\t\t        \"dhcp_end\": \"192.168.200.250\",\n\t\t        \"dhcp_start\": \"192.168.200.100\",\n\t\t        \"dns\": \"8.8.8.8\",\n\t\t        \"ip\": \"192.168.200.1\",\n\t\t        \"netmask\": \"255.255.255.0\"\n\t\t    },\n\t\t    \"message\": {\n\t\t        \"code\": 200,\n\t\t        \"description\": \"You have chosen... wisely.\",\n\t\t        \"title\": \"Success!\"\n\t\t    },\n\t\t    \"private_network\": {\n\t\t        \"band24\": [\n\t\t            {\n\t\t                \"bssid\": \"90:A7:C1:38:1D:C8\",\n\t\t                \"hide\": \"off\",\n\t\t                \"isolate\": \"off\",\n\t\t                \"network_index\": 0,\n\t\t                \"security_profile\": \"Pakedge Default\",\n\t\t                \"ssid\": \"Pakedge2.4\",\n\t\t                \"status\": \"on\",\n\t\t                \"vlan\": \"1\"\n\t\t            }\n\t\t        ],\n\t\t        \"band5\": [\n\t\t            {\n\t\t                \"bssid\": \"90:A7:C1:38:1D:D1\",\n\t\t                \"hide\": \"off\",\n\t\t                \"isolate\": \"off\",\n\t\t                \"network_index\": 50,\n\t\t                \"security_profile\": \"Pakedge Default\",\n\t\t                \"ssid\": \"Pakedge5\",\n\t\t                \"status\": \"on\",\n\t\t                \"vlan\": \"1\"\n\t\t            }\n\t\t        ]\n\t\t    },\n\t\t    \"radio\": {\n\t\t        \"bandsteering\": \"off\",\n\t\t        \"channel\": {\n\t\t            \"band24\": \"auto\",\n\t\t            \"band5\": \"auto\"\n\t\t        },\n\t\t        \"channel_actual\": {\n\t\t            \"band24\": \"11\",\n\t\t            \"band5\": \"36\"\n\t\t        },\n\t\t        \"channel_width\": {\n\t\t            \"band24\": \"HT20\",\n\t\t            \"band5\": \"VHT80\"\n\t\t        },\n\t\t        \"country_code\": \"US\",\n\t\t        \"dfs\": \"off\",\n\t\t        \"enabled\": {\n\t\t            \"band24\": true,\n\t\t            \"band5\": true\n\t\t        },\n\t\t        \"operation_mode\": {\n\t\t            \"band24\": \"ap\",\n\t\t            \"band5\": \"ap\"\n\t\t        },\n\t\t        \"wireless_mode\": {\n\t\t            \"band24\": \"ng\",\n\t\t            \"band5\": \"anaac\"\n\t\t        }\n\t\t    },\n\t\t    \"security_profiles\": [\n\t\t        {\n\t\t            \"encryption\": \"psk2\",\n\t\t            \"in_use\": true,\n\t\t            \"password\": \"snapav01\",\n\t\t            \"profile_id\": \"1\",\n\t\t            \"profile_name\": \"Pakedge Default\"\n\t\t        },\n\t\t        {\n\t\t            \"encryption\": \"psk2\",\n\t\t            \"in_use\": true,\n\t\t            \"password\": \"pakedgeguest\",\n\t\t            \"profile_id\": \"2\",\n\t\t            \"profile_name\": \"Guest Default\"\n\t\t        }\n\t\t    ],\n\t\t    \"statistics\": {\n\t\t        \"band24\": {\n\t\t            \"rx\": 3926671484,\n\t\t            \"tx\": 328249135\n\t\t        },\n\t\t        \"band5\": {\n\t\t            \"rx\": 106464612,\n\t\t            \"tx\": 173825294\n\t\t        }\n\t\t    }\n\t\t}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["PakEdge_WAP"],
        "summary": "Instructs a PakEdge WAP to change it's wireless configuration to the given settings.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instructs a PakEdge WAP to change it's wireless configuration to the given settings.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PakEdgeWapWirelessSettingsUpdateRequest"
            }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/router/autorebootschedule": {
      "get": {
        "tags": ["Router"],
        "summary": "Instructs a router to return its auto reboot schedule.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The device's device ID"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/RouterAutoRebootScheduleGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t\t\"dateTime\": \"2019-05-28T15:56:46Z\",\n\t\t\t\"deviceId\": \"5cdad7a3b30fc2082deb94af\",\n\t\t\t\"enabled\": true,\n\t\t\t\"time\": \"22:00\",\n\t\t\t\"hasUnsupportedSchedule\": false,\n\t\t\t\"weekdays\": [\n\t\t\t\t\"MONDAY\",\n\t\t\t\t\"WEDNESDAY\",\n\t\t\t\t\"THURSDAY\"\n\t\t\t]\n\t\t}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Router"],
        "summary": "Instructs a router to accept new auto reboot schedule.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instructs a router to accept new auto reboot schedule.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RouterAutoRebootScheduleSetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/RouterAutoRebootScheduleSet" }
          }
        }
      }
    },
    "/v1/router/dhcpreservations": {
      "get": {
        "tags": ["Router"],
        "summary": "Gets DHCP reservations.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/RouterDHCPReservationGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n    \"deviceId\": \"5cd9c9a9b30fc2082deb94a2\",\n    \"reservations\" : [\n        {\n            \"enabled\": true,\n            \"description\": \"Garage Switch\",\n            \"mac\": \"D4:6A:91:00:19:76\",\n            \"ip\": 192.210.6.66\n        }\n    ]\n}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Router"],
        "summary": "Sets a DHCP reservation.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Sets a DHCP reservation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RouterDHCPReservationSetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/RouterDHCPReservationSet" }
          }
        }
      }
    },
    "/v1/router/portforwarding": {
      "get": {
        "tags": ["Router"],
        "summary": "Instruct the router to return the list of rules used to forward ports.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/RouterPortForwardingGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t\t\"deviceId\": \"5cdad7a3b30fc2082deb94af\",\n\t\t\t\"rules\": [\n\t\t\t\t{\n\t\t\t\t\t\"description\": \"RDP\",\n\t\t\t\t\t\"enabled\": true,\n\t\t\t\t\t\"externalPortRangeEnd\": 3389,\n\t\t\t\t\t\"externalPortRangeStart\": 3389,\n\t\t\t\t\t\"internalIP\": \"192.168.1.100\",\n\t\t\t\t\t\"internalPortRangeEnd\": 3389,\n\t\t\t\t\t\"internalPortRangeStart\": 3389,\n\t\t\t\t\t\"protocol\": \"TCP\",\n\t\t\t\t\t\"wanPort\": 0\n\t\t\t\t}\n\t\t\t]\n\t\t}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Router"],
        "summary": "Instruct the router to add or update the given rules for forwarding ports.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instruct the router to add or update the given rules for forwarding ports.",
            "required": true,
            "schema": { "$ref": "#/definitions/RouterPortForwardingSetRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/RouterPortForwardingSet" }
          }
        }
      }
    },
    "/v1/router/securitylist": {
      "get": {
        "tags": ["Router"],
        "summary": "Instructs the device to return its security list",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "GUID of the device."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/RouterSecurityListRead" },
            "examples": {
              "Success-Response:": {
                "value": "{\n  \"deviceId\": \"52f00abe1c48eaa1770186ee\",\n  \"blacklist\" : {\n      \"enabled\" : false,\n      \"devices\" : [\n          \"D4:6A:91:00:06:66,\n          \"D4:6A:91:00:06:67,\n      ]\n  },\n  \"whitelist\" : {\n      \"enabled\" : false,\n      \"devices\" : [\n          \"D4:6A:91:00:06:68,\n          \"D4:6A:91:00:06:69,\n      ]\n  }\n}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Router"],
        "summary": "Instructs the device to update its security list",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instructs the device to update its security list",
            "required": true,
            "schema": { "$ref": "#/definitions/RouterSecurityListSetRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/RouterSecurityListSet" }
          }
        }
      }
    },
    "/v1/router/status": {
      "get": {
        "tags": ["Router"],
        "summary": "Returns the latest status for a given router.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Router's Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/RouterStatusRead" },
            "examples": {
              "Success-Response:": {
                "value": "{\n    \"deviceId\": \"55e4ab6c1a6e63a011002a84\",\n    \"activeWAN\": \"WAN1\",\n    \"clients\": 1,\n    \"dateTime\": \"2019-09-04T20:09:05Z\",\n    \"system\": {\n        \"cpu\": 4,\n        \"memFree\": 158633984,\n        \"memUsed\": 80781312\n    }\n}"
              }
            }
          }
        }
      }
    },
    "/v1/router/wansettings": {
      "get": {
        "tags": ["Router"],
        "summary": "Instruct the Router to return its WAN settings.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/RouterWANSettingsGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n  \"wanPorts\":[\n    {\n        \"status\": \"PRIMARY\"\n        \"connection\": \"DHCP\"\n        \"mac\": \"01:02:03:04:05:06\",\n        \"ip\": \"64.92.31.101\",\n        \"mask\": \"255.255.240.0\",\n        \"gateway\": \"64.92.16.1\",\n        \"dnsMode\": \"STATIC\"\n        \"dns1\": \"8.8.8.8\",\n        \"dns2\": \"9.9.9.9\"\n    }\n  ]\n}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Router"],
        "summary": "Sets router's WAN settings.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Sets router's WAN settings.",
            "required": true,
            "schema": { "$ref": "#/definitions/RouterWANSettingsSetRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/router/wirelesssettings": {
      "get": {
        "tags": ["Router"],
        "summary": "Instructs a router-hub to return it's wireless settings",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The device's device ID"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/RouterWirelessSettingsGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t    \"bandsteering\": false,\n\t\t    \"dateTime\": \"2019-05-24T18:34:00Z\",\n\t\t    \"deviceId\": \"5cdad7a3b30fc2082deb94af\",\n\t\t    \"message\": {\n\t\t        \"code\": 200,\n\t\t        \"description\": \"You have chosen... wisely.\",\n\t\t        \"title\": \"Success!\"\n\t\t    },\n\t\t    \"radio_24\": {\n\t\t        \"bandwidth\": \"MHZ_20\",\n\t\t        \"channel\": \"AUTO\",\n\t\t        \"enabled\": true,\n\t\t        \"mode\": \"B_G_N\",\n\t\t        \"ssid\": [\n\t\t            {\n                     \"canDelete\" : false,\n\t\t                \"clientIsolation\": false,\n\t\t                \"enabled\": true,\n\t\t                \"name\": \"Cerveza-110W\",\n\t\t                \"security\": {\n\t\t                    \"wpa2-psk\": {\n\t\t                        \"groupKey\": 650,\n\t\t                        \"passphrase\": \"Cerveza01\"\n\t\t                    }\n\t\t                },\n\t\t                \"vlanId\": 1\n\t\t            }\n\t\t        ],\n\t\t        \"transmit_dBm\": 20\n\t\t    },\n\t\t    \"radio_5\": {\n\t\t        \"bandwidth\": \"MHZ_80\",\n\t\t        \"channel\": \"AUTO\",\n\t\t        \"enabled\": true,\n\t\t        \"mode\": \"A_N_AC\",\n\t\t        \"ssid\": [\n\t\t            {\n                     \"canDelete\" : false,\n\t\t                \"clientIsolation\": false,\n\t\t                \"enabled\": true,\n\t\t                \"name\": \"araknis_initial\",\n\t\t                \"vlanId\": 1\n\t\t            }\n\t\t        ],\n\t\t        \"transmit_dBm\": 18\n\t\t    }\n\t\t}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Router"],
        "summary": "Instructs a router-hub to update it's wireless settings",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instructs a router-hub to update it's wireless settings",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RouterWirelessSettingsSetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/RouterWirelessSettingsSet" }
          }
        }
      }
    },
    "/v1/companies/signup": {
      "post": {
        "tags": ["Signup_Flow"],
        "summary": "This API sends an email with a unique link to complete the signup sequence. The link will then call companies/signupConfirm to complete the process.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "This API sends an email with a unique link to complete the signup sequence. The link will then call companies/signupConfirm to complete the process.",
            "required": true,
            "schema": { "$ref": "#/definitions/CompaniesSignupRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/companies/signupconfirm": {
      "post": {
        "tags": ["Signup_Flow"],
        "summary": "This email completes your company signup, by providing the signUpConfirmId provided in the email that was sent to the registered company's email address.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "This email completes your company signup, by providing the signUpConfirmId provided in the email that was sent to the registered company's email address.",
            "required": true,
            "schema": { "$ref": "#/definitions/CompaniesSignupConfirmRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/users/validateusername": {
      "post": {
        "tags": ["Signup_Flow"],
        "summary": "This API validates if a username is available for signup or not.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "This API validates if a username is available for signup or not.",
            "required": true,
            "schema": { "$ref": "#/definitions/UsersValidateUsernameRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/aus/status": {
      "get": {
        "tags": ["Streamer_Commands"],
        "summary": "Instructs the device to return its current status.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/StreamerStatusGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n         \"deviceId\": \"5cd9c9a9b30fc2082deb94a2\",\n         \"dateTime\": \"2008-09-15T15:53:00+05:00\",\n         \"uptime\": \"2 Days 1Hr 34Min\",\n         \"storage\": {\n\t\t\t\t\"total\": 1000000000,\n\t\t\t\t\"available\": 500000000,\n\t\t\t}\n         \"services\": \"iHeartRadio,Pandora,Slacker,TuneIn\",\n     }"
              }
            }
          }
        }
      }
    },
    "/v1/switch/poesettings": {
      "get": {
        "tags": ["Switch_Commands"],
        "summary": "Instructs the switch to get its PoE settings.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/SwitchPoeSettingsGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n     \t\"deviceId\": \"54cf37570642205944000899\",\n     \t\"settings\": {\n\t\t\t\t\"number\": 1,\n\t\t\t\t\"name\": \"Connected_Device\",\n\t\t\t\t\"powerConsumption\": 20.0,\n\t\t\t\t\"maxPowerAllocation\": \"30.0W\",\n\t\t\t\t\"poePriority\": \"LOW\"\n\t\t\t}\n     }"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Switch_Commands"],
        "summary": "Instructs the switch to set its PoE settings.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instructs the switch to set its PoE settings.",
            "required": true,
            "schema": { "$ref": "#/definitions/SwitchPoeSettingsSetRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/SwitchPoeSettingsSet" }
          }
        }
      }
    },
    "/v1/switch/status": {
      "get": {
        "tags": ["Switch_Commands"],
        "summary": "Instructs the switch to return its status.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/SwitchStatusGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t    \"deviceId\": \"5ced96ad91f44a14fb929ddf\",\n\t\t    \"dateTime\": \"2019-09-04T20:16:52Z\",\n\t\t    \"temperature\": 15.9,\n\t\t    \"uptime\": 704370\n\t\t}"
              }
            }
          }
        }
      }
    },
    "/v1/switch/systemsettings": {
      "get": {
        "tags": ["Switch_Commands"],
        "summary": "Instructs the switch to return its system settings.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/SwitchSystemSettingsGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n    \"deviceId\": \"5cd9c9a9b30fc2082deb94a2\",\n    \"systemName\": \"\",\n    \"deviceIpAddress\": \"192.168.1.1\",\n    \"deviceSubnetMask\": \"255.255.255.0\",\n    \"deviceDefaultGateway\": \"0.0.0.0\",\n    \"managementVlan\": 2,\n    \"adminUsername\": \"user123\",\n    \"adminPassword\": \"pass123\",\n    \"dhcpEnabled\": \"YES\",\n}"
              }
            }
          }
        }
      }
    },
    "/v1/search": {
      "get": {
        "tags": ["System_Resources"],
        "summary": "Used to perform searches. At this point, it is used to look for devices by mac address/Device Name and companies by company name/Location Name. Accepts partial (mac address/Device Name)/(company name/Location Name) and search either devices by mac address/Device Name or companies by company name/Location Name based on passed in filter. If the user is not a &quot;support&quot; person, API search only resources that belong to the user's company. If the company is a &quot;DEALER&quot;, then this would include the dealer's customers and devices.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "search term"
          },
          {
            "name": "filterby",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "specifies what to search in.  devices - searches all devices. If a mac address is provided will find a match for that otherwise searches the device name. ovrcdevices - searches only OVRC devices discovereddevices - searches only discovered devices companies - searches dealers and customers. Search term will search company/customer name, S code, D code, and customer location names dealers - searches dealers only customers - searches customers only "
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "Success-Response:": {
                "value": "{\n    \"items\": [\n        {\n            \"_id\": \"5e4d91cdb7ab52a3ccca0ba3\",\n            \"brandName\": \"Clare Controls\",\n            \"brandNameL\": \"clare controls\",\n            \"canReboot\": false,\n            \"claimDate\": \"2020-03-06T17:35:32.719Z\",\n            \"class\": \"OVRC\",\n            \"companyName\": \"Nates AV Company\",\n            \"connected\": true,\n            \"customerId\": \"552c25a67432664a5b000015\",\n            \"customerName\": \"Nathan Parmenter\",\n            \"dealerId\": \"548227d3eff39f865700000b\",\n            \"deleted\": false,\n            \"devAbout\": {\n                \"deviceId\": \"58:67:7F:9A:43:CA\",\n                \"firmware\": \"9.0.4-CLIQmini-2020-08-07T19:45:28Z\",\n                \"lanAddress\": \"192.168.5.143\",\n                \"lastUpdated\": \"2020-08-21T17:32:54.995Z\",\n                \"macAddress\": \"58:67:7F:9A:43:CA\",\n                \"model\": \"CLIQ.mini\",\n                \"platform\": \"Cliq-Mini-Rev-C\",\n                \"serialNum\": \"000000008310c77a\",\n                \"version\": 0\n            },\n            \"deviceName\": \"CLIQ.mini\",\n            \"deviceNameL\": \"cliq.mini\",\n            \"deviceServerIp\": \"10.21.0.218\",\n            \"deviceType\": {\n                \"attributes\": {\n                    \"siteManagement\": false,\n                    \"sshtunnel\": {\n                        \"port\": \"\",\n                        \"protocol\": \"\",\n                        \"supports\": false\n                    }\n                },\n                \"brandName\": \"Clare Controls\",\n                \"brandNameL\": \"\",\n                \"category\": \"Control System\",\n                \"firmware\": \"9.0.4-CLIQmini-2020-08-07T19:45:28Z\",\n                \"logTimeSeries\": false,\n                \"model\": \"CLIQ.mini\",\n                \"ovrcHome\": true,\n                \"platform\": \"\",\n                \"supported\": true,\n                \"type\": \"CLARE CONTROLS\"\n            },\n            \"email\": \"nathan.parmenter@snapav.com\",\n            \"firmware\": \"9.0.4-CLIQmini-2020-08-07T19:45:28Z\",\n            \"firstSeenTime\": \"2020-08-06T03:03:10.973Z\",\n            \"groups\": [\n                {\n                    \"_id\": \"5b169c4a905db6720621d444\",\n                    \"actions\": [\n                        \"dealers:ViewMap\",\n                        \"dealers:ViewUnverifiedLocations\",\n                        \"dealers:Read\",\n                        \"dealers:Update\",\n                        \"groups:Read\",\n                        \"users:Read\",\n                        \"customers:Read\",\n                        \"customers:Create\",\n                        \"customers:Update\",\n                        \"locations:Create\",\n                        \"locations:Read\",\n                        \"locations:Update\",\n                        \"locations:TransferDevice\",\n                        \"devices:Read\",\n                        \"devices:Update\",\n                        \"clientdevices:Read\",\n                        \"dealers:ViewAccountSettings\",\n                        \"dealers:UpdateAccountSettings\",\n                        \"users:Create\",\n                        \"users:Delete\",\n                        \"users:Update\",\n                        \"users:EditGroups\",\n                        \"customers:EditGroups\",\n                        \"groups:Create\",\n                        \"groups:Delete\",\n                        \"groups:Update\",\n                        \"customers:Delete\",\n                        \"locations:Delete\",\n                        \"devices:Delete\",\n                        \"locations:GrabSnapshot\"\n                    ],\n                    \"foreignKeys\": {\n                        \"parentDealerId\": \"548227d3eff39f865700000b\"\n                    },\n                    \"isOwner\": true,\n                    \"name\": \"Change0\"\n                },\n                {\n                    \"_id\": \"5c915f59d5e6b564bdbe4b98\",\n                    \"actions\": [\n                        \"dealers:ViewMap\",\n                        \"dealers:ViewUnverifiedLocations\",\n                        \"dealers:Read\",\n                        \"dealers:Update\",\n                        \"groups:Read\",\n                        \"users:Read\",\n                        \"customers:Read\",\n                        \"customers:Create\",\n                        \"customers:Update\",\n                        \"locations:Create\",\n                        \"locations:Read\",\n                        \"locations:Update\",\n                        \"locations:TransferDevice\",\n                        \"devices:Read\",\n                        \"devices:Update\",\n                        \"clientdevices:Read\",\n                        \"customers:Delete\",\n                        \"locations:Delete\",\n                        \"devices:Delete\",\n                        \"locations:GrabSnapshot\"\n                    ],\n                    \"foreignKeys\": {\n                        \"parentDealerId\": \"548227d3eff39f865700000b\"\n                    },\n                    \"isOwner\": false,\n                    \"name\": \"Administrator\"\n                },\n                {\n                    \"_id\": \"5f3e8fb5d5e6b55b6aa66aaa\",\n                    \"actions\": [\n                        \"dealers:ViewMap\",\n                        \"dealers:ViewUnverifiedLocations\",\n                        \"dealers:Read\",\n                        \"dealers:Update\",\n                        \"groups:Read\",\n                        \"users:Read\",\n                        \"customers:Read\",\n                        \"customers:Create\",\n                        \"customers:Update\",\n                        \"locations:Create\",\n                        \"locations:Read\",\n                        \"locations:Update\",\n                        \"locations:TransferDevice\",\n                        \"devices:Read\",\n                        \"devices:Update\",\n                        \"clientdevices:Read\",\n                        \"locations:GrabSnapshot\"\n                    ],\n                    \"foreignKeys\": {\n                        \"parentDealerId\": \"548227d3eff39f865700000b\"\n                    },\n                    \"isOwner\": false,\n                    \"name\": \"Test no permissions\"\n                },\n                {\n                    \"_id\": \"5eeb71aed5e6b50a0a66eb52\",\n                    \"actions\": [\n                        \"dealers:ViewMap\",\n                        \"dealers:ViewUnverifiedLocations\",\n                        \"dealers:Read\",\n                        \"dealers:Update\",\n                        \"groups:Read\",\n                        \"users:Read\",\n                        \"customers:Read\",\n                        \"customers:Create\",\n                        \"customers:Update\",\n                        \"locations:Create\",\n                        \"locations:Read\",\n                        \"locations:Update\",\n                        \"locations:TransferDevice\",\n                        \"devices:Read\",\n                        \"devices:Update\",\n                        \"clientdevices:Read\",\n                        \"dealers:ViewAccountSettings\",\n                        \"dealers:UpdateAccountSettings\",\n                        \"users:Create\",\n                        \"users:Delete\",\n                        \"users:Update\",\n                        \"users:EditGroups\",\n                        \"customers:EditGroups\",\n                        \"groups:Create\",\n                        \"groups:Delete\",\n                        \"groups:Update\",\n                        \"customers:Delete\",\n                        \"locations:Delete\",\n                        \"devices:Delete\"\n                    ],\n                    \"foreignKeys\": {\n                        \"parentDealerId\": \"548227d3eff39f865700000b\"\n                    },\n                    \"isOwner\": false,\n                    \"name\": \"tttt\"\n                }\n            ],\n            \"history\": {\n                \"deleted\": {\n                    \"at\": \"2020-03-06T17:34:34.116Z\",\n                    \"by\": \"548227d3eff39f865700000c\"\n                }\n            },\n            \"hubs\": [\n                \"5b69f927ea88b26dc43b440f\"\n            ],\n            \"intermittent\": false,\n            \"ipAddress\": \"146.20.12.65:47940\",\n            \"isMonitored\": true,\n            \"isOnline\": true,\n            \"isWebServiceRunning\": true,\n            \"lanAddress\": \"192.168.5.143\",\n            \"lanAddressNum\": 192168005143,\n            \"lastConnected\": \"2020-09-09T12:58:46.825Z\",\n            \"lastDisconnected\": \"2020-09-08T20:28:43.654Z\",\n            \"lastPingTime\": \"2020-08-25T23:06:01.530Z\",\n            \"lastSeenTime\": \"2020-08-25T23:06:01.530Z\",\n            \"listeners\": [\n                {\n                    \"port\": 22,\n                    \"protocol\": \"SSH\"\n                }\n            ],\n            \"location\": \"Office Rack\",\n            \"locationId\": \"5ba28899998f0864d73c2dc0\",\n            \"macAddress\": \"58:67:7F:9A:43:CA\",\n            \"manufacturer\": \"Clare Controls Inc.\",\n            \"model\": \"CLIQ.mini\",\n            \"notifications\": {\n                \"deviceConnect\": false,\n                \"deviceDisconnect\": false\n            },\n            \"notificationsDisabledDealerIds\": [],\n            \"parentId\": \"5b69f927ea88b26dc43b440f\",\n            \"persistData\": [],\n            \"platform\": \"Cliq-Mini-Rev-C\",\n            \"protocols\": {},\n            \"responseTime\": 1,\n            \"serialNum\": \"000000008310c77a\",\n            \"severityLevel\": 1,\n            \"sortByClass\": 10,\n            \"stats\": {\n                \"reconnectCounts\": {\n                    \"averageReconnectSeconds\": 106847,\n                    \"reconnectsPerHour\": 0,\n                    \"startTime\": \"2020-02-28T18:26:42.412Z\",\n                    \"totalReconnects\": 98,\n                    \"totalSecondsOffline\": 10471054\n                }\n            },\n            \"timeoutPercentage\": 100,\n            \"type\": \"CLARE CONTROLS\",\n            \"uptime\": 1711052\n        }\n    ],\n    \"message\": {\n        \"code\": 200,\n        \"description\": \"You have chosen... wisely.\",\n        \"title\": \"Success!\"\n    }\n}"
              }
            }
          }
        }
      }
    },
    "/v1/isp": {
      "get": {
        "tags": ["System_Resources"],
        "summary": "The full list of supported ISPs you can attach to a location.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/IspRead" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t\t\"items\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"Comporium, Inc.\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"limit\": 50,\n\t\t\t\"message\": {\n\t\t\t\t\"code\": 200,\n\t\t\t\t\"description\": \"You have chosen... wisely.\",\n\t\t\t\t\"title\": \"Success!\"\n\t\t\t},\n\t\t\t\"offset\": 0,\n\t\t\t\"totalCount\": 1\n\t\t}"
              }
            }
          }
        }
      }
    },
    "/v1/termsofservice": {
      "get": {
        "tags": ["System_Resources"],
        "summary": "This API will return the current terms of service for using the OvrC platform.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/TermsOfService" },
            "examples": {
              "Success-Response:": {
                "value": "{\n  \"termsOfServiceId\": 1,\n  \"html\": \"<html>OvrC Terms of Service</html>\"\n}"
              }
            }
          }
        }
      }
    },
    "/v1/timezones": {
      "get": {
        "tags": ["System_Resources"],
        "summary": "Read all timezones",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/TimezonesRead" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t \t\t\"items\": [\n\t\t\t\t{\n\t\t\t\t\t\"timezoneId\": \"5a00aa80e21950d76d0e0532\",\n\t\t\t\t\t\"name\": \"America/New_York\",\n\t\t\t\t\t\"notes\": \"Eastern Time (US & Canada)\",\n\t\t\t\t\t\"offset\": 300\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"timezoneId\": \"5a00ac90e21950d76d0e053c\",\n\t\t\t\t\t\"name\": \"America/Chicago\",\n\t\t\t\t\t\"notes\": \"Central Time (US & Canada)\",\n\t\t\t\t\t\"offset\": 360\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"timezoneId\": \"5a00add2e21950d76d0e0543\",\n\t\t\t\t\t\"name\": \"America/Denver\",\n\t\t\t\t\t\"notes\": \"Mountain Time (US & Canada)\",\n\t\t\t\t\t\"offset\": 420\n\t\t\t\t}\n\t\t\t]\n     }"
              }
            }
          }
        }
      }
    },
    "/v1/feedback": {
      "post": {
        "tags": ["System_Resources"],
        "summary": "Submit a ticket/feature request.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Submit a ticket/feature request.",
            "required": true,
            "schema": { "$ref": "#/definitions/ticketesCreateRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/companies/search": {
      "get": {
        "tags": ["Tech_Support"],
        "summary": "This Search API allows an ops user to search for a company using S-Code, D-Code, Company Name or Contact Name.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "offset from start to get items"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "limit of items (default 10)"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter on companyName, contactName, accountNum, erpCode. ex. filter=accountNum:D10231 or filter=companyName:snap,contactName:john%20s"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "sort on a field ex sort=companyName:asc will sort first company name"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/CompaniesSearch" },
            "examples": {
              "Success-Response:": {
                "value": "{\n       \"items\": [\n\t\t   {\n\t\t\t   \"accountNum\": \"D12345\",\n\t\t\t   \"companyId\": \"5a0007828b740b20b82ea9bd\",\n\t\t\t   \"companyName\": \"SnapAV\",\n\t\t\t   \"contactName\": \"John Smith\",\n\t\t\t   \"erpCode\": \"S12345\"\n\t\t   }\n\t    ],\n       \"offset\": 0,\n       \"limit\": 50\n     }"
              }
            }
          }
        }
      }
    },
    "/v1/companies/signuplink": {
      "get": {
        "tags": ["Tech_Support"],
        "summary": "This API gets an email with a unique link to complete the signup sequence which is firstly provided in CompaniesSignup endpoint. The link will then call companies/signupConfirm to complete the process same as CompaniesSignup. This endpoint is only used by those who have 'ops' account.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Email for which confirmation link is requested."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "Success-Response:": {
                "value": "https://ovrc.com/#/confirm/5fec773ad5e6b55ea2e7a367"
              }
            }
          }
        }
      }
    },
    "/v1/companies/info": {
      "get": {
        "tags": ["Tech_Support"],
        "summary": "Gets info about company by accountNumber! This endpoint is only used by those who have 'ops' account.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountNumber",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "accountNumber for which company info is being requested."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t   \"companyName\" : \"SnapOne\",\n\t\t   \"contactName\" : \"Filip Mirkovic\",\n\t\t   \"email\" : \"filip.mirkovic@snapone.com\",\n           \"devicesCount\" : 55,\n           \"customersCount\" : 5,\n           \"locationsCount\" : 10\n    }"
              }
            }
          }
        }
      }
    },
    "/v1/devices/infobymacaddress": {
      "get": {
        "tags": ["Tech_Support"],
        "summary": "Gets info about device by macAddress! This endpoint is only used by those who have 'ops' account.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "macAddress",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "macAddress for which device info is being requested."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "Success-Response:": {
                "value": "{\n       \"_id\" : ObjectId(\"5486d84afb27ac37550040c4\"),\n       \"brandName\" : \"Wirepath Surveillance\",\n       \"brandNameL\" : \"wirepath surveillance\",\n       \"class\" : \"OVRC\",\n       \"connected\" : false,\n       \"deleted\" : false,\n       \"firmware\" : \"V1.0.19.4\",\n       \"firstConnected\" : ISODate(\"2014-12-09T11:08:58.262Z\"),\n       \"lanAddress\" : \"192.168.13.114\",\n       \"lanAddressNum\" : 192168013114.0,\n       \"lastConnected\" : ISODate(\"2014-12-09T11:08:58.262Z\"),\n       \"lastDisconnected\" : ISODate(\"2014-12-09T11:16:31.494Z\"),\n       \"macAddress\" : \"00:0F:0D:26:5C:BD\",\n       \"model\" : \"WPS-550-BUL-IP-(WH/GR)\",\n       \"serialNum\" : \"0000987455\",\n       \"severityLevel\" : 2,\n       \"sortByClass\" : 10,\n       \"status\" : {\n           \"dateTime\" : ISODate(\"2014-12-09T11:15:58.583Z\"),\n           \"health\" : \"GOOD\",\n           \"streaming\" : \"Yes\"\n       },\n       \"type\" : \"CAMERA\",\n       \"notifications\" : {\n           \"deviceDisconnect\" : false,\n           \"deviceConnect\" : false\n       },\n       \"updateCandidate\" : \"1.0.20.17\",\n       \"notificationsDisabledDealerIds\" : []\n}"
              }
            }
          }
        }
      }
    },
    "/v1/devices/proappupdate": {
      "post": {
        "tags": ["Tech_Support"],
        "summary": "Initiate a pro app update for a device.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Initiate a pro app update for a device.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DevicesProAppUpdateCreateRequest"
            }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/companies/merge": {
      "post": {
        "tags": ["Tech_Support"],
        "summary": "Merges two accounts, victim account into surviving account! This endpoint is only used by those who have 'ops' account.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/devices/remove": {
      "delete": {
        "tags": ["Tech_Support"],
        "summary": "Removes (Discovered) or soft deletes (Ovrc or Lutron) device record from database! This endpoint is only used by those who have 'ops' account.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Removes (Discovered) or soft deletes (Ovrc or Lutron) device record from database! This endpoint is only used by those who have 'ops' account.",
            "required": true,
            "schema": { "$ref": "#/definitions/RemoveDevicesRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/companies/softdelete": {
      "get": {
        "tags": ["Tech_Support"],
        "summary": "Soft deletes company and user attached to that company! This endpoint is only used by those who have 'ops' account.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountNumber",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "accountNumber for which company is being deleted."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": { "Success-Response:": {} }
          }
        }
      }
    },
    "/v1/users/generateactivationlink": {
      "get": {
        "tags": ["Tech_Support"],
        "summary": "Generates activation link for requested email! This endpoint is only used by those who have 'ops' account.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Email(username) for which MFA token is being requested."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "Success-Response:": {
                "value": "https://app.ovrc.com/#/user-register/60c110983a964c34df0ab24e"
              }
            }
          }
        }
      }
    },
    "/v1/users/activationid": {
      "get": {
        "tags": ["Tech_Support"],
        "summary": "Gets ActivaionId for specific user! This endpoint is only used by those who have 'ops' account.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Email(username) for which ActivationId is being requested."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "Success-Response:": { "value": "56605f111ffbf3761c00005a" }
            }
          }
        }
      }
    },
    "/v1/users/mfagettoken": {
      "get": {
        "tags": ["Tech_Support"],
        "summary": "Gets back MFA token for requested email! This endpoint is only used by those who have 'ops' account.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Email(username) for which MFA token is being requested."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": { "Success-Response:": { "value": "928175" } }
          }
        }
      }
    },
    "/v1/urc/status": {
      "get": {
        "tags": ["URC"],
        "summary": "Instructs the URC system to return current status information.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/UrcStatusGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n     \t\"deviceId\": \"FF:FF:FF:FF:FF:FF\",\n\t\t\t\"dateTime\": \"2013-09-10T08:15:30-05:00\",\n     \t\"uptime\": \"20 Day(s) 12Hr 54Min\",\n     \t\"systemFault\": \"OK\",\n     \t\"deviceStatus\": \"ON\",\n    \t\t\"voltageValue\": \"Safe\",\n      \t\"tempValue\": 90,\n      \t\"inputs\": [\n          \t{\n             \t\"channel\": 1,\n               \t\"channelFault\": \"OK\"\n          \t}\n       \t],\n       \t\"outputs\": [\n           \t{\n               \t\"channel\": 1,\n               \t\"channelFault\": \"OK\",\n               \t\"level\": 20,\n               \t\"clipping\": \"false\"\n           \t}\n       \t]\n\t\t}"
              }
            }
          }
        }
      }
    },
    "/v2/users/notifications/download": {
      "get": {
        "tags": ["Users"],
        "summary": "Upload CSV to s3 bucket and provide link for downloading in response.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/DownloadUserNotifications" },
            "examples": {
              "Success-Response:": {
                "value": "{\n  \"url\": \"https://ovrc-csv-dev.s3.amazonaws.com/4203b805-9514-4b03-96e7-8ae288ed36a2.548227d3eff39f865700000c.csv?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT5GHIYXBRNTKRTLM%2F20210805%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20210805T155726Z&X-Amz-Expires=900&X-Amz-SignedHeaders=host&X-Amz-Signature=7e94115856c62a4ca375aab9bcbab1b70859b7c3a8e1702092329d214edb8d4f\"\n}"
              }
            }
          }
        }
      }
    },
    "/v1/users/activate": {
      "post": {
        "tags": ["Users"],
        "summary": "Activates an employee",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Activates an employee",
            "required": true,
            "schema": { "$ref": "#/definitions/UsersActivateRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      },
      "get": {
        "tags": ["Users"],
        "summary": "Public API allowing you to read your user activation details to display when accepting your invitation.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "activationId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Id provided in your activation email."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/UsersActivateRead" },
            "examples": {
              "Success-Response:": {
                "value": "{\n  \"companyName\": \"Test A/V\",\n  \"email\": \"newuser@testav.com\"\n}"
              }
            }
          }
        }
      }
    },
    "/v1/users/addusercheck": {
      "post": {
        "tags": ["Users"],
        "summary": "Validates that a username is available to invite to your company.  Ensures the username... 1.Is a valid email address. 2.Is not used in a pending dealer sign-up.  3.Is not used by another active account on OvrC who isn't shared with your dealer.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Validates that a username is available to invite to your company.  Ensures the username... 1.Is a valid email address. 2.Is not used in a pending dealer sign-up.  3.Is not used by another active account on OvrC who isn't shared with your dealer.",
            "required": true,
            "schema": { "$ref": "#/definitions/UsersAddUserCheckRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/UsersAddUserCheck" }
          }
        }
      }
    },
    "/v1/users/changepassword": {
      "post": {
        "tags": ["Users"],
        "summary": "Changes password for your user account; requires your current password to do so.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Changes password for your user account; requires your current password to do so.",
            "required": true,
            "schema": { "$ref": "#/definitions/UsersChangePasswordRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/users/dealerdetails": {
      "get": {
        "tags": ["Users"],
        "summary": "This API gives you information about the dealer account an ops user is impersonating. Should be called on every render of your UI to account for the latest state.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/UsersDealerDetails" },
            "examples": {
              "Success-Response:": {
                "value": "{\n      \"userId\": \"5c17d600a9b8831e4012dc1b\",\n      \"companyId\": \"5c17d60da9b8831e4012dc1c\",\n      \"username\": \"testaccount@mail.com\",\n      \"firstName\": \"Test\",\n      \"lastName\": \"Account\",\n      \"canAddCustomer\": true,\n      \"canDeleteCompany\": false,\n      \"canEditNewCustomerGroups\": true,\n      \"canGenerateActivationLink\": false,\n      \"canImpersonateDealer\": false,\n      \"canMergeDealers\": false,\n      \"canRemoveDevice\": false,\n      \"canTransferFromInventory\": true,\n      \"canUserDeviceTypeFirmwareTool\": false,\n      \"canViewAccountsNav\": true,\n      \"canViewMapNav\": true,\n      \"canViewUnverifiedLocationsNav\": true,\n      \"isOps\": false,\n      \"locationCount\": 10,\n      \"offlineLocationCount\": 1,\n      \"proLocationCount\": 4,\n      \"updateLocationCount\": 1,\n      \"verifiedLocationCount\": 9,\n      \"verifiedProLocationCount\": 4,\n      \"verifiedUpdateLocationCount\": 1,\n      \"verifiedSharedIn\": 0,\n      \"verifiedSharedOut\": 0,\n\t\t \"releaseTiers\": [{\"id\":\"prod\", \"description\":\"Production\"},{\"id\":\"external\", \"description\":\"External Beta\"}],\n    }"
              }
            }
          }
        }
      }
    },
    "/v1/users": {
      "delete": {
        "tags": ["Users"],
        "summary": "Deletes a user.  Removes subject user from any pertinent groups.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Deletes a user.  Removes subject user from any pertinent groups.",
            "required": true,
            "schema": { "$ref": "#/definitions/UsersDeleteRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      },
      "get": {
        "tags": ["Users"],
        "summary": "Return information user(s) information.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/UsersRead" },
            "examples": {
              "Success-Response:": {
                "value": "{\n  \"canDelete\": true,\n  \"canResendInvitation\": false,\n  \"canTransferOwnership\": true,\n  \"companyId\": \"5a57b3f2d76e004ac8723cae\",\n  \"firstName\": \"Ash\",\n  \"fullName\": \"Ash Ketchum\",\n  \"isExternal\": false,\n  \"isOwner\": true,\n  \"lastName\": \"Ketchum\",\n  \"groups\": [\"Owner\", \"Administrator\"],\n  \"status\": \"ENABLED\",\n  \"userId\": \"5a57b3f2d76e004ac8723caf\",\n  \"username\": \"ash.ketchum@kantoav.com\"\n}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Update details about a user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Update details about a user",
            "required": true,
            "schema": { "$ref": "#/definitions/UsersUpdateRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/users/banners": {
      "post": {
        "tags": ["Users"],
        "summary": "Dismisses, one at a time, user banners.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Dismisses, one at a time, user banners.",
            "required": true,
            "schema": { "$ref": "#/definitions/UsersDismissBannersRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      },
      "get": {
        "tags": ["Users"],
        "summary": "Gets the current user's global app banners.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/UsersReadBanners" },
            "examples": {
              "Success-Response:": {
                "value": "{\n   \"items\": [\n       {\n         \"bannerId\": \"5e1e46e2af7fa96afe818445\",\n         \"bannerText\": \"\",\n         \"callToActionText\": \"Learn More\",\n         \"callToActionUrl\": \"www.ovrc.com\",\n         \"hasDismiss\": false,\n         \"icon\": \"\",\n         \"titleText\": \"OvrC Service Notice\",\n         \"type\": \"WARNING\"\n       }\n   ]\n}"
              }
            }
          }
        }
      }
    },
    "/v1/users/invite": {
      "post": {
        "tags": ["Users"],
        "summary": "Invites new internal users, or existing external users, to be a part of your company.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Invites new internal users, or existing external users, to be a part of your company.",
            "required": true,
            "schema": { "$ref": "#/definitions/UsersInviteRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/UsersInvite" }
          }
        }
      }
    },
    "/v1/users/mfaconfirmsettings": {
      "post": {
        "tags": ["Users"],
        "summary": "This API determines whether the user currently has MFA enabled. If they don't, then settings are automatically updated. If MFA is enabled, a MFA Token is sent via text/email/both to verify the user's identity before updating settings.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "This API determines whether the user currently has MFA enabled. If they don't, then settings are automatically updated. If MFA is enabled, a MFA Token is sent via text/email/both to verify the user's identity before updating settings.",
            "required": true,
            "schema": { "$ref": "#/definitions/UsersMFAConfirmSettingsRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/users/mfaupdatesettings": {
      "post": {
        "tags": ["Users"],
        "summary": "This API determines whether the user currently has MFA enabled. If they don't, then settings are automatically updated. If MFA is enabled, a MFA Token is sent via text/email/both to verify the user's identity before updating settings.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "This API determines whether the user currently has MFA enabled. If they don't, then settings are automatically updated. If MFA is enabled, a MFA Token is sent via text/email/both to verify the user's identity before updating settings.",
            "required": true,
            "schema": { "$ref": "#/definitions/UsersMFAUpdateSettingsRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/users/mydetails": {
      "get": {
        "tags": ["Users"],
        "summary": "This API gives you information about the account you've logged in as. Should be called on every render of your UI to account for the latest state.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/UsersMyDetails" },
            "examples": {
              "Success-Response:": {
                "value": "{\n      \"userId\": \"5c17d600a9b8831e4012dc1b\",\n      \"companyId\": \"5c17d60da9b8831e4012dc1c\",\n      \"username\": \"testaccount@mail.com\",\n      \"firstName\": \"Test\",\n      \"lastName\": \"Account\",\n      \"canAddCustomer\": true,\n      \"canDeleteCompany\": false,\n      \"canEditNewCustomerGroups\": true,\n      \"canGenerateActivationLink\": false,\n      \"canImpersonateDealer\": false,\n      \"canMergeDealers\": false,\n      \"canRemoveDevice\": false,\n      \"canTransferFromInventory\": true,\n      \"canUserDeviceTypeFirmwareTool\": false,\n      \"canViewAccountsNav\": true,\n      \"canViewMapNav\": true,\n      \"canViewUnverifiedLocationsNav\": true,\n      \"isOps\": false,\n      \"locationCount\": 10,\n      \"offlineLocationCount\": 1,\n      \"proLocationCount\": 4,\n      \"updateLocationCount\": 1,\n      \"verifiedLocationCount\": 9,\n      \"verifiedProLocationCount\": 4,\n      \"verifiedUpdateLocationCount\": 1,\n      \"verifiedSharedIn\": 0,\n      \"verifiedSharedOut\": 0,\n\t\t \"releaseTiers\": [{\"id\":\"prod\", \"description\":\"Production\"},{\"id\":\"external\", \"description\":\"External Beta\"}],\n    }"
              }
            }
          }
        }
      }
    },
    "/v2/users/notifications/ack": {
      "put": {
        "tags": ["Users"],
        "summary": "Acknowledge notifications.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Acknowledge notifications.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UsersNotificationsAcknowledgeRequest"
            }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v2/users/notifications/count": {
      "get": {
        "tags": ["Users"],
        "summary": "This API returns the unacknowledged notifications count for the calling user.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/UsersNotificationsCount" },
            "examples": {
              "Success-Response:": {
                "value": "{\n  \"unackedNotificationCount\": 5\n}"
              }
            }
          }
        }
      }
    },
    "/v1/users/notifications/count": {
      "get": {
        "tags": ["Users"],
        "summary": "This API returns the unread notifications count for the calling user.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/UsersNotificationsCount" },
            "examples": {
              "Success-Response:": {
                "value": "{\n  \"unreadNotificationsCount\": 1\n}"
              }
            }
          }
        }
      }
    },
    "/v2/users/notifications": {
      "post": {
        "tags": ["Users"],
        "summary": "For those times at work when you need to look busy.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "For those times at work when you need to look busy.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UsersNotificationsCreateRequest"
            }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      },
      "get": {
        "tags": ["Users"],
        "summary": "Read details about notifications that have been sent to you. Number of raw events that can be read is limited to 20 000 per user.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The sort can equal &quot;asc&quot; or &quot;desc&quot; i.e. time:asc. (default time:desc)"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filtering by part of the deviceName, customerName, locationName, jobCode or referenceId. Example : search=co -&gt; it will return notification with 'co' chars in a name."
          },
          {
            "name": "notifications_per_reference",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "To use feature flagging just provide -&gt; notifications_per_reference: true"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/UsersNotificationsRead" }
          }
        }
      }
    },
    "/v1/users/notifications": {
      "get": {
        "tags": ["Users"],
        "summary": "Read details about notifications that have been sent to you.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/UsersNotificationsRead" },
            "examples": {
              "Success-Response:": {
                "value": "{\n    \"items\": [\n        {\n            \"customerId\": \"5b1059f2998f081c9f6c56dc\",\n            \"customerName\": \"Kims AV\",\n            \"dateSent\": \"2020-02-03T15:04:22.216Z\",\n            \"eventCount\": 1,\n            \"events\": [\n                {\n                    \"event\": \"disconnected\",\n                    \"deviceName\": \"OvrCMacBookPro-Burkhard.local\",\n                    \"eventDate\": \"2020-02-03T14:54:09.165Z\"\n                }\n            ],\n            \"isUnread\": false,\n            \"locationId\": \"5b1059f3998f081c9f6c56dd\",\n            \"locationName\": \"NY Office\",\n            \"message\": \"Kims AV | NY Office: 1 device disconnected.\",\n            \"notificationId\": \"5e383676be751307d94c0996\",\n            \"notificationType\": \"batchNotification\",\n            \"subject\": \"Kims AV | NY Office: 1 device disconnected.\",\n\t\t    \"deviceId\": \"\",\n\t\t    \"model\": \"\"\n        },\n        {\n            \"customerId\": \"59975e5803b12b33643df75e\",\n            \"customerName\": \"CEDIA 2017\",\n            \"dateSent\": \"2019-10-31T14:10:08.751Z\",\n            \"eventCount\": 0,\n            \"events\": null,\n            \"isUnread\": false,\n            \"locationId\": \"59975e5803b12b33643df75d\",\n            \"locationName\": \"SnapAV\",\n            \"message\": \"Firmware Update failed for mms-3e-pilot.local.\",\n            \"notificationId\": \"5dbaeb4097112d07c05da827\",\n            \"notificationType\": \"firmwareUpdate.FAILED\",\n            \"subject\": \"Firmware Update failed for mms-3e-pilot.local.\",\n\t\t    \"deviceId\": \"57f50db10973a909c96be828\",\n\t\t    \"model\": \"AN-210-SW-48-POE\"\n        }\n    ],\n    \"limit\": 0,\n    \"message\": {\n        \"code\": 200,\n        \"description\": \"You have chosen... wisely.\",\n        \"title\": \"Success!\"\n    },\n    \"offset\": 0,\n    \"totalCount\": 45,\n    \"unreadCount\": 2\n}"
              }
            }
          }
        }
      }
    },
    "/v2/users/notifications/unack": {
      "put": {
        "tags": ["Users"],
        "summary": "UnAcknowledge notifications.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "UnAcknowledge notifications.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UsersNotificationsUnAcknowledgeRequest"
            }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/users/pushtokens": {
      "post": {
        "tags": ["Users"],
        "summary": "Upsert a pushtoken for a user's device.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Upsert a pushtoken for a user's device.",
            "required": true,
            "schema": { "$ref": "#/definitions/UsersPushTokensRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/users/preferences": {
      "get": {
        "tags": ["Users"],
        "summary": "Return information on user(s) preferences.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/UsersReadPreferences" },
            "examples": {
              "Success-Response:": {
                "value": "{\n       \"mfaEnabled\": false,\n\t\t  \"mfaMethod\":  \"BOTH\",\n\t\t  \"notificationsEnabled\": true\n\t\t  \"emailEnabled\": true,\n\t\t  \"inAppEnabled\": true,\n\t\t  \"deviceOnline\": true,\n\t\t  \"deviceOffline\": true,\n\t\t  \"deviceDegraded\": true,\n\t\t  \"phoneNumber\": \"+13042829275\",\n\t\t  \"accountLinked\": [\n        {\n           \"accountLinkedTo\": \"609e950a1bc285492b333333\",\n           \"integrationType\": \"BakPak\",\n           \"password\": \"f5068677a4d6d1f27ed555ad70132a827c10a526628aeb1324b1a8dae3d3be3a66cdcfcb\",\n           \"timestamp\": \"2021-05-14T17:18:27.626+02:00\",\n           \"username\": \"zaksoch1@pakedge.com\"\n       }\n\t\t]\n       \"accountsLinkedInvision\": [\n\t\t\t{\n           \"accountLinkedTo\": \"609e950a1bc285492b1d0b54\",\n           \"integrationType\": \"Invision\",\n           \"password\": \"51c83e0b0637a3c8283050eda007eb6295fc94eef1400de353cf68e0c6d4e4a6000f7257\",\n           \"timestamp\": \"2021-05-14T17:19:38.093+02:00\",\n           \"username\": \"risbell@ihiji.com\"\n       }\n   ],"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Users"],
        "summary": "Update information on user(s) preferences.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Update information on user(s) preferences.",
            "required": true,
            "schema": { "$ref": "#/definitions/UsersUpdatePreferencesRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/users/resendinvite": {
      "post": {
        "tags": ["Users"],
        "summary": "Resends invitation from /users/invite.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Resends invitation from /users/invite.",
            "required": true,
            "schema": { "$ref": "#/definitions/UsersResendInviteRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/users/groups": {
      "post": {
        "tags": ["Users"],
        "summary": "Sets groups for one, or more, users.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Sets groups for one, or more, users.",
            "required": true,
            "schema": { "$ref": "#/definitions/UsersSetGroupsRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/users/stopimpersonation": {
      "post": {
        "tags": ["Users"],
        "summary": "This API endpoint stops dealer impersonation",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/users/transferownership": {
      "post": {
        "tags": ["Users"],
        "summary": "Allows the Owner, and only the Owner, to transfer ownership to a new user. If a transferOwnerToGroupId is provided, will transfer the Owner to the newly specified group.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Allows the Owner, and only the Owner, to transfer ownership to a new user. If a transferOwnerToGroupId is provided, will transfer the Owner to the newly specified group.",
            "required": true,
            "schema": { "$ref": "#/definitions/UsersTransferOwnershipRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/users/validatepassword": {
      "post": {
        "tags": ["Users"],
        "summary": "This API confirms that the correct password has been entered before proceeding to update MFA settings.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "This API confirms that the correct password has been entered before proceeding to update MFA settings.",
            "required": true,
            "schema": { "$ref": "#/definitions/UsersValidatePasswordRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/wap/networkconfig": {
      "get": {
        "tags": ["WAP_Commands"],
        "summary": "Instructs the WAP to return its network configuration.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          },
          {
            "name": "networkIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "The index of the network for which user is requesting configuration."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WAPNetworkConfigGet" }
          }
        }
      },
      "put": {
        "tags": ["WAP_Commands"],
        "summary": "Instructs the WAP to set its network configuration.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instructs the WAP to set its network configuration.",
            "required": true,
            "schema": { "$ref": "#/definitions/WAPNetworkConfigSetRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WAPNetworkConfigSet" }
          }
        }
      }
    },
    "/v1/wap/radioconfig": {
      "get": {
        "tags": ["WAP_Commands"],
        "summary": "Instructs the WAP to return its radio configuration.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The WAP's Device ID."
          },
          {
            "name": "interface",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Interface of desired radio config."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WAPRadioConfigGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t    \"channel\": 0,\n\t\t    \"deviceId\": \"5cfe7b34b5c9d5314dac6f02\",\n\t\t    \"enabled\": true,\n\t\t    \"interface\": \"2.4GHz\",\n\t\t    \"opMode\": \"Access Point\",\n\t\t    \"transmitPower\": 29,\n\t\t    \"wirelessMode\": \"802.11BGN\"\n\t\t}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["WAP_Commands"],
        "summary": "Instructs the WAP to set its radio configuration.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instructs the WAP to set its radio configuration.",
            "required": true,
            "schema": { "$ref": "#/definitions/WAPRadioConfigSetRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WAPRadioConfigSet" }
          }
        }
      }
    },
    "/v1/wap/status": {
      "get": {
        "tags": ["WAP_Commands"],
        "summary": "Instructs the access point to return the overall system status.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The WAP's Device ID"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WAPStatusGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t\t\"deviceId\": \"5cdad7a3b30fc2082deb94af\",\n\t\t\t\"system\": [\n\t\t\t\t{\n\t\t\t\t\t\"cpu\": 89.6,\n\t\t\t\t\t\"memFree\": 0,\n\t\t\t\t\t\"memUsed\": 0\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"lan\": [\n\t\t\t\t{\n\t\t\t\t\t\"rx\": 0,\n\t\t\t\t\t\"tx\": 0\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"radios\": [\n\t\t\t\t{\n\t\t\t\t\t\"interface\": \"2.4GHZ\",\n\t\t\t\t\t\"rx\": 0,\n\t\t\t\t\t\"tx\": 0,\n\t\t\t\t\t\"networks\": 1,\n\t\t\t\t\t\"clients\": 2,\n\t\t\t\t\t\"clientList\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"cmac\": \"AB:CD:EF:12:34:56\",\n\t\t\t\t\t\t\t\"rx\": 0,\n\t\t\t\t\t\t\t\"tx\": 0\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"opMode\": \"AP\",\n\t\t\t\t\t\"enabled\": true\n\t\t\t\t}\n\t\t\t]\n\t\t}"
              }
            }
          }
        }
      }
    },
    "/v1/wap/systemconfig": {
      "get": {
        "tags": ["WAP_Commands"],
        "summary": "Instructs the WAP to return its system configuration.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The WAP's Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WAPSystemConfigGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n  \"deviceId\": \"54cf37570642205944000899\",\n  \"name\": \"WAP1\",\n  \"steeringEnabled\": false,\n  \"fastRoamingEnabled\": false\n}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["WAP_Commands"],
        "summary": "Instructs the WAP to set its system configuration.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instructs the WAP to set its system configuration.",
            "required": true,
            "schema": { "$ref": "#/definitions/WAPSystemConfigSetRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WAPSystemConfigSet" }
          }
        }
      }
    },
    "/v1/wap/system/ax": {
      "put": {
        "tags": ["WAP_Commands"],
        "summary": "Instructs the WAP to set its system configuration.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instructs the WAP to set its system configuration.",
            "required": true,
            "schema": { "$ref": "#/definitions/WAPSystemSetRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WAPSystemSet" }
          }
        }
      }
    },
    "/v1/wap/apply": {
      "post": {
        "tags": ["WAP_Commands"],
        "summary": "Instructs the device to apply pending updates.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instructs the device to apply pending updates.",
            "required": true,
            "schema": { "$ref": "#/definitions/WapApplyRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/sys/reset-factory": {
      "post": {
        "tags": ["WAP_Commands"],
        "summary": "Request device factory reset default.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Request device factory reset default.",
            "required": true,
            "schema": { "$ref": "#/definitions/WapFactoryResetRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/wap/guestnetworkconfig": {
      "get": {
        "tags": ["WAP_Commands"],
        "summary": "Instructs the device to return its guest network settings.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          },
          {
            "name": "interface",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The interface on which the network is broadcasting."
          },
          {
            "name": "opMode",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The WAP operation mode"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WapGuestNetworkConfigGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n       \"deviceId\": \"54cf37570642205944000899\",\n       \"interface\": \"2.4GHz\",\n       \"ssid\": \"SnapAVWiFi\",\n       \"opMode\": \"AP\",\n       \"guestEnabled\": true,\n       \"broadcastEnabled\": true,\n       \"security\": \"WPA2-PSK\",\n       \"password\": \"password123\",\n       \"separationEnabled\": true,\n       \"vlanIsolation\": true,\n       \"vlanTagged\": true,\n       \"vlanID\": 2,\n\t\t  \"isVlanSupported\": true\n     }"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["WAP_Commands"],
        "summary": "Instructs the device to set its guest network settings.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instructs the device to set its guest network settings.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WapGuestNetworkConfigSetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WapGuestNetworkConfigSet" }
          }
        }
      }
    },
    "/v1/wap/network": {
      "post": {
        "tags": ["WAP_Commands"],
        "summary": "Instructs the device to add a network.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instructs the device to add a network.",
            "required": true,
            "schema": { "$ref": "#/definitions/WapNetworkAddRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WapNetworkAdd" }
          }
        }
      },
      "delete": {
        "tags": ["WAP_Commands"],
        "summary": "Instructs the device to delete a network.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instructs the device to delete a network.",
            "required": true,
            "schema": { "$ref": "#/definitions/WapNetworkDeleteRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WapNetworkDelete" }
          }
        }
      }
    },
    "/v1/wap/networkstatus": {
      "get": {
        "tags": ["WAP_Commands"],
        "summary": "Instructs the device to return Network Status",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Device ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WapNetworkStatusGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n    \"deviceId\": \"57a9f40e83a81d69194c3baa\",\n    \"guestNetworks\": [\n        {\n            \"enabled\": false,\n            \"interface\": \"2.4GHz\",\n            \"mac\": \"00:00:00:00:00:00\",\n            \"ssid\": \"Araknis-2.4_GuestNetwork\"\n        }\n    ],\n    \"networks\": [\n        {\n            \"clients\": 0,\n            \"enabled\": true,\n            \"interface\": \"2.4GHz\",\n            \"mac\": \"D4:6A:91:32:92:F9\",\n            \"networkIndex\": 0,\n            \"rx\": 43979,\n            \"ssid\": \"joeyTestAP100\",\n            \"canDelete\": false,\n            \"tx\": 97286\n        }\n    ]\n}"
              }
            }
          }
        }
      }
    },
    "/v1/wap/revert": {
      "post": {
        "tags": ["WAP_Commands"],
        "summary": "Instructs the device to revert any pending updates.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instructs the device to revert any pending updates.",
            "required": true,
            "schema": { "$ref": "#/definitions/WapRevertRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/wattbox/alloutletsconfig": {
      "get": {
        "tags": ["Wattbox_Commands"],
        "summary": "Instruct the WattBox to return the configuration of its outlets.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Wattbox's Device ID"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WattboxAllOutletsConfigGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t\t\"deviceId\": \"5abd3761d81aa96d912b5307\",\n\t\t\t\"outlets\": [{\n\t\t\t\t\"clockwiseRotation\": 0,\n\t\t\t\t\"dualBay\": false,\n\t\t\t\t\"methodOptions\": [\"ENABLED\", \"DISABLED\", \"RESET_ONLY\"],\n\t\t\t\t\"name\": \"Troy\",\n\t\t\t\t\"number\": 1,\n\t\t\t\t\"outletMethod\": \"DISABLED\",\n\t\t\t\t\"outletTrigger\": true,\n\t\t\t\t\"powerOnDelay\": 3\n\t\t\t}, {\n\t\t\t\t\"clockwiseRotation\": 0,\n\t\t\t\t\"dualBay\": false,\n\t\t\t\t\"methodOptions\": [\"ENABLED\", \"DISABLED\", \"RESET_ONLY\"],\n\t\t\t\t\"name\": \"Chromecast(Source for Atlona U\",\n\t\t\t\t\"number\": 2,\n\t\t\t\t\"outletMethod\": \"ENABLED\",\n\t\t\t\t\"outletTrigger\": false,\n\t\t\t\t\"powerOnDelay\": 1\n\t\t\t}, {\n\t\t\t\t\"clockwiseRotation\": 0,\n\t\t\t\t\"dualBay\": false,\n\t\t\t\t\"methodOptions\": [\"ENABLED\", \"DISABLED\", \"RESET_ONLY\"],\n\t\t\t\t\"name\": \"510 4CH\",\n\t\t\t\t\"number\": 3,\n\t\t\t\t\"outletMethod\": \"ENABLED\",\n\t\t\t\t\"outletTrigger\": false,\n\t\t\t\t\"powerOnDelay\": 2\n\t\t\t}, {\n\t\t\t\t\"clockwiseRotation\": 0,\n\t\t\t\t\"dualBay\": false,\n\t\t\t\t\"methodOptions\": [\"ENABLED\", \"DISABLED\", \"RESET_ONLY\"],\n\t\t\t\t\"name\": \"Sprinkler system?\",\n\t\t\t\t\"number\": 4,\n\t\t\t\t\"outletMethod\": \"ENABLED\",\n\t\t\t\t\"outletTrigger\": false,\n\t\t\t\t\"powerOnDelay\": 12\n\t\t\t}, {\n\t\t\t\t\"clockwiseRotation\": 0,\n\t\t\t\t\"dualBay\": false,\n\t\t\t\t\"methodOptions\": [\"ENABLED\", \"DISABLED\", \"RESET_ONLY\"],\n\t\t\t\t\"name\": \"Autonomic M120e AMP\",\n\t\t\t\t\"number\": 5,\n\t\t\t\t\"outletMethod\": \"ENABLED\",\n\t\t\t\t\"outletTrigger\": false,\n\t\t\t\t\"powerOnDelay\": 3\n\t\t\t}, {\n\t\t\t\t\"clockwiseRotation\": 0,\n\t\t\t\t\"dualBay\": false,\n\t\t\t\t\"methodOptions\": [\"ENABLED\", \"DISABLED\", \"RESET_ONLY\"],\n\t\t\t\t\"name\": \"Lutron Repeater\",\n\t\t\t\t\"number\": 6,\n\t\t\t\t\"outletMethod\": \"ENABLED\",\n\t\t\t\t\"outletTrigger\": false,\n\t\t\t\t\"powerOnDelay\": 3\n\t\t\t}, {\n\t\t\t\t\"clockwiseRotation\": 270,\n\t\t\t\t\"dualBay\": false,\n\t\t\t\t\"methodOptions\": [\"ENABLED\", \"DISABLED\", \"RESET_ONLY\"],\n\t\t\t\t\"name\": \"Hub 100\",\n\t\t\t\t\"number\": 7,\n\t\t\t\t\"outletMethod\": \"ENABLED\",\n\t\t\t\t\"outletTrigger\": false,\n\t\t\t\t\"powerOnDelay\": 4\n\t\t\t}, {\n\t\t\t\t\"clockwiseRotation\": 270,\n\t\t\t\t\"dualBay\": false,\n\t\t\t\t\"methodOptions\": [\"ENABLED\", \"DISABLED\", \"RESET_ONLY\"],\n\t\t\t\t\"name\": \"501 NVR\",\n\t\t\t\t\"number\": 8,\n\t\t\t\t\"outletMethod\": \"ENABLED\",\n\t\t\t\t\"outletTrigger\": false,\n\t\t\t\t\"powerOnDelay\": 4\n\t\t\t}, {\n\t\t\t\t\"clockwiseRotation\": 270,\n\t\t\t\t\"dualBay\": false,\n\t\t\t\t\"methodOptions\": [\"ENABLED\", \"DISABLED\", \"RESET_ONLY\"],\n\t\t\t\t\"name\": \"ROKU\",\n\t\t\t\t\"number\": 9,\n\t\t\t\t\"outletMethod\": \"ENABLED\",\n\t\t\t\t\"outletTrigger\": false,\n\t\t\t\t\"powerOnDelay\": 5\n\t\t\t}, {\n\t\t\t\t\"clockwiseRotation\": 270,\n\t\t\t\t\"dualBay\": false,\n\t\t\t\t\"methodOptions\": [\"ENABLED\", \"DISABLED\", \"RESET_ONLY\"],\n\t\t\t\t\"name\": \"SONOS Connect\",\n\t\t\t\t\"number\": 10,\n\t\t\t\t\"outletMethod\": \"ENABLED\",\n\t\t\t\t\"outletTrigger\": false,\n\t\t\t\t\"powerOnDelay\": 5\n\t\t\t}, {\n\t\t\t\t\"clockwiseRotation\": 270,\n\t\t\t\t\"dualBay\": false,\n\t\t\t\t\"methodOptions\": [\"ENABLED\", \"DISABLED\", \"RESET_ONLY\"],\n\t\t\t\t\"name\": \"Apple TV\",\n\t\t\t\t\"number\": 11,\n\t\t\t\t\"outletMethod\": \"ENABLED\",\n\t\t\t\t\"outletTrigger\": false,\n\t\t\t\t\"powerOnDelay\": 6\n\t\t\t}, {\n\t\t\t\t\"clockwiseRotation\": 270,\n\t\t\t\t\"dualBay\": false,\n\t\t\t\t\"methodOptions\": [\"ENABLED\", \"DISABLED\", \"RESET_ONLY\"],\n\t\t\t\t\"name\": \"Autonomic MMS-1E\",\n\t\t\t\t\"number\": 12,\n\t\t\t\t\"outletMethod\": \"ENABLED\",\n\t\t\t\t\"outletTrigger\": false,\n\t\t\t\t\"powerOnDelay\": 6\n\t\t\t}, {\n\t\t\t\t\"clockwiseRotation\": 0,\n\t\t\t\t\"dualBay\": false,\n\t\t\t\t\"methodOptions\": [\"ENABLED\", \"DISABLED\", \"RESET_ONLY\"],\n\t\t\t\t\"name\": \"300 Router(Master router for t\",\n\t\t\t\t\"number\": 13,\n\t\t\t\t\"outletMethod\": \"RESET_ONLY\",\n\t\t\t\t\"outletTrigger\": false,\n\t\t\t\t\"powerOnDelay\": 7\n\t\t\t}, {\n\t\t\t\t\"clockwiseRotation\": 0,\n\t\t\t\t\"dualBay\": false,\n\t\t\t\t\"methodOptions\": [\"ENABLED\", \"DISABLED\", \"RESET_ONLY\"],\n\t\t\t\t\"name\": \"Hub 300\",\n\t\t\t\t\"number\": 14,\n\t\t\t\t\"outletMethod\": \"ENABLED\",\n\t\t\t\t\"outletTrigger\": false,\n\t\t\t\t\"powerOnDelay\": 7\n\t\t\t}, {\n\t\t\t\t\"clockwiseRotation\": 0,\n\t\t\t\t\"dualBay\": false,\n\t\t\t\t\"methodOptions\": [\"ENABLED\", \"DISABLED\", \"RESET_ONLY\"],\n\t\t\t\t\"name\": \"310 Router\",\n\t\t\t\t\"number\": 15,\n\t\t\t\t\"outletMethod\": \"RESET_ONLY\",\n\t\t\t\t\"outletTrigger\": false,\n\t\t\t\t\"powerOnDelay\": 8\n\t\t\t}, {\n\t\t\t\t\"clockwiseRotation\": 0,\n\t\t\t\t\"dualBay\": false,\n\t\t\t\t\"methodOptions\": [\"ENABLED\", \"DISABLED\", \"RESET_ONLY\"],\n\t\t\t\t\"name\": \"URC MRX 20\",\n\t\t\t\t\"number\": 16,\n\t\t\t\t\"outletMethod\": \"ENABLED\",\n\t\t\t\t\"outletTrigger\": false,\n\t\t\t\t\"powerOnDelay\": 8\n\t\t\t}, {\n\t\t\t\t\"clockwiseRotation\": 0,\n\t\t\t\t\"dualBay\": false,\n\t\t\t\t\"methodOptions\": [\"ENABLED\", \"DISABLED\", \"RESET_ONLY\"],\n\t\t\t\t\"name\": \"EA1 Control4\",\n\t\t\t\t\"number\": 17,\n\t\t\t\t\"outletMethod\": \"ENABLED\",\n\t\t\t\t\"outletTrigger\": false,\n\t\t\t\t\"powerOnDelay\": 9\n\t\t\t}, {\n\t\t\t\t\"clockwiseRotation\": 0,\n\t\t\t\t\"dualBay\": false,\n\t\t\t\t\"methodOptions\": [\"ENABLED\", \"DISABLED\", \"RESET_ONLY\"],\n\t\t\t\t\"name\": \"310 24 POE\",\n\t\t\t\t\"number\": 18,\n\t\t\t\t\"outletMethod\": \"ENABLED\",\n\t\t\t\t\"outletTrigger\": false,\n\t\t\t\t\"powerOnDelay\": 9\n\t\t\t}]\n\t\t}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Wattbox_Commands"],
        "summary": "Instruct the WattBox to set the configuration of its outlets.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instruct the WattBox to set the configuration of its outlets.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WattboxAllOutletsConfigSetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WattboxAllOutletsConfigSet" }
          }
        }
      }
    },
    "/v1/wattbox/buttonactionsconfig": {
      "get": {
        "tags": ["Wattbox_Commands"],
        "summary": "Instructs the WattBox as to how the action buttons should behave.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Wattbox's Device ID"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WattboxButtonActionsConfig" }
          }
        }
      },
      "put": {
        "tags": ["Wattbox_Commands"],
        "summary": "Instructs the WattBox as to how the action buttons should behave.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instructs the WattBox as to how the action buttons should behave.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WattboxButtonActionsConfigRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WattboxButtonActionsConfig" }
          }
        }
      }
    },
    "/v1/wattbox/connectionstatus": {
      "get": {
        "tags": ["Wattbox_Commands"],
        "summary": "Instruct the WattBox to return the results of its Server/Web/IP Address pinging.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Wattbox's Device ID"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WattboxConnectionStatusGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n  \"deviceId\":\"54cf37570642205944000899\",\n  \"connectionStatus\": [\n    {\n      \"name\": \"<host alias>\",\n      \"host\": \"<website / IP Address>\",\n      \"ipAddress\": <IP Address>,\n      \"responseTime\": \"5000\",\n      \"timeout\": 5.2\n    }\n  ]\n}"
              }
            }
          }
        }
      }
    },
    "/v1/wattbox/autoreboot/disable": {
      "post": {
        "tags": ["Wattbox_Commands"],
        "summary": "Instruct the WattBox to disable its auto-reboot option.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instruct the WattBox to disable its auto-reboot option.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WattboxDisableAutoRebootRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WattboxDisableAutoReboot" }
          }
        }
      }
    },
    "/v1/wattbox/autoreboot/enable": {
      "post": {
        "tags": ["Wattbox_Commands"],
        "summary": "Instruct the WattBox to enable its auto-reboot option.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instruct the WattBox to enable its auto-reboot option.",
            "required": true,
            "schema": { "$ref": "#/definitions/WattboxEnableAutoRebootRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WattboxEnableAutoReboot" }
          }
        }
      }
    },
    "/v1/wattbox/executebutton": {
      "post": {
        "tags": ["Wattbox_Commands"],
        "summary": "Instruct the WattBox to execute the configured action for a given button.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instruct the WattBox to execute the configured action for a given button.",
            "required": true,
            "schema": { "$ref": "#/definitions/WattboxExecuteButtonRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WattboxExecuteButton" }
          }
        }
      }
    },
    "/v1/wattbox/pinghosts": {
      "post": {
        "tags": ["Wattbox_Commands"],
        "summary": "Instruct the WattBox to ping one or more hosts and return their responses.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instruct the WattBox to ping one or more hosts and return their responses.",
            "required": true,
            "schema": { "$ref": "#/definitions/WattboxPingHostsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WattboxPingHosts" }
          }
        }
      }
    },
    "/v1/wattbox/resetalloutlets": {
      "post": {
        "tags": ["Wattbox_Commands"],
        "summary": "Instruct the WattBox to reset all outlets on the WattBox.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instruct the WattBox to reset all outlets on the WattBox.",
            "required": true,
            "schema": { "$ref": "#/definitions/WattboxResetAllOutletsRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WattboxResetAllOutlets" }
          }
        }
      }
    },
    "/v1/wattbox/outlet/reset": {
      "post": {
        "tags": ["Wattbox_Commands"],
        "summary": "Instruct the WattBox to reset a single outlet on the WattBox.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instruct the WattBox to reset a single outlet on the WattBox.",
            "required": true,
            "schema": { "$ref": "#/definitions/WattboxResetOutletRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WattboxResetOutlet" }
          }
        }
      }
    },
    "/v1/wattbox/safevoltage": {
      "put": {
        "tags": ["Wattbox_Commands"],
        "summary": "Instruct the WattBox with safe voltage settings.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instruct the WattBox with safe voltage settings.",
            "required": true,
            "schema": { "$ref": "#/definitions/WattboxSafeVoltageRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/wattbox/schedules": {
      "get": {
        "tags": ["Wattbox_Commands"],
        "summary": "Instruct the WattBox to return its schedules.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Wattbox's Device ID"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WattboxSchedulesGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n  \"deviceId\":\"54cf37570642205944000899\",\n  \"schedules\": [\n    {\n      \"action\": \"TURN_ON\",\n      \"targets\": [1, 2, 3],\n      \"days\": [1, 2, 3, 4, 5, 6, 7],\n      \"time\": \"05:50\",\n      \"recurring\": true,\n      \"name\": \"<schedule name>\",\n      \"enabled\": true\n    }\n  ]\n}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Wattbox_Commands"],
        "summary": "Instruct the WattBox to set its schedules.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instruct the WattBox to set its schedules.",
            "required": true,
            "schema": { "$ref": "#/definitions/WattboxSchedulesSetRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WattboxSchedulesSet" }
          }
        }
      }
    },
    "/v1/wattbox/status": {
      "get": {
        "tags": ["Wattbox_Commands"],
        "summary": "Returns the latest status for a given Wattbox.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Wattbox's Device ID."
          },
          {
            "name": "safeVoltageControl",
            "in": "query",
            "required": false,
            "type": "bool",
            "description": "Status of Safe Voltage switch on device."
          },
          {
            "name": "safeVoltageValue",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "Current safe voltage setting value."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WattboxStatusRead" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t\t\"autoReboot\": false,\n\t\t\t\"dateTime\": \"2019-04-30T14:11:32Z\",\n\t\t\t\"deviceId\": \"5cb1ffcc04fb477e04b9606f\",\n\t\t\t\"lastAutoReboot\": \"\",\n\t\t\t\"ledStatus\": [\n\t\t\t\t\"GREEN\",\n\t\t\t\t\"GREEN\",\n\t\t\t\t\"OFF\"\n\t\t\t],\n\t\t\t\"message\": {\n\t\t\t\t\"code\": 200,\n\t\t\t\t\"description\": \"You have chosen... wisely.\",\n\t\t\t\t\"title\": \"Success!\"\n\t\t\t},\n\t\t\t\"outletMethod\": [\n\t\t\t\t\"NORMAL\",\n\t\t\t\t\"NORMAL\",\n\t\t\t\t\"NORMAL\",\n\t\t\t\t\"NORMAL\"\n\t\t\t],\n\t\t\t\"outletStatus\": [\n\t\t\t\t\"ON\",\n\t\t\t\t\"ON\",\n\t\t\t\t\"ON\",\n\t\t\t\t\"ON\"\n\t\t\t],\n\t\t\t\"uptime\": 1465669\n\t\t}"
              }
            }
          }
        }
      }
    },
    "/v1/wattbox/timeoutconfig": {
      "get": {
        "tags": ["Wattbox_Commands"],
        "summary": "Instructs the WattBox to return its timeout settings configuration.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Wattbox's Device ID"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WattboxTimeoutConfigRead" },
            "examples": {
              "Success-Response:": {
                "value": "{\n  \"deviceId\": \"52f00abe1c48eaa1770186ee\",\n  \"timeoutBeforeReset\": 15,\n  \"continuousTimeouts\": 4,\n  \"pingDelay\": 15,\n  \"rebootAttempts\": 3\n}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Wattbox_Commands"],
        "summary": "Instructs the WattBox to update its timeout settings configuration.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instructs the WattBox to update its timeout settings configuration.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WattboxTimeoutConfigUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WattboxTimeoutConfigUpdate" }
          }
        }
      }
    },
    "/v1/wattbox/outlet/off": {
      "post": {
        "tags": ["Wattbox_Commands"],
        "summary": "Instruct the WattBox to turn off the outlet with the given number.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instruct the WattBox to turn off the outlet with the given number.",
            "required": true,
            "schema": { "$ref": "#/definitions/WattboxTurnOutletOffRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WattboxTurnOutletOff" }
          }
        }
      }
    },
    "/v1/wattbox/outlet/on": {
      "post": {
        "tags": ["Wattbox_Commands"],
        "summary": "Instruct the WattBox to turn on the outlet with the given number.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instruct the WattBox to turn on the outlet with the given number.",
            "required": true,
            "schema": { "$ref": "#/definitions/WattboxTurnOutletOnRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WattboxTurnOutletOn" }
          }
        }
      }
    },
    "/v1/wattbox/upsalarmsettings": {
      "get": {
        "tags": ["Wattbox_Commands"],
        "summary": "Instruct the WattBox to return the settings for the UPS alarm.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Wattbox's Device ID"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WattboxUPSAlarmSettingsGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n  \"deviceId\":\"54cf37570642205944000899\"\n  \"enabled\": true,\n  \"muted\": false\n}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Wattbox_Commands"],
        "summary": "Instruct the WattBox to set the settings for the UPS alarm.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instruct the WattBox to set the settings for the UPS alarm.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WattboxUPSAlarmSettingsSetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WattboxUPSAlarmSettingsSet" }
          }
        }
      }
    },
    "/v1/wattbox/upsconfig": {
      "get": {
        "tags": ["Wattbox_Commands"],
        "summary": "Instruct the WattBox to return its UPS configuration.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Wattbox's Device ID"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WattboxUPSConfigGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n  \"deviceId\":\"54cf37570642205944000899\",\n  \"batteryHealthTest\": true,\n  \"outlets\": [\n    {\n      \"number\": 1,\n      \"disconnectOption\": \"NEVER\"\n    },\n    {\n      \"number\": 2,\n      \"disconnectOption\": \"25%\"\n    }\n  ]\n}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Wattbox_Commands"],
        "summary": "Instruct the WattBox to set its UPS configuration.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instruct the WattBox to set its UPS configuration.",
            "required": true,
            "schema": { "$ref": "#/definitions/WattboxUPSConfigSetRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WattboxUPSConfigSet" }
          }
        }
      }
    },
    "/v1/wattbox/underoversettings": {
      "get": {
        "tags": ["Wattbox_Commands"],
        "summary": "Instruct the WattBox to return its under/over notifications settings.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Wattbox's Device ID"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WattboxUnderOverSettingsGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n  \"deviceId\":\"54cf37570642205944000899\",\n  \"voltageUnder\": 50,\n  \"voltageOver\": 190,\n  \"currentUnder\": 6,\n  \"currentOver\": 17,\n  \"powerUnder\": 1500,\n  \"powerOver\": 4000\n}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Wattbox_Commands"],
        "summary": "Instruct the WattBox to set its under/over notifications settings.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instruct the WattBox to set its under/over notifications settings.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WattboxUnderOverSettingsSetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WattboxUnderOverSettingsSet" }
          }
        }
      }
    },
    "/v1/wattbox/websiteconfig": {
      "get": {
        "tags": ["Wattbox_Commands"],
        "summary": "Instruct the WattBox to return its Website/IP Address configuration.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The Wattbox's Device ID"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WattboxWebsitesConfigGet" },
            "examples": {
              "Success-Response:": {
                "value": "{\n       \"deviceId\":\"54cf37570642205944000899\",\n       \"sites\": [\n         {\n           \"name\": \"<host alias>\",\n           \"host\": \"<website / ip address>\",\n           \"protocol\": \"TCP\",\n           \"outlets\": [1, 2, 3]\n         }\n       ],\n       \"operators\": [\"AND\", \"OR\"],\n\t\t  \"maxSupportedHosts\": 16\n     }"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Wattbox_Commands"],
        "summary": "Instruct the WattBox to set its Website/IP Address configuration.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Instruct the WattBox to set its Website/IP Address configuration.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WattboxWebsitesConfigSetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WattboxWebsitesConfigSet" }
          }
        }
      }
    },
    "/v1/wirelessprofiles/runaction": {
      "post": {
        "tags": ["Wireless_Profiles"],
        "summary": "Pause or Resume a wireless schedule",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Pause or Resume a wireless schedule",
            "required": true,
            "schema": { "$ref": "#/definitions/Run_ActionRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    },
    "/v1/wirelessprofiles/schedules": {
      "post": {
        "tags": ["Wireless_Profiles"],
        "summary": "Creates a wireless profile schedule",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Creates a wireless profile schedule",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WirelessProfileSchedulesCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WirelessProfileSchedulesCreate"
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Wireless_Profiles"],
        "summary": "Deletes wireless profile schedules",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Deletes wireless profile schedules",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WirelessProfileSchedulesDeleteRequest"
            }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      },
      "get": {
        "tags": ["Wireless_Profiles"],
        "summary": "Read wireless profile schedules",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "wirelessProfileId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The wireless profile id to find wireless schedules for."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WirelessProfileSchedulesRead" },
            "examples": {
              "Success-Response:": {
                "value": "{\n\t\t    \"items\": [\n\t\t        {\n\t\t            \"companyId\": \"548227d3eff39f865700000b\",\n\t\t            \"customerId\": \"5e15dfaad5e6b54c94df7d1b\",\n\t\t            \"isEnabled\": true,\n\t\t            \"scheduleName\": \"New Schedule\",\n\t\t            \"status\": \"PAUSED\",\n\t\t            \"timezone\": \"America/New_York\",\n\t\t            \"userId\": \"548227d3eff39f865700000c\",\n\t\t            \"weekdays\": {\n\t\t                \"days\": {\n\t\t                    \"friday\": true,\n\t\t                    \"monday\": true,\n\t\t                    \"saturday\": true,\n\t\t                    \"sunday\": true,\n\t\t                    \"thursday\": true,\n\t\t                    \"tuesday\": true,\n\t\t                    \"wednesday\": true\n\t\t                },\n\t\t                \"isEnabled\": true,\n\t\t                \"pauseTime\": 2000,\n\t\t                \"pauseTimeDisplay\": \"8:00PM EST\",\n\t\t                \"resumeTime\": 600,\n\t\t                \"resumeTimeDisplay\": \"06:00AM EST\"\n\t\t            },\n\t\t            \"weekends\": {\n\t\t                \"days\": {\n\t\t                    \"friday\": false,\n\t\t                    \"monday\": false,\n\t\t                    \"saturday\": false,\n\t\t                    \"sunday\": false,\n\t\t                    \"thursday\": false,\n\t\t                    \"tuesday\": false,\n\t\t                    \"wednesday\": false\n\t\t                },\n\t\t                \"isEnabled\": false,\n\t\t                \"pauseTime\": 200,\n\t\t                \"pauseTimeDisplay\": \"02:00AM EST\",\n\t\t                \"resumeTime\": 350,\n\t\t                \"resumeTimeDisplay\": \"03:50AM EST\"\n\t\t            },\n\t\t            \"wirelessProfileId\": \"5e18c769d5e6b56e76fa49fe\",\n\t\t            \"wirelessScheduleId\": \"5e2003262bfcbd9e2670fb37\"\n\t\t        }\n\t\t    ],\n\t\t    \"limit\": 25,\n\t\t    \"message\": {\n\t\t        \"code\": 200,\n\t\t        \"description\": \"You have chosen... wisely.\",\n\t\t        \"title\": \"Success!\"\n\t\t    },\n\t\t    \"offset\": 0,\n\t\t    \"totalCount\": 1\n\t\t}"
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Wireless_Profiles"],
        "summary": "Updates a wireless profile schedule",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Updates a wireless profile schedule",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WirelessProfileSchedulesUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WirelessProfileSchedulesUpdate"
              }
            }
          }
        }
      }
    },
    "/v1/wirelessprofiles": {
      "post": {
        "tags": ["Wireless_Profiles"],
        "summary": "Read a wireless profile.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Read a wireless profile.",
            "required": true,
            "schema": { "$ref": "#/definitions/WirelessProfilesReadRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/WirelessProfilesRead" }
          }
        }
      },
      "delete": {
        "tags": ["Wireless_Profiles"],
        "summary": "Deletes a wireless profile",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Deletes a wireless profile",
            "required": true,
            "schema": { "$ref": "#/definitions/WirelessProfilesDeleteRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      },
      "put": {
        "tags": ["Wireless_Profiles"],
        "summary": "Update a wireless profile",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Update a wireless profile",
            "required": true,
            "schema": { "$ref": "#/definitions/WirelessProfilesUpdateRequest" }
          }
        ],
        "responses": { "200": { "description": "Success" } }
      }
    }
  },
  "definitions": {
    "AccountsAutomationReadRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "Device for which automation account info is being requested."
        }
      },
      "required": ["deviceId"]
    },
    "AccountsAutomationRegisterRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "Device you're creating an automation account for. Currently, there can only be one automation account per device."
        },
        "firstName": {
          "type": "string",
          "description": "First name of the customer."
        },
        "lastName": {
          "type": "string",
          "description": "Last name of the customer."
        },
        "deviceType": {
          "type": "string",
          "description": "Device type for the registration."
        }
      },
      "required": ["deviceId", "firstName", "lastName", "deviceType"]
    },
    "AutonomicAmplifierStatusGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The device ID." }
      },
      "required": ["deviceId"]
    },
    "AutonomicAmplifierStatusGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of the status update."
        },
        "uptime": {
          "type": "integer",
          "description": "The uptime as reported by the device."
        },
        "temperature": {
          "type": "string",
          "description": "The current temperature in degrees celsius."
        },
        "ampOverTemps": {
          "type": "integer",
          "description": "Indicates which zones are over temperature."
        },
        "freeRAM": {
          "type": "integer",
          "description": "The amount of free RAM."
        },
        "freeConnections": {
          "type": "integer",
          "description": "The number of free TCP connections."
        }
      },
      "required": [
        "deviceId",
        "dateTime",
        "uptime",
        "temperature",
        "ampOverTemps",
        "freeRAM",
        "freeConnections"
      ]
    },
    "BaseConfigGitRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "BaseConfigGit": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        }
      },
      "required": ["deviceId", "dateTime"]
    },
    "BaseConfigPutRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "url": {
          "type": "string",
          "description": "The url for location of Config binary"
        }
      },
      "required": ["deviceId", "url"]
    },
    "BaseConfigPut": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        }
      },
      "required": ["deviceId", "dateTime"]
    },
    "BaseConfigResetPostRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "BaseConfigResetPost": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        }
      },
      "required": ["deviceId", "dateTime"]
    },
    "BaseFirmwareGitRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "BaseFirmwareGit": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        }
      },
      "required": ["deviceId", "dateTime"]
    },
    "BaseFirmwarePutRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "url": {
          "type": "string",
          "description": "The url for location of firmware binary"
        }
      },
      "required": ["deviceId", "url"]
    },
    "BaseFirmwarePut": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        }
      },
      "required": ["deviceId", "dateTime"]
    },
    "BaseGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "BaseGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        },
        "mac": {
          "type": "string",
          "description": "The MAC address of the device"
        },
        "service_tag": {
          "type": "string",
          "description": "The device service tag"
        },
        "version": {
          "type": "string",
          "description": "The firmware version number"
        },
        "name": { "type": "string", "description": "The device name" }
      },
      "required": [
        "deviceId",
        "dateTime",
        "mac",
        "service_tag",
        "version",
        "name"
      ]
    },
    "BasePutRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "name": {
          "type": "string",
          "description": "A-z, 0-9, -, and ., but can not start with - or ."
        }
      },
      "required": ["deviceId", "name"]
    },
    "BasePut": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        }
      },
      "required": ["deviceId", "dateTime"]
    },
    "BaseHwconRebootPostRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "delay": {
          "type": "integer",
          "description": "The delay to wait before rebooting"
        }
      },
      "required": ["deviceId", "delay"]
    },
    "BaseHwconRebootPost": {
      "properties": {
        "success": {
          "properties": {
            "code": { "type": "number", "description": "Response code" },
            "message": { "type": "string", "description": "Message String" }
          },
          "required": ["code", "message"]
        }
      }
    },
    "BaseInfoGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "BaseInfoGet": {
      "properties": {
        "serial": {
          "type": "string",
          "description": "The device serial number"
        },
        "service_tag": {
          "type": "string",
          "description": "The device service tag"
        },
        "model": {
          "type": "string",
          "description": "The device model number."
        },
        "platform": { "type": "string", "description": "The device platform." }
      },
      "required": ["serial", "service_tag", "model", "platform"]
    },
    "BaseLanGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "BaseLanGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        }
      },
      "required": ["deviceId", "dateTime"]
    },
    "BaseLanPutRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "deviceName": { "type": "string", "description": "The Device Name." },
        "macAddress": {
          "type": "string",
          "description": "The Device Mac Address."
        },
        "dhcpEnabled": {
          "type": "boolean",
          "description": "Whether DHCP is Enabled"
        },
        "deviceIpAddress": {
          "type": "string",
          "description": "The Device IP Address"
        },
        "deviceSubnetMask": {
          "type": "string",
          "description": "The Device Subnet Mask"
        },
        "deviceDefaultGateway": {
          "type": "string",
          "description": "The Device Default Gateway"
        },
        "staticdns": {
          "type": "boolean",
          "description": "Whether the DNS is Static"
        },
        "dnsServer1": { "type": "string", "description": "The DNS Server" },
        "dnsServer2": {
          "type": "string",
          "description": "The Fallback DNS Server"
        }
      },
      "required": [
        "deviceId",
        "deviceName",
        "macAddress",
        "dhcpEnabled",
        "deviceIpAddress",
        "deviceSubnetMask",
        "deviceDefaultGateway",
        "staticdns",
        "dnsServer1",
        "dnsServer2"
      ]
    },
    "BaseLanPut": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        }
      },
      "required": ["deviceId", "dateTime"]
    },
    "BaseLogDebugDeleteRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "BaseLogDebugDelete": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        }
      },
      "required": ["deviceId", "dateTime"]
    },
    "BaseLogDebugGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "BaseLogDebugGet": {
      "properties": {
        "result": { "type": "string", "description": "The debug log output." }
      },
      "required": ["result"]
    },
    "BaseLogDeleteRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "BaseLogDelete": {
      "properties": {
        "success": {
          "properties": {
            "code": { "type": "number", "description": "The success code." },
            "message": {
              "type": "string",
              "description": "The success message"
            }
          },
          "required": ["code", "message"]
        }
      }
    },
    "BaseLogGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "BaseLogGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        }
      },
      "required": ["deviceId", "dateTime"]
    },
    "BaseLogDownloadGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "BaseLogDownloadGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        }
      },
      "required": ["deviceId", "dateTime"]
    },
    "BaseLogErrorDeleteRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "BaseLogErrorDelete": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        }
      },
      "required": ["deviceId", "dateTime"]
    },
    "BaseLogErrorGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "BaseLogErrorGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        }
      },
      "required": ["deviceId", "dateTime"]
    },
    "BaseStatsGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "BaseStatsGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        }
      },
      "required": ["deviceId", "dateTime"]
    },
    "BaseTimeGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "BaseTimeGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        }
      },
      "required": ["deviceId", "dateTime"]
    },
    "CameraStatusGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The device ID." }
      },
      "required": ["deviceId"]
    },
    "CameraStatusGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date &amp; time stamp in ISO format."
        },
        "health": {
          "enum": ["GOOD", "FAIR", "POOR"],
          "type": "string",
          "description": "The health status of the camera."
        },
        "streaming": {
          "enum": ["YES", "NO"],
          "type": "string",
          "description": "Indicates whether the camera is currently streaming."
        }
      },
      "required": ["deviceId", "dateTime", "health", "streaming"]
    },
    "ClareFusionProUrlGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "ClareFusionProUrlGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "url": {
          "type": "string",
          "description": "The FusionPro URL to be used for this device."
        }
      },
      "required": ["deviceId", "url"]
    },
    "GetForceImportDateRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "ID of location for which one would like to get SSIDs"
        }
      },
      "required": ["locationId"]
    },
    "GetForceImportDate": {
      "properties": {
        "forceImportDate": { "type": "string", "description": "Unique ID." },
        "titleText": { "type": "string", "description": "Unique ID." },
        "bannerText": { "type": "string", "description": "Unique ID." }
      },
      "required": ["forceImportDate", "titleText", "bannerText"]
    },
    "GuestSsidAnaSaveRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "Database GUID of location from which template is to be generated/saved"
        },
        "devices": {
          "type": "array",
          "description": "A list of device ids to include in this template",
          "items": { "type": "string" }
        },
        "ssid": { "type": "string", "description": "The SSID to be saved." },
        "enabled": {
          "type": "boolean",
          "description": "Indicates whether the SSID is enabled or disabled."
        },
        "isGuestNetwork": {
          "type": "boolean",
          "description": "Indicates whether the SSID is a guest SSID."
        },
        "password": { "type": "string", "description": "Password for SSID." },
        "broadcastEnabled": {
          "type": "boolean",
          "description": "Indicates if SSID is to be broadcast."
        },
        "interface": {
          "enum": ["24GHz", "5GHz", "BOTH"],
          "type": "string",
          "description": "Radio interface for SSID."
        },
        "security": {
          "enum": ["OPEN", "WPA2PSK", "WPAPSK", "MIXED"],
          "type": "string",
          "description": "Security type for SSID."
        },
        "separationEnabled": {
          "type": "boolean",
          "description": "Indicates whether channel separation is enabled on the network."
        },
        "gatewayIp": {
          "type": "string",
          "description": "Gateway IP for the devices on the guest SSID."
        },
        "subnetMask": {
          "type": "string",
          "description": "Subnetmask for the range of IPs"
        },
        "startingIp": {
          "type": "string",
          "description": "Starting IP address for the DHCP server."
        },
        "endingIp": {
          "type": "string",
          "description": "Ending IP address for the DHCP server."
        }
      },
      "required": [
        "locationId",
        "devices",
        "ssid",
        "enabled",
        "isGuestNetwork",
        "broadcastEnabled",
        "interface",
        "security",
        "separationEnabled",
        "gatewayIp",
        "subnetMask",
        "startingIp",
        "endingIp"
      ]
    },
    "GuestSsidAnaUpdateRequest": {
      "properties": {
        "cloudSsidTemplateId": {
          "type": "string",
          "description": "Database GUID of template to be updated"
        },
        "locationId": {
          "type": "string",
          "description": "Database GUID of location from which template is to be generated/saved"
        },
        "devices": {
          "type": "array",
          "description": "A list of device ids to include in this template",
          "items": { "type": "string" }
        },
        "ssid": { "type": "string", "description": "The SSID to be saved." },
        "enabled": {
          "type": "boolean",
          "description": "Indicates whether the SSID is enabled or disabled."
        },
        "isGuestNetwork": {
          "type": "boolean",
          "description": "Indicates whether the SSID is a guest SSID."
        },
        "password": { "type": "string", "description": "Password for SSID." },
        "broadcastEnabled": {
          "type": "boolean",
          "description": "Indicates if SSID is to be broadcast."
        },
        "interface": {
          "enum": ["24GHz", "5GHz", "BOTH"],
          "type": "string",
          "description": "Radio interface for SSID."
        },
        "security": {
          "enum": ["OPEN", "WPA2PSK", "WPAPSK", "MIXED"],
          "type": "string",
          "description": "Security type for SSID."
        },
        "separationEnabled": {
          "type": "boolean",
          "description": "Indicates whether channel separation is enabled on the network."
        },
        "gatewayIp": {
          "type": "string",
          "description": "Gateway IP for the devices on the guest SSID."
        },
        "subnetMask": {
          "type": "string",
          "description": "Subnetmask for the range of IPs"
        },
        "startingIp": {
          "type": "string",
          "description": "Starting IP address for the DHCP server."
        },
        "endingIp": {
          "type": "string",
          "description": "Ending IP address for the DHCP server."
        }
      },
      "required": [
        "cloudSsidTemplateId",
        "locationId",
        "devices",
        "ssid",
        "enabled",
        "isGuestNetwork",
        "broadcastEnabled",
        "interface",
        "security",
        "separationEnabled",
        "gatewayIp",
        "subnetMask",
        "startingIp",
        "endingIp"
      ]
    },
    "GuestSsidAxSaveRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "Database GUID of location from which template is to be generated/saved"
        },
        "devices": {
          "type": "array",
          "description": "A list of device ids to include in this template",
          "items": { "type": "string" }
        },
        "ssid": { "type": "string", "description": "The SSID to be saved." },
        "enabled": {
          "type": "boolean",
          "description": "Indicates whether the SSID is enabled or disabled."
        },
        "isGuestNetwork": {
          "type": "boolean",
          "description": "Indicates whether the SSID is a guest SSID."
        },
        "password": { "type": "string", "description": "Password for SSID." },
        "broadcastEnabled": {
          "type": "boolean",
          "description": "Indicates if SSID is to be broadcast."
        },
        "interface": {
          "enum": ["24GHz", "5GHz", "BOTH"],
          "type": "string",
          "description": "Radio interface for SSID."
        },
        "security": {
          "enum": ["OPEN", "WPA2PSK", "WPAPSK", "MIXED"],
          "type": "string",
          "description": "Security type for SSID."
        },
        "clientIsolation": {
          "type": "boolean",
          "description": "Indicates whether channel separation is enabled on the network."
        },
        "gatewayIp": {
          "type": "string",
          "description": "Gateway IP for the devices on the guest SSID."
        },
        "subnetMask": {
          "type": "string",
          "description": "Subnetmask for the range of IPs"
        },
        "startingIp": {
          "type": "string",
          "description": "Starting IP address for the DHCP server."
        },
        "endingIp": {
          "type": "string",
          "description": "Ending IP address for the DHCP server."
        }
      },
      "required": [
        "locationId",
        "devices",
        "ssid",
        "enabled",
        "isGuestNetwork",
        "broadcastEnabled",
        "interface",
        "security",
        "clientIsolation",
        "gatewayIp",
        "subnetMask",
        "startingIp",
        "endingIp"
      ]
    },
    "GuestSsidAxUpdateRequest": {
      "properties": {
        "cloudSsidTemplateId": {
          "type": "string",
          "description": "Database GUID of template to be updated"
        },
        "locationId": {
          "type": "string",
          "description": "Database GUID of location from which template is to be generated/saved"
        },
        "devices": {
          "type": "array",
          "description": "A list of device ids to include in this template",
          "items": { "type": "string" }
        },
        "ssid": { "type": "string", "description": "The SSID to be saved." },
        "enabled": {
          "type": "boolean",
          "description": "Indicates whether the SSID is enabled or disabled."
        },
        "isGuestNetwork": {
          "type": "boolean",
          "description": "Indicates whether the SSID is a guest SSID."
        },
        "password": { "type": "string", "description": "Password for SSID." },
        "broadcastEnabled": {
          "type": "boolean",
          "description": "Indicates if SSID is to be broadcast."
        },
        "interface": {
          "enum": ["24GHz", "5GHz", "BOTH"],
          "type": "string",
          "description": "Radio interface for SSID."
        },
        "security": {
          "enum": ["OPEN", "WPA2PSK", "WPAPSK", "MIXED"],
          "type": "string",
          "description": "Security type for SSID."
        },
        "clientIsolation": {
          "type": "boolean",
          "description": "Indicates whether channel separation is enabled on the network."
        },
        "gatewayIp": {
          "type": "string",
          "description": "Gateway IP for the devices on the guest SSID."
        },
        "subnetMask": {
          "type": "string",
          "description": "Subnetmask for the range of IPs"
        },
        "startingIp": {
          "type": "string",
          "description": "Starting IP address for the DHCP server."
        },
        "endingIp": {
          "type": "string",
          "description": "Ending IP address for the DHCP server."
        }
      },
      "required": [
        "cloudSsidTemplateId",
        "locationId",
        "devices",
        "ssid",
        "enabled",
        "isGuestNetwork",
        "broadcastEnabled",
        "interface",
        "security",
        "clientIsolation",
        "gatewayIp",
        "subnetMask",
        "startingIp",
        "endingIp"
      ]
    },
    "RadiosAnaUpdateRequest": {
      "properties": {
        "cloudRadioTemplateId": {
          "type": "string",
          "description": "The radio template ID."
        },
        "band24": {
          "type": "object",
          "description": "See (WAP Radio Config Set Params)"
        },
        "band5": {
          "type": "object",
          "description": "See (WAP Radio Config Set Params)"
        },
        "fastRoamingEnabled": {
          "type": "boolean",
          "description": "Enabled/Disable Fast Roaming"
        }
      },
      "required": [
        "cloudRadioTemplateId",
        "band24",
        "band5",
        "fastRoamingEnabled"
      ]
    },
    "RadiosAxUpdateRequest": {
      "properties": {
        "cloudRadioTemplateId": {
          "type": "string",
          "description": "The radio template ID."
        },
        "band24": {
          "type": "object",
          "description": "See (WAP Radio Config Set Params)"
        },
        "band5": {
          "type": "object",
          "description": "See (WAP Radio Config Set Params)"
        }
      },
      "required": ["cloudRadioTemplateId", "band24", "band5"]
    },
    "RadiosGetRequest": {
      "properties": {
        "locationId": { "type": "string", "description": "The location ID." }
      },
      "required": ["locationId"]
    },
    "RadiosGet": {
      "properties": {
        "items": {
          "type": "array",
          "description": "An array of the radio template settings.",
          "items": {
            "type": "object",
            "properties": {
              "cloudRadioTemplateId": {
                "type": "string",
                "description": "The radio template id"
              },
              "devFamily": {
                "enum": ["ANA", "WA", "WKWX"],
                "type": "string",
                "description": "The type of radio template."
              },
              "deviceId": {
                "type": "string",
                "description": "The device id the radios are on"
              },
              "deviceModel": {
                "type": "string",
                "description": "The device model"
              },
              "deviceName": {
                "type": "string",
                "description": "The device name"
              },
              "connected": {
                "type": "boolean",
                "description": "Is device connected or not"
              },
              "lastSeenTime": {
                "type": "string",
                "description": "If not connected the last time it was seen UTC"
              },
              "isSupported": {
                "type": "boolean",
                "description": "Is the device supported for for SSID Radio Management"
              },
              "supportedReason": {
                "type": "string",
                "description": "If not supported the reason why not"
              },
              "hasWebConnectEnabled": {
                "type": "boolean",
                "description": "The device has ability to web connect"
              },
              "deviceResponse": {
                "type": "object",
                "description": "The device responses per band last attempted action",
                "properties": {
                  "band24": {
                    "enum": ["success", "error"],
                    "type": "string",
                    "description": "Band 2.4GHz response."
                  },
                  "band5": {
                    "enum": ["success", "error"],
                    "type": "string",
                    "description": "Band 5GHz response."
                  }
                },
                "required": ["band24", "band5"]
              },
              "deviceState": {
                "enum": ["IMPORTED", "SYNCED"],
                "type": "string",
                "description": "The state of radio template setting. Coupled with deviceResponse can tell you if last action was successful. IMPORTED - setting has been imported from the device, SYNCED - A template was applied to the device successfully."
              },
              "locationId": {
                "type": "string",
                "description": "The location of the device"
              },
              "currentSettingsAna": {
                "type": "object",
                "description": "Settings currently on an Araknis device deviceFamily=&quot;ANA&quot;",
                "properties": {
                  "band24": {
                    "type": "object",
                    "description": "See (WAP Radio Config Get Response)"
                  },
                  "band5": {
                    "type": "object",
                    "description": "See (WAP Radio Config Get Response)"
                  }
                },
                "required": ["band24", "band5"]
              },
              "pendingSettingsAna": {
                "type": "object",
                "description": "Settings that have not been applied on an Araknis device deviceFamily=&quot;ANA&quot; and deviceState=&quot;IMPORTED&quot; or &quot;APPLIED&quot; with deviceResponse error",
                "properties": {
                  "band24": {
                    "type": "object",
                    "description": "See (WAP Radio Config Get Response)"
                  },
                  "band5": {
                    "type": "object",
                    "description": "See (WAP Radio Config Get Response)"
                  }
                },
                "required": ["band24", "band5"]
              },
              "currentSettingsPewWa": {
                "type": "object",
                "description": "Settings currently on an Packedge WA sku device deviceFamily=&quot;WA&quot; See (Pakedge WAP Settings Get Response for 'radio')"
              },
              "pendingSettingsPewWa": {
                "type": "object",
                "description": "Settings that have not been applied on a Pakedge WA sku device deviceFamily=&quot;WA&quot; and deviceState=&quot;IMPORTED&quot; or &quot;APPLIED&quot; with deviceResponse error See (Pakedge WAP Settings Get Response for 'radio')"
              },
              "currentSettingsPewWkWx": {
                "type": "object",
                "description": "Settings currently on an Packedge WK or WX sku device deviceFamily=&quot;WKWX&quot; See (Pakedge WAP Settings Get Response for 'radio')"
              },
              "pendingSettingsPewWkWx": {
                "type": "object",
                "description": "Settings that have not been applied on a Pakedge WK or WX sku device deviceFamily=&quot;WKWX&quot; and deviceState=&quot;IMPORTED&quot; or &quot;APPLIED&quot; with deviceResponse error See (Pakedge WAP Settings Get Response for 'radio')"
              },
              "metadata": {
                "type": "object",
                "description": "An object that will provide the matrix of what options and option combinations are allowed for wireless modes, channels, channel bandwidth, and transmit power.",
                "properties": {
                  "isInternational": {
                    "type": "object",
                    "description": "A boolean indicating whether or not the model is internationally capable"
                  },
                  "isChannelWidthSupported": {
                    "type": "object",
                    "description": "A boolean indicating whether or not the model supports changing channel bandwidth"
                  },
                  "band24": {
                    "type": "object",
                    "description": "Metadata for 2.4GHz band",
                    "properties": {
                      "available_wirelessmodes": {
                        "type": "array",
                        "description": "An array of possible wireless modes with &quot;displayName&quot; and &quot;requestValue&quot; for each option.",
                        "items": { "type": "object" }
                      },
                      "available_bandwidths": {
                        "type": "object",
                        "description": "A mapping of wireless mode request value -&gt; an array of available bandwidths. Note that Ana don't support this."
                      },
                      "available_channels": {
                        "type": "object",
                        "description": "A mapping of bandwidth request value -&gt; country request value -&gt; frequency type -&gt; an array of available channels. Note that Ana bandwith key will always be &quot;*&quot;"
                      },
                      "available_transmit_power": {
                        "type": "array",
                        "description": "A mapping of country request value -&gt; frequency type -&gt; an array of possible transmit power selections with &quot;displayName&quot; and &quot;requestValue&quot; for each option.",
                        "items": { "type": "object" }
                      }
                    },
                    "required": [
                      "available_wirelessmodes",
                      "available_bandwidths",
                      "available_channels",
                      "available_transmit_power"
                    ]
                  },
                  "countries": {
                    "type": "object",
                    "description": "An array of possible countries with &quot;displayName&quot; and &quot;requestValue&quot; for each option."
                  },
                  "band5": {
                    "type": "object",
                    "description": "Metadata for 5GHz band",
                    "properties": {
                      "available_wirelessmodes": {
                        "type": "array",
                        "description": "see band24.available_wirelessmodes",
                        "items": { "type": "object" }
                      },
                      "available_bandwidths": {
                        "type": "object",
                        "description": "see band24.available_bandwidths"
                      },
                      "available_channels": {
                        "type": "object",
                        "description": "see band24.available_channels"
                      },
                      "available_transmit_power": {
                        "type": "array",
                        "description": "see band24.available_transmit_power",
                        "items": { "type": "object" }
                      }
                    },
                    "required": [
                      "available_wirelessmodes",
                      "available_bandwidths",
                      "available_channels",
                      "available_transmit_power"
                    ]
                  }
                },
                "required": [
                  "isInternational",
                  "isChannelWidthSupported",
                  "band24",
                  "countries",
                  "band5"
                ]
              }
            },
            "required": [
              "cloudRadioTemplateId",
              "devFamily",
              "deviceId",
              "deviceModel",
              "deviceName",
              "connected",
              "lastSeenTime",
              "isSupported",
              "supportedReason",
              "hasWebConnectEnabled",
              "deviceResponse",
              "deviceState",
              "locationId",
              "currentSettingsAna",
              "pendingSettingsAna",
              "currentSettingsPewWa",
              "pendingSettingsPewWa",
              "currentSettingsPewWkWx",
              "pendingSettingsPewWkWx",
              "metadata"
            ]
          }
        }
      },
      "required": ["items"]
    },
    "RadiosUpdateCountryCodeRequest": {
      "properties": {
        "locationId": { "type": "string", "description": "The location ID" },
        "countryCode": { "type": "string", "description": "The country code" }
      },
      "required": ["locationId", "countryCode"]
    },
    "RadiosWaUpdateRequest": {
      "properties": {
        "cloudRadioTemplateId": {
          "type": "string",
          "description": "The radio template ID."
        }
      },
      "required": ["cloudRadioTemplateId"]
    },
    "RadiosWkWxUpdateRequest": {
      "properties": {
        "cloudRadioTemplateId": {
          "type": "string",
          "description": "The radio template ID."
        }
      },
      "required": ["cloudRadioTemplateId"]
    },
    "SsidAnaSaveRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "Database GUID of location from which template is to be generated/saved"
        },
        "devices": {
          "type": "array",
          "description": "list of device ids to include in this template",
          "items": { "type": "string" }
        },
        "ssid": { "type": "string", "description": "The SSID to be saved." },
        "enabled": {
          "type": "boolean",
          "description": "Indicates whether the SSID is enabled or disabled."
        },
        "password": { "type": "string", "description": "Password for SSID." },
        "radiusPort": {
          "type": "integer",
          "description": "Radius server port."
        },
        "radiusServer": {
          "type": "string",
          "description": "Radius server ip address."
        },
        "radiusSecret": {
          "type": "string",
          "description": "The secret for the radius server."
        },
        "broadcastEnabled": {
          "type": "boolean",
          "description": "Indicates if SSID is to be broadcast."
        },
        "interface": {
          "enum": ["24GHz", "5GHz", "BOTH"],
          "type": "string",
          "description": "Radio interface for SSID."
        },
        "security": {
          "enum": [
            "OPEN",
            "WPA2PSK",
            "WPAPSK",
            "MIXED",
            "WPA2",
            "WPA",
            "MIXED"
          ],
          "type": "string",
          "description": "Security type for SSID.S"
        },
        "separationEnabled": {
          "type": "boolean",
          "description": "Indicates whether channel separation is enabled on the network."
        },
        "vlanIsolation": {
          "type": "boolean",
          "description": "Sets VLAN isolation. If true please set vlanId"
        },
        "vlanTagged": {
          "type": "boolean",
          "description": "Sets VLAN tagging."
        },
        "vlanId": {
          "type": "integer",
          "description": "Sets VLAN ID for tagging."
        }
      },
      "required": [
        "locationId",
        "devices",
        "ssid",
        "enabled",
        "broadcastEnabled",
        "interface",
        "security",
        "separationEnabled",
        "vlanIsolation",
        "vlanTagged"
      ]
    },
    "SsidAnaUpdateRequest": {
      "properties": {
        "cloudSsidTemplateId": {
          "type": "string",
          "description": "Database GUID of template to be updated"
        },
        "devices": {
          "type": "array",
          "description": "a list of device ids to include in this template",
          "items": { "type": "string" }
        },
        "ssid": { "type": "string", "description": "The SSID to be saved." },
        "broadcastEnabled": {
          "type": "boolean",
          "description": "Indicates if SSID is to be broadcast."
        },
        "enabled": {
          "type": "boolean",
          "description": "Indicates whether the SSID is enabled or disabled."
        },
        "password": { "type": "string", "description": "Password for SSID." },
        "radiusPort": {
          "type": "integer",
          "description": "Radius server port."
        },
        "radiusServer": {
          "type": "string",
          "description": "Radius server ip address."
        },
        "radiusSecret": {
          "type": "string",
          "description": "The secret for the radius server."
        },
        "interface": {
          "enum": ["24GHz", "5GHz", "BOTH"],
          "type": "string",
          "description": "Radio interface for SSID."
        },
        "security": {
          "enum": [
            "OPEN",
            "WPA2PSK",
            "WPAPSK",
            "MIXED",
            "WPA2",
            "WPA",
            "MIXED"
          ],
          "type": "string",
          "description": "Security type for SSID.S"
        },
        "separationEnabled": {
          "type": "boolean",
          "description": "Indicates whether channel separation is enabled on the network."
        },
        "vlanIsolation": {
          "type": "boolean",
          "description": "Sets VLAN isolation. If true enables vlanId."
        },
        "vlanTagged": {
          "type": "boolean",
          "description": "Sets VLAN tagging."
        },
        "vlanId": {
          "type": "integer",
          "description": "Sets VLAN ID for tagging."
        }
      },
      "required": [
        "cloudSsidTemplateId",
        "devices",
        "ssid",
        "broadcastEnabled",
        "enabled",
        "interface",
        "security",
        "separationEnabled",
        "vlanIsolation",
        "vlanTagged"
      ]
    },
    "SsidAxSaveRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "Database GUID of location from which template is to be generated/saved"
        },
        "devices": {
          "type": "array",
          "description": "list of device ids to include in this template",
          "items": { "type": "string" }
        },
        "ssid": { "type": "string", "description": "The SSID to be saved." },
        "enabled": {
          "type": "boolean",
          "description": "Indicates whether the SSID is enabled or disabled."
        },
        "interface": {
          "enum": ["24GHz", "5GHz", "BOTH"],
          "type": "string",
          "description": "Radio interface for SSID."
        },
        "password": { "type": "string", "description": "Password for SSID." },
        "security": {
          "enum": [
            "OPEN",
            "WPA2PSK",
            "WPAPSK",
            "MIXED",
            "WPA2",
            "WPA",
            "MIXED"
          ],
          "type": "string",
          "description": "Security type for SSID.S"
        },
        "broadcastEnabled": {
          "type": "boolean",
          "description": "Indicates if SSID is to be broadcast."
        },
        "clientIsolation": {
          "type": "boolean",
          "description": "Enable client isolation for this SSID."
        },
        "fastRoamingEnabled": {
          "type": "boolean",
          "description": "Enable fast roaming for this SSID."
        },
        "bandSteeringEnabled": {
          "type": "boolean",
          "description": "Enable band steering for this SSID."
        },
        "radius": {
          "type": "object",
          "description": "Contains radius settings."
        },
        "radius[radiusPort]": {
          "type": "integer",
          "description": "Radius server port."
        },
        "radius[radiusServer]": {
          "type": "string",
          "description": "Radius server ip address."
        },
        "radius[radiusSecret]": {
          "type": "string",
          "description": "The secret for the radius server."
        },
        "radius[accountingEnabled]": {
          "type": "boolean",
          "description": "Enable Accounting Server."
        },
        "radius[accountingServer]": {
          "type": "string",
          "description": "Ip address for accounting server."
        },
        "radius[accountingPort]": {
          "type": "string",
          "description": "Port for accounting server."
        },
        "radius[accountingSecret]": {
          "type": "string",
          "description": "The secret for the accounting server."
        },
        "radius[accountingInterval]": {
          "type": "string",
          "description": "Interval value for account server.."
        },
        "vlan": {
          "type": "object",
          "description": "Contains vlan information."
        },
        "vlan[vlanEnable]": {
          "type": "boolean",
          "description": "Enable VLAN for this SSID."
        },
        "vlan[vlanID]": {
          "type": "integer",
          "description": "Sets VLAN ID for tagging."
        },
        "traffic_shaping": {
          "type": "object",
          "description": "Contains traffic shaping"
        },
        "traffic_shaping[enabled]": {
          "type": "boolean",
          "description": "Enables traffic shaping."
        },
        "traffic_shaping[download_limit]": {
          "type": "integer",
          "description": "Set Download Limit"
        },
        "traffic_shaping[upload_limit]": {
          "type": "integer",
          "description": "Set Upload Limit"
        }
      },
      "required": [
        "locationId",
        "devices",
        "ssid",
        "enabled",
        "interface",
        "security",
        "broadcastEnabled",
        "clientIsolation",
        "fastRoamingEnabled",
        "bandSteeringEnabled",
        "vlan",
        "vlan[vlanEnable]",
        "traffic_shaping",
        "traffic_shaping[enabled]"
      ]
    },
    "SsidAxUpdateRequest": {
      "properties": {
        "cloudSsidTemplateId": {
          "type": "string",
          "description": "Database GUID of template to be updated"
        },
        "devices": {
          "type": "array",
          "description": "list of device ids to include in this template",
          "items": { "type": "string" }
        },
        "ssid": { "type": "string", "description": "The SSID to be saved." },
        "enabled": {
          "type": "boolean",
          "description": "Indicates whether the SSID is enabled or disabled."
        },
        "interface": {
          "enum": ["24GHz", "5GHz", "BOTH"],
          "type": "string",
          "description": "Radio interface for SSID."
        },
        "password": { "type": "string", "description": "Password for SSID." },
        "security": {
          "enum": [
            "OPEN",
            "WPA2PSK",
            "WPAPSK",
            "MIXED",
            "WPA2",
            "WPA",
            "MIXED"
          ],
          "type": "string",
          "description": "Security type for SSID.S"
        },
        "broadcastEnabled": {
          "type": "boolean",
          "description": "Indicates if SSID is to be broadcast."
        },
        "clientIsolation": {
          "type": "boolean",
          "description": "Enable client isolation for this SSID."
        },
        "fastRoamingEnabled": {
          "type": "boolean",
          "description": "Enable fast roaming for this SSID."
        },
        "bandSteeringEnabled": {
          "type": "boolean",
          "description": "Enable band steering for this SSID."
        },
        "radius": {
          "type": "object",
          "description": "Contains radius settings."
        },
        "radius[radiusPort]": {
          "type": "integer",
          "description": "Radius server port."
        },
        "radius[radiusServer]": {
          "type": "string",
          "description": "Radius server ip address."
        },
        "radius[radiusSecret]": {
          "type": "string",
          "description": "The secret for the radius server."
        },
        "radius[accountingEnabled]": {
          "type": "boolean",
          "description": "Enable Accounting Server."
        },
        "radius[accountingServer]": {
          "type": "string",
          "description": "Ip address for accounting server."
        },
        "radius[accountingPort]": {
          "type": "string",
          "description": "Port for accounting server."
        },
        "radius[accountingSecret]": {
          "type": "string",
          "description": "The secret for the accounting server."
        },
        "radius[accountingInterval]": {
          "type": "string",
          "description": "Interval value for account server.."
        },
        "vlan": {
          "type": "object",
          "description": "Contains vlan information."
        },
        "vlan[vlanEnable]": {
          "type": "boolean",
          "description": "Enable VLAN for this SSID."
        },
        "vlan[vlanID]": {
          "type": "integer",
          "description": "Sets VLAN ID for tagging."
        },
        "traffic_shaping": {
          "type": "object",
          "description": "Contains traffic shaping"
        },
        "traffic_shaping[enabled]": {
          "type": "boolean",
          "description": "Enables traffic shaping."
        },
        "traffic_shaping[download_limit]": {
          "type": "integer",
          "description": "Set Download Limit"
        },
        "traffic_shaping[upload_limit]": {
          "type": "integer",
          "description": "Set Upload Limit"
        }
      },
      "required": [
        "cloudSsidTemplateId",
        "devices",
        "ssid",
        "enabled",
        "interface",
        "security",
        "broadcastEnabled",
        "clientIsolation",
        "fastRoamingEnabled",
        "bandSteeringEnabled",
        "vlan",
        "vlan[vlanEnable]",
        "traffic_shaping",
        "traffic_shaping[enabled]"
      ]
    },
    "SsidDeleteRequest": {
      "properties": {
        "cloudSsidTemplateId": {
          "type": "string",
          "description": "Database GUID of template to be updated"
        }
      },
      "required": ["cloudSsidTemplateId"]
    },
    "SsidGetRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "ID of location for which one would like to get SSIDs"
        }
      },
      "required": ["locationId"]
    },
    "SsidGet": {
      "properties": {
        "cloudSsidTemplateId": {
          "type": "string",
          "description": "ID of the SSID template"
        },
        "name": { "type": "string", "description": "SSID label" },
        "encryption": {
          "type": "string",
          "description": "The value of encryption used for this SSID"
        },
        "encryptionName": {
          "type": "string",
          "description": "The display name of the encryption used for this SSID"
        },
        "deviceFail": {
          "type": "boolean",
          "description": "If a device had an issue importing or applying will be set to true"
        },
        "isPendingChanges": {
          "type": "boolean",
          "description": "Indicates if this template currently has changes waiting to be applied"
        },
        "isPendingDelete": {
          "type": "boolean",
          "description": "Indicates if this template will be deleted on apply."
        },
        "enabled": {
          "type": "boolean",
          "description": "Indicates if this ssid is enabled."
        },
        "isPrimary": {
          "type": "boolean",
          "description": "Primary template cannot be deleted."
        },
        "count": {
          "type": "integer",
          "description": "Number of WAPs this SSID is applied to at this location"
        },
        "radios": {
          "enum": ["BOTH", "24", "5"],
          "type": "string",
          "description": "Radio(s) on which SSID is enabled"
        },
        "totalWapCount": {
          "type": "integer",
          "description": "Number of total WAPs at this location"
        }
      },
      "required": [
        "cloudSsidTemplateId",
        "name",
        "encryption",
        "encryptionName",
        "deviceFail",
        "isPendingChanges",
        "isPendingDelete",
        "enabled",
        "isPrimary",
        "count",
        "radios",
        "totalWapCount"
      ]
    },
    "SsidDetailsGetRequest": {
      "properties": {
        "cloudSsidTemplateId": {
          "type": "string",
          "description": "ID of template for which you would like to get details"
        }
      },
      "required": ["cloudSsidTemplateId"]
    },
    "SsidDetailsGet": {
      "properties": {
        "cloudSsidTemplateId": {
          "type": "string",
          "description": "ID of the SSID template"
        },
        "locationId": {
          "type": "string",
          "description": "ID of the location this SSID template belongs to"
        },
        "deviceFamily": {
          "enum": ["ANA", "WKWX", "WA"],
          "type": "string",
          "description": "Device family that this SSID template belongs to"
        },
        "deletePending": {
          "type": "boolean",
          "description": "SSID is flagged for delete on apply"
        },
        "isPrimary": {
          "type": "boolean",
          "description": "SSID is primary and cannot be deleted."
        },
        "devices": {
          "type": "array",
          "description": "A list of devices this template is applied to",
          "items": {
            "type": "object",
            "properties": {
              "deviceId": {
                "type": "string",
                "description": "The device ID of the device"
              },
              "deviceState": {
                "enum": ["IMPORTED", "FAILED", "COMPLETED"],
                "type": "string",
                "description": "The device state whether the ssid has been applied and was successful."
              },
              "isRemovable": {
                "type": "boolean",
                "description": "The device can be removed from this ssid template. Note for Araknis if a non removable device exists on the template then interface must be BOTH"
              }
            },
            "required": ["deviceId", "deviceState", "isRemovable"]
          }
        },
        "currentSettingsAna": {
          "type": "object",
          "description": "An object containing the currently applied ANA device family settings, if they exist (a newly created SSID that hasn't been applied yet won't have this)",
          "properties": {
            "vlanIsolation": {
              "type": "object",
              "description": "vlan isolation active"
            },
            "vlanTagged": { "type": "object", "description": "vlan is tagged" },
            "interface": {
              "type": "object",
              "description": "2.4GHz, 5GHz, or BOTH (must be BOTH if non removable device on template)"
            },
            "password": {
              "type": "object",
              "description": "password if present"
            },
            "enabled": {
              "type": "object",
              "description": "is network enabled"
            },
            "separationEnabled": {
              "type": "object",
              "description": "is network separation enabled"
            },
            "broadcastEnabled": {
              "type": "object",
              "description": "is network ssid broadcast enabled"
            },
            "ssid": { "type": "object", "description": "ssid name" },
            "vlanId": { "type": "object", "description": "The VlanId" },
            "radiusPort": {
              "type": "object",
              "description": "Radius Profile port (if enabled)"
            },
            "radiusServer": {
              "type": "object",
              "description": "Radius Profile server (if enabled)"
            },
            "radiusSecret": {
              "type": "object",
              "description": "Radius Profile secret (if enabled)"
            }
          },
          "required": [
            "vlanTagged",
            "interface",
            "enabled",
            "separationEnabled",
            "broadcastEnabled",
            "ssid",
            "vlanId"
          ]
        },
        "pendingSettingsAna": {
          "type": "object",
          "description": "An object containing the pending ANA device family settings, if they exist"
        },
        "currentSettingsWkWx": {
          "type": "object",
          "description": "An object containing the currently applied WKWX device family settings, if they exist (a newly created SSID that hasn't been applied yet won't have this)"
        },
        "pendingSettingsWkWx": {
          "type": "object",
          "description": "An object containing the pending WKWX device family settings, if they exist"
        },
        "currentSettingsWa": {
          "type": "object",
          "description": "An object containing the currently applied WA device family settings, if they exist (a newly created SSID that hasn't been applied yet won't have this)"
        },
        "pendingSettingsWa": {
          "type": "object",
          "description": "An object containing the pending WA device family settings, if they exist"
        }
      },
      "required": [
        "cloudSsidTemplateId",
        "locationId",
        "deviceFamily",
        "deletePending",
        "isPrimary",
        "devices"
      ]
    },
    "SsidDevicesGetRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "ID of location for which one would like to get SSID Management devices"
        }
      },
      "required": ["locationId"]
    },
    "SsidDevicesGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "Id of the device." },
        "name": {
          "type": "string",
          "description": "Name given to the device."
        },
        "companyId": {
          "type": "string",
          "description": "Company this device is claimed to."
        },
        "customerId": {
          "type": "string",
          "description": "Customer this device is assigned to."
        },
        "locationId": {
          "type": "string",
          "description": "Location this device is assigned to."
        },
        "class": {
          "enum": ["OVRC", "DISCOVERED", "LUTRON"],
          "type": "string",
          "description": "Device class type."
        },
        "type": { "type": "string", "description": "Device category type." },
        "model": { "type": "string", "description": "Model of the device." },
        "firmware": {
          "type": "string",
          "description": "Current firmware version."
        },
        "macAddress": {
          "type": "string",
          "description": "MAC Address of the device."
        },
        "lanAddress": {
          "type": "string",
          "description": "LAN IP address of the device."
        },
        "connected": {
          "type": "boolean",
          "description": "Current OvrC connection state."
        },
        "lastSeenTime": {
          "type": "string",
          "description": "Last time device was recognized as in communication with the cloud."
        },
        "hasFirmwareUpdate": {
          "type": "boolean",
          "description": "Indicates if there is a firmware update Available"
        },
        "firmwareUpdateStatus": {
          "enum": ["NONE", "WAITING", "COMPLETE", "INPROGRESS"],
          "type": "string",
          "description": "Shows the status/result of the most recent firmware update."
        },
        "ssidCounts": {
          "properties": {
            "radio24": {
              "type": "number",
              "description": "The current count of pending SSIDs on radio 2.4GHz"
            },
            "radio5": {
              "type": "number",
              "description": "The current count of pending SSIDs on radio 5GHz"
            }
          },
          "required": ["radio24", "radio5"]
        },
        "metadata": {
          "properties": {
            "deviceFamily": {
              "enum": ["ANA", "WKWX", "WA"],
              "type": "string",
              "description": "Indicates the deviceFamily, or group, this device belongs to. All devices in an SSID template must belong to the same deviceFamily."
            },
            "isSsidManagementCapable": {
              "type": "boolean",
              "description": "Indicates if this device model is supported by SSID management."
            },
            "wireless": {
              "type": "object",
              "description": "Provides additional metadata for the wireless settings of this device."
            }
          },
          "required": ["deviceFamily", "isSsidManagementCapable", "wireless"]
        }
      },
      "required": [
        "deviceId",
        "name",
        "companyId",
        "customerId",
        "locationId",
        "class",
        "type",
        "model",
        "firmware",
        "macAddress",
        "lanAddress",
        "connected",
        "lastSeenTime",
        "hasFirmwareUpdate",
        "firmwareUpdateStatus"
      ]
    },
    "SsidImportRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "ID of location for which one would like to import SSIDs"
        }
      },
      "required": ["locationId"]
    },
    "SsidPushRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "ID of location for which one would like to push configuration"
        }
      },
      "required": ["locationId"]
    },
    "SsidPushCancelRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "ID of location for which one would like to push configuration"
        }
      },
      "required": ["locationId"]
    },
    "SsidWaSaveRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "Database GUID of location from which template is to be generated/saved"
        },
        "devices": {
          "type": "array",
          "description": "a list of device ids to include in this template",
          "items": { "type": "string" }
        },
        "private_network": {
          "type": "object",
          "description": "@see schema defintion of see (Pakedge WAP Settings Set Params for 'private_network')",
          "properties": {
            "band24": {
              "type": "array",
              "description": "@see schema defintion of see (Pakedge WAP Settings Set Params for 'private_network.band24')",
              "items": { "type": "object" }
            },
            "band5": {
              "type": "array",
              "description": "@see schema defintion of see (Pakedge WAP Settings Set Params for 'private_network.band5')",
              "items": { "type": "object" }
            }
          },
          "required": ["band24", "band5"]
        }
      },
      "required": ["locationId", "devices", "private_network"]
    },
    "SsidWaUpdateRequest": {
      "properties": {
        "templateId": {
          "type": "string",
          "description": "Database GUID of template to be updated"
        }
      },
      "required": ["templateId"]
    },
    "SsidWkWxSaveRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "Database GUID of location from which template is to be generated/saved"
        },
        "devices": {
          "type": "array",
          "description": "a list of device ids to include in this template",
          "items": { "type": "string" }
        },
        "private_network": {
          "type": "object",
          "description": "@see schema defintion of see (Pakedge WAP Settings Set Params for 'private_network')",
          "properties": {
            "band24": {
              "type": "array",
              "description": "@see schema defintion of see (Pakedge WAP Settings Set Params for 'private_network.band24')",
              "items": { "type": "object" }
            },
            "band5": {
              "type": "array",
              "description": "@see schema defintion of see (Pakedge WAP Settings Set Params for 'private_network.band5')",
              "items": { "type": "object" }
            }
          },
          "required": ["band24", "band5"]
        },
        "security_profiles": {
          "type": "array",
          "description": "@see schema defintion of see (Pakedge WAP Settings Set Params for 'security_profiles')",
          "items": { "type": "object" }
        },
        "radius_profiles": {
          "type": "array",
          "description": "@see schema defintion of see (Pakedge WAP Settings Set Params for 'radius_profiles')",
          "items": { "type": "object" }
        }
      },
      "required": [
        "locationId",
        "devices",
        "private_network",
        "security_profiles"
      ]
    },
    "CompaniesLogoUpdateRequest": {
      "properties": {
        "file": { "type": "string", "description": "Stringified image data." },
        "originalName": {
          "type": "string",
          "description": "File name of the image."
        },
        "type": {
          "enum": ["imgpng", "imgjpg", "imggif"],
          "type": "string",
          "description": "File type for the uploaded image."
        },
        "size": {
          "type": "number",
          "description": "Size of the image, in bytes."
        }
      },
      "required": ["file", "originalName", "type", "size"]
    },
    "CompaniesNotificationHandlerUpdateRequest": {
      "properties": {
        "dealerId": {
          "type": "string",
          "description": "Id of the dealer to add the custom notification handler for"
        },
        "url": {
          "type": "string",
          "description": "endpoint URL that will handle custom raw events (required for enabling)"
        },
        "enabled": {
          "type": "boolean",
          "description": "Enable/Disable the event handler"
        },
        "subscription": {
          "type": "string",
          "description": "dev only. manually set subscriptionARN."
        },
        "topic": {
          "type": "string",
          "description": "dev only. manually set topicARN."
        }
      },
      "required": ["dealerId", "url", "enabled"]
    },
    "CompaniesRead": {
      "properties": {
        "companyId": { "type": "string", "description": "ID of the company." },
        "name": {
          "type": "string",
          "description": "Internal name of your company account."
        },
        "accountNum": {
          "type": "string",
          "description": "Internal OvrC code for your company account."
        },
        "erpCode": {
          "type": "string",
          "description": "Your SnapAV account number, if linked."
        },
        "licenseType": {
          "enum": ["basic", "pro"],
          "type": "string",
          "description": "License type for your account."
        },
        "logoUrl": {
          "type": "string",
          "description": "If available, the URL to your company logo for OvrC Home."
        },
        "contactName": {
          "type": "string",
          "description": "If available, the name you want to display externally to your customers on OvrC Home."
        },
        "phone": {
          "type": "string",
          "description": "If available, the phone number you want to display externally to your customers on OvrC Home."
        },
        "phoneExtension": {
          "type": "string",
          "description": "If available, the phone extension you want to display externally to your customers on OvrC Home."
        },
        "email": {
          "type": "string",
          "description": "If available, the email you want to display externally to your customers on OvrC Home."
        }
      },
      "required": ["companyId", "name", "accountNum", "licenseType"]
    },
    "CompaniesUpdateRequest": {
      "properties": {
        "companyId": { "type": "string", "description": "ID to be affected" },
        "name": { "type": "string", "description": "Name of the Company" },
        "contactName": {
          "type": "string",
          "description": "The name you want to display externally to your customers on OvrC Connect."
        },
        "phone": {
          "type": "string",
          "description": "The phone number you want to display externally to your customers on OvrC Connect."
        },
        "phoneExtension": {
          "type": "string",
          "description": "The phone extension you want to display externally to your customers on OvrC Connect."
        },
        "email": {
          "type": "string",
          "description": "The email you want to display externally to your customers on OvrC Connect."
        },
        "supportProfile1": {
          "type": "object",
          "description": "The support profile for customers.",
          "properties": {
            "phone": {
              "type": "string",
              "description": "The phone number you want to display externally to your customers on OvrC Connect."
            },
            "phoneExt": {
              "type": "string",
              "description": "The phone extension you want to display externally to your customers on OvrC Connect."
            },
            "email": {
              "type": "string",
              "description": "The email you want to display externally to your customers on OvrC Connect."
            }
          }
        },
        "supportProfile2": {
          "type": "object",
          "description": "The support profile for customers containing phone, phone extension and emial.",
          "properties": {
            "phone": {
              "type": "string",
              "description": "The phone number you want to display externally to your customers on OvrC Connect."
            },
            "phoneExt": {
              "type": "string",
              "description": "The phone extension you want to display externally to your customers on OvrC Connect."
            },
            "email": {
              "type": "string",
              "description": "The email you want to display externally to your customers on OvrC Connect."
            }
          }
        }
      },
      "required": ["companyId"]
    },
    "ConnectActivitiesReadRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "Database GUID of location for which Connect activities are being requested."
        }
      },
      "required": ["locationId"]
    },
    "ConnectActivitiesRead": {
      "properties": {
        "connectActivityId": {
          "type": "string",
          "description": "Database GUID of activity."
        },
        "dateTime": {
          "type": "string",
          "description": "ISO date of action that caused activity."
        },
        "details": {
          "type": "object",
          "description": "Contains details",
          "properties": {
            "customerId": {
              "type": "string",
              "description": "Database GUID of pertinent customer."
            },
            "companyId": {
              "type": "string",
              "description": "Database GUID of pertinent dealer."
            },
            "locationId": {
              "type": "string",
              "description": "Database GUID of pertinent location."
            },
            "commandId": {
              "type": "string",
              "description": "Database GUID of pertinent command"
            },
            "name": {
              "type": "string",
              "description": "Name of pertinent user."
            },
            "connectUserId": {
              "type": "string",
              "description": "Database GUID of pertinent user."
            }
          },
          "required": ["customerId", "companyId", "locationId"]
        },
        "display": {
          "type": "string",
          "description": "English description of activity."
        }
      },
      "required": ["connectActivityId", "dateTime", "details", "display"]
    },
    "ConnectCommandsCreateRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "Database GUID of location."
        },
        "icon": {
          "enum": [
            "tv",
            "cablebox",
            "accesspoint",
            "surveillance",
            "bluray",
            "receiver",
            "audio",
            "reset",
            "streambox",
            "ir",
            "server",
            "internet",
            "wap",
            "satellite",
            "game",
            "nvrdevice",
            "pos",
            "projector",
            "tower",
            "proscreen",
            "ethernet",
            "gateway",
            "controlsys",
            "router",
            "remote",
            "tablet",
            "mobile",
            "laptop",
            "firewall",
            "switch"
          ],
          "type": "string",
          "description": "Icon to be used."
        },
        "delayAfterRun": {
          "type": "integer",
          "description": "Amount of time, in seconds, for cooldown."
        },
        "replaceIfExists": {
          "type": "boolean",
          "description": "If true, will replace existing command by same name."
        },
        "name": {
          "type": "string",
          "description": "User-defined name of command."
        },
        "steps": {
          "type": "array",
          "description": "Array of steps for command.",
          "items": {
            "type": "object",
            "properties": {
              "continueOnFail": {
                "type": "boolean",
                "description": "Indicates if a step fails, is the command expected to continue."
              },
              "action": {
                "enum": [
                  "resetOutlets",
                  "resetAllOutlets",
                  "reboot",
                  "resetPorts"
                ],
                "type": "string",
                "description": "Action of particular step."
              },
              "delay": {
                "type": "string",
                "description": "Delay in seconds before proceeding to next step."
              },
              "deviceId": {
                "type": "string",
                "description": "deviceId of affected device."
              },
              "outlets": {
                "type": "string",
                "description": "Outlet of wattbox to affect."
              },
              "ports": {
                "type": "string",
                "description": "Port of network device to affect."
              }
            },
            "required": ["continueOnFail", "action", "delay", "deviceId"]
          }
        }
      },
      "required": [
        "locationId",
        "icon",
        "delayAfterRun",
        "replaceIfExists",
        "name",
        "steps"
      ]
    },
    "ConnectCommandsDeleteRequest": {
      "properties": {
        "ids": {
          "type": "array",
          "description": "Array of ids to be deleted",
          "items": { "type": "string" }
        }
      },
      "required": ["ids"]
    },
    "ConnectCommandsReadRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "Database GUID of location for which Connect commands are being requested."
        }
      },
      "required": ["locationId"]
    },
    "ConnectCommandsRead": {
      "properties": {
        "customerId": {
          "type": "string",
          "description": "Database GUID of customer."
        },
        "companyId": {
          "type": "string",
          "description": "Database GUID of dealer."
        },
        "delayAfterRun": {
          "type": "integer",
          "description": "The delay in ms before a command can be run again."
        },
        "displayOrder": {
          "type": "integer",
          "description": "Order of display"
        },
        "icon": {
          "type": "string",
          "description": "Indicates icon for a command."
        },
        "locationId": {
          "type": "string",
          "description": "Database GUID of the location."
        },
        "commandId": {
          "type": "string",
          "description": "Database GUID of a command."
        },
        "continueOnFail": {
          "type": "boolean",
          "description": "Indicates if the command will continue in the event that a step fails."
        },
        "lastRun": {
          "type": "string",
          "description": "ISO date of last run time."
        },
        "name": {
          "type": "string",
          "description": "User-provided name of the command."
        },
        "status": {
          "enum": [
            "DONE",
            "DONEWITHERRORS",
            "WAITING",
            "EXECUTING",
            "AVAILABLE",
            "UNAVAILABLE"
          ],
          "type": "string",
          "description": "Status of the command."
        },
        "steps": {
          "type": "array",
          "description": "Steps of command.",
          "items": {
            "type": "object",
            "properties": {
              "action": {
                "enum": [
                  "resetOutlets",
                  "resetAllOutlets",
                  "reboot",
                  "resetPorts"
                ],
                "type": "string",
                "description": "Action of step."
              },
              "continueOnFail": {
                "type": "boolean",
                "description": "Indicates whether to continue on fail."
              },
              "delay": { "type": "string", "description": "Delay of step" },
              "deviceId": {
                "type": "string",
                "description": "DeviceId of affected device."
              },
              "outlets": {
                "type": "array",
                "description": "Outlets to affect",
                "items": { "type": "integer" }
              }
            },
            "required": ["action", "delay", "deviceId"]
          }
        }
      },
      "required": [
        "customerId",
        "companyId",
        "delayAfterRun",
        "displayOrder",
        "icon",
        "locationId",
        "commandId",
        "name",
        "status",
        "steps"
      ]
    },
    "ConnectCommandsUpdateRequest": {
      "properties": {
        "commandId": {
          "type": "string",
          "description": "The ID of the command."
        },
        "icon": {
          "enum": [
            "tv",
            "cablebox",
            "accesspoint",
            "surveillance",
            "bluray",
            "receiver",
            "audio",
            "reset",
            "streambox",
            "ir",
            "server",
            "internet",
            "wap",
            "satellite",
            "game",
            "nvrdevice",
            "pos",
            "projector",
            "tower",
            "proscreen",
            "ethernet",
            "gateway",
            "controlsys",
            "router",
            "remote",
            "tablet",
            "mobile",
            "laptop",
            "firewall",
            "switch"
          ],
          "type": "string",
          "description": "Icon to be used."
        },
        "replaceIfExists": {
          "type": "boolean",
          "description": "If true, will replace existing command by same name."
        },
        "name": {
          "type": "string",
          "description": "User-defined name of command."
        },
        "steps": {
          "type": "array",
          "description": "Array of steps for command.",
          "items": {
            "type": "object",
            "properties": {
              "continueOnFail": {
                "type": "boolean",
                "description": "Indicates if a step fails, is the command expected to continue."
              },
              "action": {
                "enum": [
                  "resetOutlets",
                  "resetAllOutlets",
                  "reboot",
                  "resetPorts"
                ],
                "type": "string",
                "description": "Action of particular step."
              },
              "delay": {
                "type": "string",
                "description": "Delay in seconds before proceeding to next step."
              },
              "deviceId": {
                "type": "string",
                "description": "DeviceId of affected device."
              },
              "outlets": {
                "type": "string",
                "description": "Outlet of wattbox to affect."
              },
              "ports": {
                "type": "string",
                "description": "Port of network device to affect."
              }
            }
          }
        }
      },
      "required": ["commandId", "icon"]
    },
    "ConnectCommandsReorderRequest": {
      "properties": {
        "commandId": {
          "type": "string",
          "description": "The ID of the command."
        },
        "displayOrder": {
          "type": "integer",
          "description": "The new display index of the command."
        }
      },
      "required": ["commandId", "displayOrder"]
    },
    "ConnectCommandsRunRequest": {
      "properties": {
        "commandId": {
          "type": "string",
          "description": "CommandId of command which needs to be run."
        }
      },
      "required": ["commandId"]
    },
    "ConnectDevicesReadRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "Database GUID of location for which Connect devices are being requested."
        },
        "sort": {
          "enum": [
            "name",
            "lanAddress",
            "brand",
            "firmware",
            "monitored",
            "notify",
            "degraded"
          ],
          "type": "string",
          "description": "The sort can equal &quot;asc&quot; or &quot;desc&quot; i.e. firmware:asc"
        },
        "monitored": {
          "type": "string",
          "description": "Use with sort=notify for the equivalent of sort=monitored"
        },
        "degraded": {
          "type": "string",
          "description": "Use with sort=notify for the equivalent of sort=degraded (puts monitored, degraded devices on top)"
        }
      },
      "required": ["locationId", "sort", "monitored", "degraded"]
    },
    "ConnectDevicesRead": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "Database GUID of the location."
        },
        "locationName": {
          "type": "string",
          "description": "Name of the given location."
        },
        "deviceId": {
          "type": "string",
          "description": "Database GUID of the device."
        },
        "deviceName": {
          "type": "string",
          "description": "Name of the device."
        },
        "firmware": {
          "type": "string",
          "description": "Firmware version of the device."
        },
        "hasUPS": {
          "type": "boolean",
          "description": "Indicates if the device is reporting it has a UPS attached."
        },
        "macAddress": {
          "type": "string",
          "description": "MAC address of device."
        },
        "model": { "type": "string", "description": "Model of the device." },
        "category": {
          "type": "string",
          "description": "Product category of the device."
        },
        "class": { "type": "string", "description": "Class of the device." },
        "type": { "type": "string", "description": "Device category type." },
        "brand": { "type": "string", "description": "Brand of the device." },
        "commands": {
          "type": "array",
          "description": "An array of Connect Commands supported by this device.",
          "items": { "type": "object" }
        }
      },
      "required": [
        "locationId",
        "locationName",
        "deviceId",
        "deviceName",
        "firmware",
        "hasUPS",
        "macAddress",
        "model",
        "category",
        "class",
        "type",
        "brand",
        "commands"
      ]
    },
    "ConnectUsersCreateRequest": {
      "properties": {
        "customerId": {
          "type": "string",
          "description": "Database GUID of customer to which end-user belongs."
        },
        "name": { "type": "string", "description": "Name of end-user." },
        "username": {
          "type": "string",
          "description": "Valid email address of end-user."
        },
        "password": {
          "type": "string",
          "description": "Password that end-user will use to login."
        }
      },
      "required": ["customerId", "name", "username", "password"]
    },
    "ConnectUsersDeleteRequest": {
      "properties": {
        "ids": {
          "type": "array",
          "description": "ids to be deleted",
          "items": { "type": "string" }
        }
      },
      "required": ["ids"]
    },
    "ConnectUsersReadRequest": {
      "properties": {
        "customerId": {
          "type": "string",
          "description": "Database GUID of customer for which Connect users are being requested."
        }
      },
      "required": ["customerId"]
    },
    "ConnectUsersRead": {
      "properties": {
        "connectUserId": { "type": "string", "description": "The user ID." },
        "createdAt": {
          "type": "string",
          "description": "The user creation date."
        },
        "customerId": { "type": "string", "description": "The customer ID." },
        "companyId": {
          "type": "string",
          "description": "Database GUID for parent company."
        },
        "deleted": {
          "type": "string",
          "description": "Indicates whether user is deleted."
        },
        "language": {
          "type": "string",
          "description": "Indicates selected language."
        },
        "name": { "type": "string", "description": "The user name/alias." },
        "status": { "type": "string", "description": "The user status." },
        "username": {
          "type": "string",
          "description": "The user's username (email)."
        }
      },
      "required": [
        "connectUserId",
        "createdAt",
        "customerId",
        "companyId",
        "deleted",
        "language",
        "name",
        "status",
        "username"
      ]
    },
    "ConnectUsersUpdateRequest": {
      "properties": {
        "connectUserId": {
          "type": "string",
          "description": "Database GUID of OvrCHomeUser to affect."
        },
        "name": { "type": "string", "description": "Name of OvrCHomeUser" },
        "password": {
          "type": "string",
          "description": "Password for OvrCHomeUser"
        },
        "status": {
          "enum": ["ENABLED", "DISABLED"],
          "type": "string",
          "description": "Status of OvrCHomeUser"
        },
        "language": {
          "enum": ["enus"],
          "type": "string",
          "description": "Language for OvrCHomeUser."
        }
      },
      "required": ["connectUserId"]
    },
    "ConnectUsersResendInviteRequest": {
      "properties": {
        "connectUserId": {
          "type": "string",
          "description": "Database GUID of OvrCHomeUser to affect."
        }
      },
      "required": ["connectUserId"]
    },
    "ConnectWAPNetworkClientListsRequest": {
      "properties": {
        "customerId": { "type": "string", "description": "ID of customer" }
      }
    },
    "ConnectWAPNetworkClientLists": {
      "properties": {
        "waps": {
          "type": "array",
          "description": "List of device objects.",
          "items": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "ID of device record."
              },
              "macAddress": {
                "type": "string",
                "description": "MAC Address of device."
              },
              "deviceName": {
                "type": "string",
                "description": "Name of device."
              },
              "model": { "type": "string", "description": "Model of device." },
              "connected": {
                "type": "boolean",
                "description": "Indicates if device is currently connected as reported by the database."
              }
            },
            "required": [
              "_id",
              "macAddress",
              "deviceName",
              "model",
              "connected"
            ]
          }
        },
        "clientList": {
          "type": "array",
          "description": "List of WAP client objects.",
          "items": {
            "type": "object",
            "properties": {
              "_id": { "type": "string", "description": "Id of WAP device" },
              "macAddress": {
                "type": "string",
                "description": "MAC address of WAP device"
              },
              "deviceName": {
                "type": "string",
                "description": "Name of WAP device"
              },
              "model": {
                "type": "string",
                "description": "Model of WAP device"
              },
              "clientSignal": {
                "type": "number",
                "description": "Received signal strength indicator."
              },
              "clientName": {
                "type": "string",
                "description": "Name of client device"
              },
              "clientManufacturer": {
                "type": "string",
                "description": "Manufacturer or client device"
              },
              "clientSsid": {
                "type": "number",
                "description": "SSID to which client device is connected."
              },
              "clientInterface": {
                "type": "number",
                "description": "Network interface of client device (i.e 2.4G, 5G"
              },
              "clientMac": {
                "type": "number",
                "description": "MAC address of client device"
              },
              "clientMacSortable": {
                "type": "string",
                "description": "MAC address of client device"
              },
              "clientTx": {
                "type": "number",
                "description": "Transmit bytes."
              },
              "clientRx": { "type": "number", "description": "Receive bytes." },
              "clientOs": {
                "type": "string",
                "description": "Operating system of client device"
              },
              "clientWapName": {
                "type": "string",
                "description": "Name of WAP device"
              },
              "clientMacFilterProfileName": {
                "type": "string",
                "description": "Name of wirelessProfile to which this device belongs."
              }
            },
            "required": [
              "_id",
              "macAddress",
              "deviceName",
              "model",
              "clientSignal",
              "clientName",
              "clientManufacturer",
              "clientSsid",
              "clientInterface",
              "clientMac",
              "clientMacSortable",
              "clientTx",
              "clientRx",
              "clientOs",
              "clientWapName",
              "clientMacFilterProfileName"
            ]
          }
        }
      },
      "required": ["waps", "clientList"]
    },
    "OvrcConnectLocationsRequest": {
      "properties": {
        "companyId": {
          "type": "string",
          "description": "of the Ovrc Connect User (dealerId)."
        },
        "customerId": {
          "type": "string",
          "description": "of the Ovrc Connect User."
        }
      },
      "required": ["companyId", "customerId"]
    },
    "Control4BackupAvailableRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "Control4BackupAvailable": {
      "properties": {
        "deviceId": { "type": "string", "description": "The device ID." },
        "manualBackupCount": {
          "type": "integer",
          "description": "The number of existing 'manual' cloud backups."
        },
        "isAtStorageLimit": {
          "type": "boolean",
          "description": "True if the account has hit its storage limit."
        },
        "oldestManualBackupId": {
          "type": "string",
          "description": "Id of oldest 'manual' backup file that can be deleted."
        },
        "oldestManualBackupDate": {
          "type": "string",
          "description": "Date of oldest 'manual' backup file that can be deleted."
        }
      },
      "required": [
        "deviceId",
        "manualBackupCount",
        "isAtStorageLimit",
        "oldestManualBackupId",
        "oldestManualBackupDate"
      ]
    },
    "Control4BackupInfoReadRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "Control4BackupInfoRead": {
      "properties": {
        "deviceId": { "type": "string", "description": "The device ID." },
        "backupInfo": {
          "type": "object",
          "description": "Backup Information",
          "properties": {
            "backupSchedule": {
              "type": "string",
              "description": "System Scheduled Backup time or &quot;n/a&quot;"
            },
            "backupStatus": {
              "type": "string",
              "description": "System Backup Enabled - &quot;Disabled&quot; or &quot;Enabled&quot;"
            },
            "lastBackupStatus": {
              "type": "string",
              "description": "Success or failure of last backup"
            },
            "lastBackupTime": {
              "type": "string",
              "description": "Time of last backup"
            },
            "nextBackupTime": {
              "type": "string",
              "description": "Next backup time"
            }
          },
          "required": [
            "backupSchedule",
            "backupStatus",
            "lastBackupStatus",
            "lastBackupTime",
            "nextBackupTime"
          ]
        }
      },
      "required": ["deviceId", "backupInfo"]
    },
    "Control4CancelUpdateRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "Control4CancelUpdate": {
      "properties": {
        "deviceId": { "type": "string", "description": "The device ID." }
      },
      "required": ["deviceId"]
    },
    "Control4CheckInRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "Control4CheckIn": {
      "properties": {
        "deviceId": { "type": "string", "description": "The device ID." }
      },
      "required": ["deviceId"]
    },
    "Control4DirectorInfoGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "Control4DirectorInfoGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The device ID." },
        "directorInfo": {
          "type": "object",
          "description": "Director Information (Primary Controller)",
          "properties": {
            "osVersion": {
              "type": "string",
              "description": "OS Version number"
            },
            "buildVersion": {
              "type": "string",
              "description": "OS Build number"
            },
            "directorDeviceId": {
              "type": "string",
              "description": "Control4 project device Id of primary controller"
            },
            "driver": {
              "type": "string",
              "description": "driver filename of primary controller"
            },
            "directorIP": {
              "type": "string",
              "description": "IP address of primary controller"
            },
            "directorMAC": {
              "type": "string",
              "description": "MAC address OS of primary controller"
            },
            "directorUUID": {
              "type": "string",
              "description": "UUID of primary controller"
            },
            "directorName": {
              "type": "string",
              "description": "Director name of primary controller"
            },
            "directorCommonName": {
              "type": "string",
              "description": "Common name of primary controller"
            }
          },
          "required": [
            "osVersion",
            "buildVersion",
            "directorDeviceId",
            "driver",
            "directorIP",
            "directorMAC",
            "directorUUID",
            "directorName",
            "directorCommonName"
          ]
        }
      },
      "required": ["deviceId", "directorInfo"]
    },
    "Control4InfoGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "Control4InfoGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The device ID." },
        "general": {
          "type": "object",
          "description": "General Information",
          "properties": {
            "role": {
              "enum": ["primary", "secondary"],
              "type": "string",
              "description": "Is the controller a primary or secondary"
            },
            "osVersion": {
              "type": "string",
              "description": "OS Version number"
            },
            "buildVersion": {
              "type": "string",
              "description": "OS Build number"
            },
            "directorState": {
              "type": "string",
              "description": "Director status"
            },
            "backupSchedule": {
              "type": "string",
              "description": "System Backup time"
            },
            "backupStatus": {
              "type": "string",
              "description": "System Backup Enabled"
            },
            "lastBackupTime": {
              "type": "string",
              "description": "Time of last backup"
            },
            "lastBackupResult": {
              "type": "string",
              "description": "Result of last backup"
            },
            "nextBackupTime": {
              "type": "string",
              "description": "Next backup time"
            }
          },
          "required": [
            "role",
            "osVersion",
            "buildVersion",
            "directorState",
            "backupSchedule",
            "backupStatus",
            "lastBackupTime",
            "lastBackupResult",
            "nextBackupTime"
          ]
        },
        "zigbeeDevices": {
          "type": "array",
          "description": "Zigbee Devices",
          "items": {
            "type": "object",
            "properties": {
              "status": { "type": "string", "description": "Device Status" },
              "id": { "type": "number", "description": "Device Id Number" },
              "name": { "type": "string", "description": "Device Name" },
              "room": { "type": "string", "description": "Room Name" },
              "address": {
                "type": "string",
                "description": "Device Address Number"
              },
              "strength": {
                "type": "number",
                "description": "Zigbee Signal Strength"
              }
            },
            "required": ["status", "id", "name", "room", "address", "strength"]
          }
        },
        "zWaveDevices": {
          "type": "array",
          "description": "Z-Wave Devices",
          "items": {
            "type": "object",
            "properties": {
              "status": { "type": "string", "description": "Device Status" },
              "id": { "type": "number", "description": "Device Id Number" },
              "name": { "type": "string", "description": "Device Name" },
              "room": { "type": "string", "description": "Room Name" },
              "address": {
                "type": "string",
                "description": "Device Address Number"
              }
            },
            "required": ["status", "id", "name", "room", "address"]
          }
        }
      },
      "required": ["deviceId", "general", "zigbeeDevices", "zWaveDevices"]
    },
    "Control4RebootRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "Control4Reboot": {
      "properties": {
        "deviceId": { "type": "string", "description": "The device ID." }
      },
      "required": ["deviceId"]
    },
    "Control4RefreshRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "Control4Refresh": {
      "properties": {
        "deviceId": { "type": "string", "description": "The device ID." }
      },
      "required": ["deviceId"]
    },
    "Control4BackupDeleteRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "ID of device for which user is requesting a firmware update be canceled."
        },
        "backupId": {
          "type": "string",
          "description": "ID of a cloud backup to delete"
        }
      },
      "required": ["deviceId", "backupId"]
    },
    "Control4RegistrationInfoGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "Control4RegistrationInfoGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The device ID." },
        "registrationInfo": {
          "type": "object",
          "description": "Registration Information",
          "properties": {
            "ServiceConnectionsAllowed": {
              "type": "boolean",
              "description": "service connections allowed?"
            },
            "Status": { "type": "string", "description": "Check-in status" },
            "ClientSideCertExists": {
              "type": "boolean",
              "description": "indicates if the controller is registered"
            }
          },
          "required": [
            "ServiceConnectionsAllowed",
            "Status",
            "ClientSideCertExists"
          ]
        }
      },
      "required": ["deviceId", "registrationInfo"]
    },
    "Control4UpdateDevicesRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "Control4UpdateDevices": {
      "properties": {
        "deviceId": { "type": "string", "description": "The device ID." },
        "updateDevices": {
          "type": "object",
          "description": "Array of devices in the project with their id, name, room, and online/offline status"
        }
      },
      "required": ["deviceId", "updateDevices"]
    },
    "CustomersCreateRequest": {
      "properties": {
        "companyId": {
          "type": "string",
          "description": "Company you're creating the customer for.  Currently only allowed for your parent company.  ROOT PROPERTY"
        },
        "name": { "type": "string", "description": "Name of the customer." },
        "phone": {
          "type": "string",
          "description": "Phone number of customer."
        },
        "email": {
          "type": "string",
          "description": "Email address of customer."
        }
      },
      "required": ["companyId", "name"]
    },
    "CustomersDeleteRequest": {
      "properties": {
        "ids": {
          "type": "array",
          "description": "Customer IDs to be deleted.",
          "items": { "type": "string" }
        },
        "unclaimDevices": {
          "type": "boolean",
          "description": "If specified and true, will unclaim devices.  Otherwise, devices are moved to inventory for re-assignment. If false or unspecified, devices owned by this customer will be transferred to the parent-Dealer's inventory."
        }
      },
      "required": ["ids"]
    },
    "CustomersRead": {
      "properties": {
        "customerId": {
          "type": "string",
          "description": "Unique ID of customer."
        },
        "accountNum": {
          "type": "string",
          "description": "Internal OvrC customer number."
        },
        "name": {
          "type": "string",
          "description": "The name of the customer."
        },
        "companyName": {
          "type": "string",
          "description": "The name of the customer's parent dealer. This is only returned when customerId filter is used"
        },
        "licenseType": {
          "enum": ["basic", "pro"],
          "type": "string",
          "description": "License type for Customer."
        },
        "email": {
          "type": "string",
          "description": "Email address of customer."
        },
        "phone": {
          "type": "string",
          "description": "Phone number of Customer."
        },
        "locationAccessString": {
          "type": "string",
          "description": "Display to indicate if the number of locations with access via Groups."
        },
        "deviceCount": {
          "type": "number",
          "description": "Total number of devices at this customer that your account has access to."
        },
        "offlineDeviceCount": {
          "type": "number",
          "description": "Of the total, how many devices are not communicating with OvrC."
        },
        "onlineDeviceCount": {
          "type": "number",
          "description": "Of the total, how many devices ARE communicating with OvrC."
        },
        "firmwareUpdateCount": {
          "type": "number",
          "description": "Of the total, how many have firmware updates available."
        },
        "unverifiedLocationCount": {
          "type": "number",
          "description": "Number of locations for this customer that do not yet have verified addresses."
        },
        "hasNotificationsEnabled": {
          "type": "boolean",
          "description": "Indicates if your account has notifications enabled for this customer."
        },
        "hasOfflineDevices": {
          "type": "boolean",
          "description": "Indicates if this customer has any monitored offline devices."
        },
        "hasFirmwareUpdates": {
          "type": "boolean",
          "description": "Indicates if this customer has any firmware updates."
        },
        "isSharedIn": {
          "type": "boolean",
          "description": "Indicates if this location is external to your company, and shared to you."
        },
        "isSharedOut": {
          "type": "boolean",
          "description": "Indicates if this location is shared out to external users of other companies."
        },
        "canEditGroups": {
          "type": "boolean",
          "description": "Indicates if your account has permissions to edit the groups this customer is in."
        },
        "canDelete": {
          "type": "boolean",
          "description": "Can the user delete the customer"
        },
        "canAddLocations": {
          "type": "boolean",
          "description": "Indicates if your account can add additional locations to this customer."
        },
        "hasContentFilteringEnabled": {
          "type": "boolean",
          "description": "Indicates if customer has content filtering enabled."
        },
        "hasCommandsEnabled": {
          "type": "boolean",
          "description": "Indicates if customer has client-facing commands enabled."
        },
        "hasWirelessProfilesEnabled": {
          "type": "boolean",
          "description": "Indicates if customer has wireless profiles enabled."
        },
        "totalLocations": {
          "type": "number",
          "description": "Total number of customer locations user has access to."
        },
        "locations": {
          "type": "object",
          "description": "Locations array of all locations under customer (in alphabetical by name)",
          "properties": {
            "locationId": { "type": "string", "description": "Location Id" },
            "name": { "type": "string", "description": "Location Name" },
            "canDelete": {
              "type": "boolean",
              "description": "Can Delete Location"
            },
            "licenseType": {
              "enum": ["basic", "pro"],
              "type": "string",
              "description": "License of location"
            },
            "address": { "type": "string", "description": "Location Address" },
            "hasVerifiedAddress": {
              "type": "boolean",
              "description": "Is Location Address verified"
            },
            "hasNotificationsEnabled": {
              "type": "boolean",
              "description": "Are notifications enabled by user for Location"
            },
            "hasFirmwareUpdates": {
              "type": "boolean",
              "description": "Are there any firmware updates available"
            },
            "offlineDeviceCount": {
              "type": "number",
              "description": "Offline device count at location"
            },
            "jobCode": {
              "type": "string",
              "description": "Job code if one exists"
            },
            "ispName": {
              "type": "string",
              "description": "ISP name if one exists"
            }
          },
          "required": [
            "locationId",
            "name",
            "canDelete",
            "licenseType",
            "address",
            "hasVerifiedAddress",
            "hasNotificationsEnabled",
            "hasFirmwareUpdates",
            "offlineDeviceCount"
          ]
        },
        "degradedDeviceCount": {
          "type": "number",
          "description": "Of the total, how many devices ARE communicating to OvrC or Pro Device but not both. (only pro locations)"
        },
        "hasDegradedDevices": {
          "type": "boolean",
          "description": "Indicates if this customer has any monitored degraded devices. (only pro locations eligible)"
        }
      },
      "required": [
        "customerId",
        "accountNum",
        "name",
        "companyName",
        "licenseType",
        "email",
        "phone",
        "locationAccessString",
        "deviceCount",
        "offlineDeviceCount",
        "onlineDeviceCount",
        "firmwareUpdateCount",
        "unverifiedLocationCount",
        "hasNotificationsEnabled",
        "hasOfflineDevices",
        "hasFirmwareUpdates",
        "isSharedIn",
        "isSharedOut",
        "canEditGroups",
        "canDelete",
        "canAddLocations",
        "hasContentFilteringEnabled",
        "hasCommandsEnabled",
        "hasWirelessProfilesEnabled",
        "totalLocations",
        "locations",
        "degradedDeviceCount",
        "hasDegradedDevices"
      ]
    },
    "CustomersUpdateRequest": {
      "properties": {
        "items": {
          "type": "array",
          "description": "Array of customer updates.",
          "items": {
            "type": "object",
            "properties": {
              "customerId": {
                "type": "string",
                "description": "ID to be affected"
              },
              "name": {
                "type": "string",
                "description": "Name of the customer"
              },
              "phone": {
                "type": "string",
                "description": "Customer's phone number"
              },
              "email": { "type": "string", "description": "Customer's email" },
              "hasContentFilteringEnabled": {
                "type": "boolean",
                "description": "Indicates if content filtering is enabled for this customer"
              },
              "hasCommandsEnabled": {
                "type": "boolean",
                "description": "Indicates if the customer has macros enabled in Connect"
              },
              "hasWirelessProfilesEnabled": {
                "type": "boolean",
                "description": "Indicates if the customer has wireless profiles enabled in Connect"
              }
            },
            "required": ["customerId"]
          }
        }
      },
      "required": ["items"]
    },
    "CustomersLocationAccessReadRequest": {
      "properties": {
        "groupIds": {
          "type": "array",
          "description": "Array of group IDs.",
          "items": { "type": "string" }
        }
      },
      "required": ["groupIds"]
    },
    "CustomersLocationAccessRead": {
      "properties": {
        "companyName": { "type": "string", "description": "Name of customer" },
        "locationAccessString": {
          "enum": ["Alllocations", "number"],
          "type": "string",
          "description": "Name of customer"
        }
      },
      "required": ["companyName", "locationAccessString"]
    },
    "CustomersNetworkClientListsRequest": {
      "properties": {
        "customerId": { "type": "string", "description": "ID of customer" }
      }
    },
    "CustomersNetworkClientLists": {
      "properties": {
        "networkDevices": {
          "type": "array",
          "description": "List of device objects.",
          "items": {
            "type": "object",
            "properties": {
              "deviceId": {
                "type": "string",
                "description": "ID of device record."
              },
              "macAddress": {
                "type": "string",
                "description": "MAC Address of device."
              },
              "deviceName": {
                "type": "string",
                "description": "Name of device."
              },
              "type": {
                "enum": ["WAP", "ROUTER", "ROUTERHUB"],
                "type": "string",
                "description": "Type of device."
              },
              "connected": {
                "type": "string",
                "description": "Indicates if device is currently connected as reported by the database."
              }
            },
            "required": [
              "deviceId",
              "macAddress",
              "deviceName",
              "type",
              "connected"
            ]
          }
        },
        "wired": {
          "type": "array",
          "description": "List of wired client objects.",
          "items": {
            "type": "object",
            "properties": {
              "Name": {
                "type": "string",
                "description": "Name of client device"
              },
              "Ip": {
                "type": "string",
                "description": "IP address of client device"
              },
              "Mac": {
                "type": "string",
                "description": "MAC address of client device"
              },
              "Mfg": {
                "type": "string",
                "description": "Manufacture or client device"
              },
              "Res": {
                "type": "boolean",
                "description": "If DHCP is reserved for this client device : true."
              },
              "Online": {
                "type": "boolean",
                "description": "If device is currently online : true."
              },
              "Source": {
                "type": "string",
                "description": "Name of device that reported this client device"
              },
              "SourceMac": {
                "type": "string",
                "description": "MAC address of device that reported this client device."
              },
              "SourceType": {
                "enum": ["WAP", "ROUTER", "ROUTERHUB"],
                "type": "string",
                "description": "Type of device that is reporting this client device."
              }
            },
            "required": [
              "Name",
              "Ip",
              "Mac",
              "Mfg",
              "Res",
              "Online",
              "Source",
              "SourceMac",
              "SourceType"
            ]
          }
        },
        "wireless": {
          "type": "array",
          "description": "List of wired client objects.",
          "items": {
            "type": "object",
            "properties": {
              "Name": {
                "type": "string",
                "description": "Name of client device"
              },
              "Ip": {
                "type": "string",
                "description": "IP address of client device"
              },
              "Mac": {
                "type": "string",
                "description": "MAC address of client device"
              },
              "Mfg": {
                "type": "string",
                "description": "Manufacture or client device"
              },
              "OS": {
                "type": "string",
                "description": "Operating system of client device"
              },
              "Int": {
                "type": "string",
                "description": "Network interface of client device (i.e 2.4G, 5G"
              },
              "Ssid": {
                "type": "string",
                "description": "SSID to which client device is connected."
              },
              "Rssi": {
                "type": "number",
                "description": "Received signal strength indicator."
              },
              "Rx": { "type": "number", "description": "Receive bytes." },
              "Tx": { "type": "number", "description": "Transmit bytes." },
              "Source": {
                "type": "string",
                "description": "Name of device that reported this client device"
              },
              "SourceMac": {
                "type": "string",
                "description": "MAC address of device that reported this client device."
              },
              "SourceType": {
                "enum": ["WAP", "ROUTER", "ROUTERHUB"],
                "type": "string",
                "description": "Type of device that is reporting this client device."
              },
              "wirelessProfileName": {
                "type": "string",
                "description": "Name of wirelessProfile to which this device belongs."
              }
            },
            "required": [
              "Name",
              "Ip",
              "Mac",
              "Mfg",
              "OS",
              "Int",
              "Ssid",
              "Rssi",
              "Rx",
              "Tx",
              "Source",
              "SourceMac",
              "SourceType"
            ]
          }
        }
      },
      "required": ["networkDevices", "wired", "wireless"]
    },
    "CustomersNotificationsRequest": {
      "properties": {
        "customerId": {
          "type": "string",
          "description": "Id of the customer you want to update notification settings for."
        },
        "enable": {
          "type": "boolean",
          "description": "If you want to ENABLE or DISABLE the notifications for this customer."
        }
      },
      "required": ["customerId", "enable"]
    },
    "CustomersReadRequest": {
      "properties": {
        "offset": {
          "type": "number",
          "description": "offset from start to get items"
        },
        "limit": {
          "type": "number",
          "description": "limit of items (default 10)"
        },
        "loclimit": {
          "type": "number",
          "description": "limit of items (default 5 for non customer filter and 0 or unlimited when customer filter)"
        },
        "locoffset": {
          "type": "number",
          "description": "offset from start of locations (Only usable when customerId filter is used)"
        },
        "filter": {
          "type": "string",
          "description": "filter on customerId to retrieve only one ex. filter=customerId:5e15dfaad5e6b54c84df7d1e. More filter - isSharedIn, isSharedOut,hasFirmwareupdates, hasOfflineDevice, isPro. Pattern is filter=isSharedIn:true"
        },
        "search": {
          "type": "string",
          "description": "filtering by part of the name. Example : search=co -&gt; it will return customers with 'co' chars in a name."
        },
        "sort": {
          "enum": ["name", "status", "name", "isp", "address", "update"],
          "type": "string",
          "description": "sort by name, update. It can be ascending or descending. Example : sort=name:asc or sort=update:desc"
        }
      }
    },
    "CustomersReadSummaryRequest": {
      "properties": {
        "offset": {
          "type": "number",
          "description": "offset from start to get items"
        },
        "limit": {
          "type": "number",
          "description": "limit of items (default 10)"
        }
      }
    },
    "CustomersReadSummary": {
      "properties": {
        "customerId": {
          "type": "string",
          "description": "Unique ID of customer."
        },
        "name": { "type": "string", "description": "customer name" },
        "licenseType": {
          "enum": ["basic", "pro"],
          "type": "string",
          "description": "License type for Customer."
        },
        "locations": {
          "type": "object",
          "description": "Locations array of all locations under customer (in alphabetical by name)",
          "properties": {
            "locationId": { "type": "string", "description": "Location Id" },
            "name": { "type": "string", "description": "Location Name" }
          },
          "required": ["locationId", "name"]
        }
      },
      "required": ["customerId", "name", "licenseType", "locations"]
    },
    "CustomersSetGroupsRequest": {
      "properties": {
        "customerIds": {
          "type": "array",
          "description": "The customers being updated.",
          "items": { "type": "string" }
        },
        "groupIds": {
          "type": "array",
          "description": "The groups to set.",
          "items": { "type": "string" }
        }
      },
      "required": ["customerIds", "groupIds"]
    },
    "ContentFilteringGetRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "Database GUID of device to affect"
        },
        "locationId": {
          "type": "string",
          "description": "Database GUID of location to read"
        }
      },
      "required": ["deviceId", "locationId"]
    },
    "ContentFilteringGet": {
      "properties": {
        "isContentFilteringEnabled": {
          "type": "boolean",
          "description": "Indicates if content filtering is currently enabled."
        },
        "contentFilteringOption": {
          "enum": ["BASIC", "STRICT", "MEDIUM", "LIGHT"],
          "type": "string",
          "description": "Indicates level of content filtering."
        }
      },
      "required": ["isContentFilteringEnabled"]
    },
    "ContentFilteringSetRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "Database GUID of device to affect"
        },
        "enableContentFiltering": {
          "type": "boolean",
          "description": "Indicates if content filtering is currently enabled."
        },
        "contentFilteringOption": {
          "enum": ["BASIC", "STRICT", "MEDIUM", "LIGHT"],
          "type": "string",
          "description": "Indicates level of content filtering."
        },
        "locationId": {
          "type": "string",
          "description": "Database GUID of location to affect"
        }
      },
      "required": ["deviceId", "enableContentFiltering", "locationId"]
    },
    "ContentFilteringSet": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "ObjectId of the device."
        },
        "locationId": {
          "type": "string",
          "description": "Database GUID of the Location."
        }
      },
      "required": ["deviceId", "locationId"]
    },
    "Control4UpdateDeleteRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "ID of device for which user is requesting a firmware update be canceled."
        }
      },
      "required": ["deviceId"]
    },
    "DevicesFirmwareUpdateCreateRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "ID of device for which user is requesting a firmware update be queued."
        },
        "backupProject": {
          "type": "boolean",
          "description": "Flag indicating if user wants to perform a backup before starting the update process"
        },
        "osVersion": { "type": "string", "description": "Update version" },
        "url": {
          "type": "string",
          "description": "Url of firmware file for update."
        }
      },
      "required": ["deviceId", "backupProject", "osVersion", "url"]
    },
    "DeviceDetailsReadRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "ID of the requested device."
        }
      },
      "required": ["deviceId"]
    },
    "DeviceDetailsRead": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "ID of the device requested."
        },
        "companyId": {
          "type": "string",
          "description": "Company this device is claimed to."
        },
        "customerId": {
          "type": "string",
          "description": "Customer this device is assigned to."
        },
        "locationId": {
          "type": "string",
          "description": "Location this device is assigned to."
        },
        "parentHubDeviceId": {
          "type": "string",
          "description": "The ID of the hub which discovered this device."
        },
        "roomId": {
          "type": "string",
          "description": "Room this device is assigned to."
        },
        "name": {
          "type": "string",
          "description": "Name given to the device."
        },
        "class": {
          "enum": ["OVRC", "DISCOVERED", "LUTRON"],
          "type": "string",
          "description": "Device class type."
        },
        "type": { "type": "string", "description": "Device category type." },
        "brand": { "type": "string", "description": "Brand of the device." },
        "model": { "type": "string", "description": "Mode of the device." },
        "firmware": {
          "type": "string",
          "description": "Current firmware version."
        },
        "platform": {
          "type": "string",
          "description": "Platform, if available, separates different hardware on the same firmware version."
        },
        "macAddress": {
          "type": "string",
          "description": "MAC Address of the device."
        },
        "macAddresses": {
          "type": "object",
          "description": "Key:value pair. Key is string and represents macAddress, value is bool and represents if macAddress is active(if true mac is active, if false mac is inactive)."
        },
        "lanAddress": {
          "type": "string",
          "description": "LAN IP address of the device."
        },
        "ipAddress": {
          "type": "string",
          "description": "WAN IP address of the device."
        },
        "connected": {
          "type": "boolean",
          "description": "Current OvrC connection state."
        },
        "connectionState": {
          "enum": ["STATE1", "STATE2", "STATE3", "STATE4"],
          "type": "string",
          "description": "What state the device is in. state1 - connected, state2 - cloud connected but not hub visible, state3 - hub visible not cloud, state4 - disconnected"
        },
        "lastSeenTime": {
          "type": "string",
          "description": "Last time device was recognized as in communication with the cloud."
        },
        "firstSeenTime": {
          "type": "string",
          "description": "First time device was recognized as in communication with the cloud."
        },
        "hasFirmwareUpdate": {
          "type": "boolean",
          "description": "Indicates if there is a firmware update Available"
        },
        "hasWebConnectEnabled": {
          "type": "boolean",
          "description": "Indicates if device is expected to handle web-connect."
        },
        "isUPnPEnabled": {
          "type": "boolean",
          "description": "Indicates if device will using UPnP for web-connect."
        },
        "webConnectDetails": {
          "type": "array",
          "description": "Indicates available port/protocols for web-connect for this device.",
          "items": { "type": "object" }
        },
        "hasNotificationsEnabled": {
          "type": "boolean",
          "description": "If the requesting user's company has notifications enabled for this device."
        },
        "canUnclaim": {
          "type": "boolean",
          "description": "Indicates if the requesting user can unclaim this device."
        },
        "isSsidManagementCapable": {
          "type": "boolean",
          "description": "Indicates if the device supports site level SSID Management feature"
        },
        "firmwareUpdateStatus": {
          "enum": ["NONE", "WAITING", "COMPLETE", "INPROGRESS"],
          "type": "string",
          "description": "Shows the status/result of the most recent firmware update."
        },
        "control4Details": {
          "type": "object",
          "description": "Control4 specific data"
        },
        "widgets": {
          "type": "array",
          "description": "An array of, possibly nested, widgets.",
          "items": { "type": "object" }
        },
        "protocols": {
          "type": "object",
          "description": "An object of protocol data. (a.k.a. GUAC data)."
        },
        "persistData": {
          "type": "array",
          "description": "HUB-persist data for a discovered device.  Is presented inside GUAC widgets.",
          "items": { "type": "object" }
        },
        "hasUps": {
          "type": "boolean",
          "description": "Indicates if a UPS is attached to this device."
        },
        "serviceTag": {
          "type": "string",
          "description": "Service tag of device."
        },
        "serialNumber": {
          "type": "string",
          "description": "Serial Number of device."
        },
        "canReboot": {
          "type": "boolean",
          "description": "Indicates if device can be rebooted remotely."
        },
        "rebootAction": {
          "type": "string",
          "description": "URL for rebooting device."
        },
        "canScanDevice": {
          "type": "boolean",
          "description": "Indicates if device can be scanned by hub."
        },
        "scanDeviceAction": {
          "type": "string",
          "description": "URL for rebooting device."
        },
        "canPingHost": {
          "type": "boolean",
          "description": "Indicates if device can be pinged."
        },
        "pingHostAction": {
          "type": "string",
          "description": "URL for rebooting device."
        },
        "pingLastOccurrence": {
          "type": "string",
          "description": "The last time the device was pinged by the hub."
        },
        "pingResponseTime": {
          "type": "string",
          "description": "The average response time of the device when pinged by the hub."
        },
        "pingResponsePercentage": {
          "type": "string",
          "description": "The percentage of times the device responded to pings from the hub."
        },
        "appVersions": {
          "type": "object",
          "description": "An object of apps and their versions used by some devices to update portions of their firmware."
        },
        "isConnectionDegraded": {
          "type": "boolean",
          "description": "Only available for OvrC devices. If Pro device can talk to but device is not connected to device server or vice versa then the connection is degraded."
        }
      },
      "required": [
        "deviceId",
        "companyId",
        "customerId",
        "locationId",
        "name",
        "class",
        "type",
        "brand",
        "model",
        "firmware",
        "macAddress",
        "macAddresses",
        "lanAddress",
        "ipAddress",
        "connected",
        "connectionState",
        "lastSeenTime",
        "firstSeenTime",
        "hasFirmwareUpdate",
        "hasWebConnectEnabled",
        "isUPnPEnabled",
        "webConnectDetails",
        "hasNotificationsEnabled",
        "canUnclaim",
        "isSsidManagementCapable",
        "firmwareUpdateStatus",
        "control4Details",
        "widgets",
        "protocols",
        "persistData",
        "canReboot",
        "rebootAction",
        "canScanDevice",
        "scanDeviceAction",
        "canPingHost",
        "pingHostAction"
      ]
    },
    "DevicesActivitiesRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "Database GUID of device for which the user would like to read activities."
        }
      },
      "required": ["deviceId"]
    },
    "DevicesActivities": {
      "properties": {
        "activityId": {
          "type": "string",
          "description": "Database GUID of activity resource."
        },
        "dateTime": {
          "type": "string",
          "description": "Timestamp of when the causal action occurred."
        },
        "display": {
          "type": "string",
          "description": "User-friendly text description."
        },
        "sessionID": {
          "type": "string",
          "description": "Session of user, or description of application that triggered activity."
        },
        "severityLevel": {
          "type": "integer",
          "description": "Severity rating of activity."
        },
        "source": {
          "type": "string",
          "description": "Originating point of activity."
        },
        "userId": {
          "type": "string",
          "description": "ID of user, if applicable, that triggered the activity.  &quot;SYSTEM&quot; if not user-caused."
        }
      },
      "required": [
        "activityId",
        "dateTime",
        "display",
        "severityLevel",
        "source",
        "userId"
      ]
    },
    "DevicesClaimRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "ID of location where user would like to claim the device(s)"
        },
        "items": {
          "type": "array",
          "description": "Array of objects with properties for device claim",
          "items": {
            "type": "object",
            "properties": {
              "deviceId": {
                "type": "string",
                "description": "ID of device to be claimed"
              },
              "name": {
                "type": "string",
                "description": "User-defined name of device"
              },
              "notes": { "type": "string", "description": "Notes for device" }
            },
            "required": ["deviceId", "name"]
          }
        }
      },
      "required": ["locationId", "items"]
    },
    "DevicesClaimInventoryRequest": {
      "properties": {
        "items": {
          "type": "array",
          "description": "Array of objects with properties for device claim",
          "items": {
            "type": "object",
            "properties": {
              "deviceId": {
                "type": "string",
                "description": "ID of device to be claimed"
              },
              "name": {
                "type": "string",
                "description": "User-defined name of device"
              },
              "notes": { "type": "string", "description": "Notes for device" }
            },
            "required": ["deviceId", "name"]
          }
        }
      },
      "required": ["items"]
    },
    "DevicesConfirmRequest": {
      "properties": {
        "macAddress": {
          "type": "string",
          "description": "MAC Address of device to be confirmed."
        },
        "serviceTag": {
          "type": "string",
          "description": "Service Tag of device."
        },
        "serialNumber": {
          "type": "string",
          "description": "Serial Number of device."
        },
        "lanAddress": {
          "type": "string",
          "description": "Lan address of device."
        }
      },
      "required": ["macAddress"]
    },
    "DevicesConfirm": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "Database GUID of device."
        }
      },
      "required": ["deviceId"]
    },
    "DevicesFindRequest": {
      "properties": {
        "macAddress": {
          "type": "string",
          "description": "Mac address of device."
        }
      },
      "required": ["macAddress"]
    },
    "DevicesFind": {
      "properties": {
        "model": {
          "type": "string",
          "description": "The model of the device."
        },
        "macAddress": {
          "type": "string",
          "description": "The mac address of the device."
        },
        "class": {
          "enum": ["OVRC", "DISCOVERED", "LUTRON"],
          "type": "string",
          "description": "The class of the device."
        },
        "secondaryInfoType": {
          "enum": ["serviceTag", "serialNumber", "lanAddress"],
          "type": "string",
          "description": "The property of the device which will be used to confirm in the next step of claiming the device."
        },
        "secondaryInfoDescription": {
          "type": "string",
          "description": "The description which should be used to instruct the user for the confirmation step of claiming the device."
        }
      },
      "required": [
        "model",
        "macAddress",
        "class",
        "secondaryInfoType",
        "secondaryInfoDescription"
      ]
    },
    "DevicesFirmwareUpdateDeleteRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "ID of device for which user is requesting a firmware update be canceled."
        },
        "queueId": {
          "type": "string",
          "description": "ID of firmware update to remove"
        }
      },
      "required": ["deviceId", "queueId"]
    },
    "DevicesInventoryReadRequest": {
      "properties": {
        "limit": {
          "type": "integer",
          "description": "The number of inventory devices to return (default: 1)."
        },
        "offset": {
          "type": "integer",
          "description": "The offset which should be used when returning devices (default: 0)."
        },
        "sort": {
          "enum": ["name", "lanAddress", "brand", "firmware"],
          "type": "string",
          "description": "The sort can equal &quot;asc&quot; or &quot;desc&quot; i.e. firmware:asc"
        }
      },
      "required": ["sort"]
    },
    "DevicesInventoryRead": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "Database GUID of device"
        },
        "class": { "type": "string", "description": "Class of device." },
        "isConnected": {
          "type": "string",
          "description": "Indicates if device is currently communicating with OvrC"
        },
        "deviceName": {
          "type": "string",
          "description": "User-defined name of device"
        },
        "lanAddress": {
          "type": "string",
          "description": "LAN IP address of the device."
        },
        "ipAddress": {
          "type": "string",
          "description": "WAN IP address of the device."
        },
        "isFirmwareUpdateAvailable": {
          "type": "boolean",
          "description": "Indicates if a firmware update is available for device."
        },
        "activeMacAddress": {
          "type": "string",
          "description": "MAC Address of active interface."
        },
        "macAddress": {
          "type": "string",
          "description": "MAC address of device"
        },
        "type": { "type": "string", "description": "Type of device." },
        "hasWebConnectEnabled": {
          "type": "boolean",
          "description": "Indicates if device is expected to handle web-connect."
        },
        "isUPnPEnabled": {
          "type": "boolean",
          "description": "Indicates if device will using UPnP for web-connect."
        },
        "webConnectDetails": {
          "type": "array",
          "description": "Indicates the possible ports/protocols available for web-connect for this device.",
          "items": { "type": "object" }
        },
        "hasGuacData": {
          "type": "boolean",
          "description": "Indicates if the device has additional HUB-found data."
        },
        "protocols": {
          "type": "object",
          "description": "An object of protocol data. (a.k.a. GUAC data)."
        },
        "hasUPS": {
          "type": "boolean",
          "description": "Indicates if the device is reporting it has a UPS attached."
        },
        "lastSeenTime": {
          "type": "string",
          "description": "Last time device was recognized as in communication with the cloud."
        },
        "firmwareUpdateStatus": {
          "enum": ["NONE", "WAITING", "COMPLETE", "INPROGRESS"],
          "type": "string",
          "description": "Shows the status/result of the most recent firmware update."
        }
      },
      "required": [
        "deviceId",
        "class",
        "isConnected",
        "deviceName",
        "lanAddress",
        "ipAddress",
        "isFirmwareUpdateAvailable",
        "activeMacAddress",
        "macAddress",
        "type",
        "hasWebConnectEnabled",
        "isUPnPEnabled",
        "webConnectDetails",
        "hasGuacData",
        "protocols",
        "lastSeenTime",
        "firmwareUpdateStatus"
      ]
    },
    "DevicesNetworkClientListsRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "Database GUID of device"
        }
      },
      "required": ["deviceId"]
    },
    "DevicesNetworkClientLists": {
      "properties": {
        "networkDevices": {
          "type": "array",
          "description": "List of device objects.",
          "items": {
            "type": "object",
            "properties": {
              "deviceId": {
                "type": "string",
                "description": "ID of device record."
              },
              "macAddress": {
                "type": "string",
                "description": "MAC Address of device."
              },
              "deviceName": {
                "type": "string",
                "description": "Name of device."
              },
              "type": {
                "enum": ["WAP", "ROUTER", "ROUTERHUB"],
                "type": "string",
                "description": "Type of device."
              },
              "connected": {
                "type": "string",
                "description": "Indicates if device is currently connected as reported by the database."
              }
            },
            "required": [
              "deviceId",
              "macAddress",
              "deviceName",
              "type",
              "connected"
            ]
          }
        },
        "wired": {
          "type": "array",
          "description": "List of wired client objects.",
          "items": {
            "type": "object",
            "properties": {
              "Name": {
                "type": "string",
                "description": "Name of client device"
              },
              "Ip": {
                "type": "string",
                "description": "IP address of client device"
              },
              "Mac": {
                "type": "string",
                "description": "MAC address of client device"
              },
              "Mfg": {
                "type": "string",
                "description": "Manufacture or client device"
              },
              "Res": {
                "type": "boolean",
                "description": "If DHCP is reserved for this client device : true."
              },
              "Online": {
                "type": "boolean",
                "description": "If device is currently online : true."
              },
              "Source": {
                "type": "string",
                "description": "Name of device that reported this client device"
              },
              "SourceMac": {
                "type": "string",
                "description": "MAC address of device that reported this client device."
              },
              "SourceType": {
                "enum": ["WAP", "ROUTER", "ROUTERHUB"],
                "type": "string",
                "description": "Type of device that is reporting this client device."
              }
            },
            "required": [
              "Name",
              "Ip",
              "Mac",
              "Mfg",
              "Res",
              "Online",
              "Source",
              "SourceMac",
              "SourceType"
            ]
          }
        },
        "wireless": {
          "type": "array",
          "description": "List of wired client objects.",
          "items": {
            "type": "object",
            "properties": {
              "Name": {
                "type": "string",
                "description": "Name of client device"
              },
              "Ip": {
                "type": "string",
                "description": "IP address of client device"
              },
              "Mac": {
                "type": "string",
                "description": "MAC address of client device"
              },
              "Mfg": {
                "type": "string",
                "description": "Manufacture or client device"
              },
              "OS": {
                "type": "string",
                "description": "Operating system of client device"
              },
              "Int": {
                "type": "string",
                "description": "Network interface of client device (i.e 2.4G, 5G"
              },
              "Ssid": {
                "type": "string",
                "description": "SSID to which client device is connected."
              },
              "Rssi": {
                "type": "number",
                "description": "Received signal strength indicator."
              },
              "Rx": { "type": "number", "description": "Receive bytes." },
              "Tx": { "type": "number", "description": "Transmit bytes." },
              "Source": {
                "type": "string",
                "description": "Name of device that reported this client device"
              },
              "SourceMac": {
                "type": "string",
                "description": "MAC address of device that reported this client device."
              },
              "SourceType": {
                "enum": ["WAP", "ROUTER", "ROUTERHUB"],
                "type": "string",
                "description": "Type of device that is reporting this client device."
              },
              "wirelessProfileName": {
                "type": "string",
                "description": "Name of wirelessProfile to which this device belongs."
              }
            },
            "required": [
              "Name",
              "Ip",
              "Mac",
              "Mfg",
              "OS",
              "Int",
              "Ssid",
              "Rssi",
              "Rx",
              "Tx",
              "Source",
              "SourceMac",
              "SourceType"
            ]
          }
        }
      },
      "required": ["networkDevices", "wired", "wireless"]
    },
    "DevicesNetworkSettingsReadRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "Id of the device." },
        "interfaces": {
          "type": "array",
          "description": "Array of interface objects. Required",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of interface. Optional"
              },
              "macAddress": {
                "type": "string",
                "description": "MacAddress of network interface. Required"
              },
              "state": {
                "type": "string",
                "description": "State of network interface. Can be up or down. Optional."
              },
              "ipAddress": {
                "type": "string",
                "description": "Local IP of network interface. Required when dhcpEnabled = true. Required"
              },
              "subnet": {
                "type": "string",
                "description": "Subnet mask used on network interface. Required when dhcpEnabled = true. Required"
              },
              "defaultGateway": {
                "type": "string",
                "description": "Default gateway address used on network interface. Required when dhcpEnabled = true. Required"
              },
              "dhcpEnabled": {
                "type": "boolean",
                "description": "Indicates whether DHCP is enabled on network interface. Can be true or false. Required"
              },
              "dnsStatic": {
                "type": "boolean",
                "description": "This field sets whether statis DNS is used on this interface. network interface. Can be true or false. Optional"
              },
              "dnsServers": {
                "type": "array",
                "description": "This field sets an array of DNS server values for the given interface. Required",
                "items": { "type": "string" }
              },
              "speed": {
                "type": "string",
                "description": "This field configures the speed of the given interface. Values can be - 10, 100, 1000, 10000, AUTO.Optional"
              },
              "duplex": {
                "type": "string",
                "description": "This field configures the duplex value of the given interface. Values can be FULL or HALF.Optional"
              },
              "type": {
                "type": "string",
                "description": "This field returns the type for this interface. It can be - wireless, wired or virtual.Optional"
              },
              "stateActual": {
                "type": "string",
                "description": "This field returns the actual state for this interface. It can be up, down or disconnected.Optional"
              },
              "speedActual": {
                "type": "string",
                "description": "This field returns the actual speed of the interface (unit is Mbit per second). Can be - 10,100, 1000, 10000.Optional"
              }
            },
            "required": [
              "macAddress",
              "ipAddress",
              "subnet",
              "defaultGateway",
              "dhcpEnabled",
              "dnsServers"
            ]
          }
        }
      },
      "required": ["deviceId", "interfaces"]
    },
    "DevicesNetworkSettingsRead": {
      "properties": {
        "deviceName": {
          "type": "string",
          "description": "Name of the device as broadcasted on the local network."
        },
        "webPagePort": {
          "type": "number",
          "description": "The port number that the device is broadcasting its local web GUI to."
        },
        "deviceIpAddress": {
          "type": "string",
          "description": "IP address of the device."
        },
        "deviceSubnetMask": {
          "type": "string",
          "description": "The subnet mask used on the device."
        },
        "deviceDefaultGateway": {
          "type": "string",
          "description": "The default gateway address used on the device."
        },
        "dhcpEnabled": {
          "type": "boolean",
          "description": "Indicates whether devices obtains its IP address from a DHCP server or uses a static address."
        },
        "dnsServer1": {
          "type": "string",
          "description": "The address of the DNS server."
        },
        "dnsServer2": {
          "type": "string",
          "description": "The address of the secondary DNS server."
        }
      },
      "required": [
        "deviceName",
        "webPagePort",
        "deviceIpAddress",
        "deviceSubnetMask",
        "deviceDefaultGateway",
        "dhcpEnabled",
        "dnsServer1"
      ]
    },
    "DevicesNetworkSettingsSetRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "ObjectId of the device."
        },
        "deviceName": { "type": "string", "description": "Name of the device" },
        "webPagePort": {
          "type": "integer",
          "description": "Port number that the device is broadcasting its local web GUI"
        },
        "interfaces": {
          "type": "array",
          "description": "Array of interface objects. Required",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of interface. Optional."
              },
              "macAddress": {
                "type": "string",
                "description": "MacAddress of network interface. Required"
              },
              "state": {
                "type": "string",
                "description": "State of network interface. Can be up or down. Optional."
              },
              "ipAddress": {
                "type": "string",
                "description": "Local IP of network interface. Required when dhcpEnabled = true."
              },
              "subnet": {
                "type": "string",
                "description": "Subnet mask used on network interface. Required when dhcpEnabled = true."
              },
              "defaultGateway": {
                "type": "string",
                "description": "Default gateway address used on network interface. Required when dhcpEnabled = true."
              },
              "dhcpEnabled": {
                "type": "boolean",
                "description": "Indicates whether DHCP is enabled on network interface. Can be true or false."
              },
              "dnsStatic": {
                "type": "boolean",
                "description": "This field sets whether statis DNS is used on this interface. network interface. Can be true or false.Optional."
              },
              "dnsServers": {
                "type": "array",
                "description": "This field sets an array of DNS server values for the given interface. Required",
                "items": { "type": "string" }
              },
              "speed": {
                "type": "string",
                "description": "This field configures the speed of the given interface. Values can be - 10, 100, 1000, 10000, AUTO.Optional."
              },
              "duplex": {
                "type": "string",
                "description": "This field configures the duplex value of the given interface. Values can be FULL or HALF.Optional."
              }
            },
            "required": [
              "macAddress",
              "ipAddress",
              "subnet",
              "defaultGateway",
              "dhcpEnabled",
              "dnsServers"
            ]
          }
        },
        "deviceIpAddress": {
          "type": "string",
          "description": "Local IP address of the device"
        },
        "deviceSubnetMask": {
          "type": "string",
          "description": "Subnet mask used on the device"
        },
        "deviceDefaultGateway": {
          "type": "string",
          "description": "Default gateway address used on the device"
        },
        "dhcpEnabled": {
          "type": "boolean",
          "description": "Indicates whether DHCP is enabled on the device"
        },
        "dnsServer1": {
          "type": "string",
          "description": "Address of the DNS server"
        },
        "dnsServer2": {
          "type": "string",
          "description": "Address of the secondary DNS server. Empty string if device doesn't support dnsServer2"
        }
      },
      "required": [
        "deviceId",
        "deviceName",
        "webPagePort",
        "interfaces",
        "deviceIpAddress",
        "deviceSubnetMask",
        "deviceDefaultGateway",
        "dhcpEnabled",
        "dnsServer1",
        "dnsServer2"
      ]
    },
    "DevicesNetworkSettingsSet": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "ObjectId of the device."
        }
      },
      "required": ["deviceId"]
    },
    "DevicesNotificationsRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "Id of the device you want to update notification settings for."
        },
        "enable": {
          "type": "boolean",
          "description": "If you want to ENABLE or DISABLE the notifications for this device."
        }
      },
      "required": ["deviceId", "enable"]
    },
    "DevicesProRead": {
      "properties": {
        "deviceId": { "type": "string", "description": "Id of the device." },
        "name": {
          "type": "string",
          "description": "Name given to the device."
        },
        "notes": { "type": "string", "description": "Notes for the device." },
        "companyId": {
          "type": "string",
          "description": "Company this device is claimed to."
        },
        "customerId": {
          "type": "string",
          "description": "Customer this device is assigned to."
        },
        "locationId": {
          "type": "string",
          "description": "Location this device is assigned to."
        },
        "class": {
          "enum": ["OVRC"],
          "type": "string",
          "description": "Device class type."
        },
        "type": { "type": "string", "description": "Device category type." },
        "brand": { "type": "string", "description": "Brand of the device." },
        "model": { "type": "string", "description": "Model of the device." },
        "firmware": {
          "type": "string",
          "description": "Current firmware version."
        },
        "platform": {
          "type": "string",
          "description": "Platform, if available, separates different hardware on the same firmware version."
        },
        "macAddress": {
          "type": "string",
          "description": "MAC Address of the device."
        },
        "lanAddress": {
          "type": "string",
          "description": "LAN IP address of the device."
        },
        "ipAddress": {
          "type": "string",
          "description": "WAN IP address of the device."
        },
        "connected": {
          "type": "boolean",
          "description": "Current OvrC connection state."
        },
        "lastSeenTime": {
          "type": "string",
          "description": "Last time device was recognized as in communication with the cloud."
        },
        "hasFirmwareUpdate": {
          "type": "boolean",
          "description": "Indicates if there is a firmware update Available"
        },
        "hasWebConnectEnabled": {
          "type": "boolean",
          "description": "Indicates if device is expected to handle web-connect."
        },
        "isUPnPEnabled": {
          "type": "boolean",
          "description": "Indicates if device will using UPnP for web-connect."
        },
        "webConnectDetails": {
          "type": "array",
          "description": "Indicates the possible ports/protocols available for web-connect for this device.",
          "items": { "type": "object" }
        },
        "firmwareUpdateStatus": {
          "enum": ["NONE", "WAITING", "COMPLETE", "INPROGRESS"],
          "type": "string",
          "description": "Shows the status/result of the most recent firmware update."
        },
        "hasNotificationsEnabled": {
          "type": "boolean",
          "description": "If the requesting user's company has notifications enabled for this device."
        },
        "hasGuacData": {
          "type": "boolean",
          "description": "Indicates if the device has additional HUB-found data."
        },
        "canReboot": {
          "type": "boolean",
          "description": "Indicates if device can be rebooted remotely."
        },
        "rebootAction": {
          "type": "string",
          "description": "URL for rebooting device."
        }
      },
      "required": [
        "deviceId",
        "name",
        "notes",
        "companyId",
        "customerId",
        "locationId",
        "class",
        "type",
        "brand",
        "model",
        "firmware",
        "macAddress",
        "lanAddress",
        "ipAddress",
        "connected",
        "lastSeenTime",
        "hasFirmwareUpdate",
        "hasWebConnectEnabled",
        "isUPnPEnabled",
        "webConnectDetails",
        "firmwareUpdateStatus",
        "hasNotificationsEnabled",
        "hasGuacData",
        "canReboot",
        "rebootAction"
      ]
    },
    "DevicesReadRequest": {
      "properties": {
        "sort": {
          "enum": [
            "name",
            "lanAddress",
            "brand",
            "firmware",
            "monitored",
            "notify",
            "degraded"
          ],
          "type": "string",
          "description": "The sort can equal &quot;asc&quot; or &quot;desc&quot; i.e. firmware:asc"
        },
        "monitored": {
          "type": "string",
          "description": "Use with sort=notify for the equivalent of sort=monitored"
        },
        "degraded": {
          "type": "string",
          "description": "Use with sort=notify for the equivalent of sort=degraded (puts monitored, degraded devices on top)"
        },
        "filter": {
          "type": "string",
          "description": "comma separated list of options to narrow search. - locationId: to limit to devices from specific location - roomId: to limit to devices from a specific room (should be used in conjunction with location filter) - connected:true to show only connected devices - connected:false to show only disconnected devices - degraded:true to show only degraded devices - name:* to show all device names (default if not specified) - name:*router to show all devices with router in the name"
        }
      },
      "required": ["sort", "monitored", "degraded", "filter"]
    },
    "DevicesRead": {
      "properties": {
        "deviceId": { "type": "string", "description": "Id of the device." },
        "name": {
          "type": "string",
          "description": "Name given to the device."
        },
        "notes": { "type": "string", "description": "Notes for the device." },
        "companyId": {
          "type": "string",
          "description": "Company this device is claimed to."
        },
        "customerId": {
          "type": "string",
          "description": "Customer this device is assigned to."
        },
        "locationId": {
          "type": "string",
          "description": "Location this device is assigned to."
        },
        "roomId": {
          "type": "string",
          "description": "Room this device is assigned to."
        },
        "class": {
          "enum": ["OVRC", "DISCOVERED", "LUTRON"],
          "type": "string",
          "description": "Device class type."
        },
        "type": { "type": "string", "description": "Device category type." },
        "brand": { "type": "string", "description": "Brand of the device." },
        "model": { "type": "string", "description": "Model of the device." },
        "firmware": {
          "type": "string",
          "description": "Current firmware version."
        },
        "platform": {
          "type": "string",
          "description": "Platform, if available, separates different hardware on the same firmware version."
        },
        "macAddress": {
          "type": "string",
          "description": "MAC Address of the device."
        },
        "activeMacAddress": {
          "type": "string",
          "description": "MAC Address of active interface."
        },
        "lanAddress": {
          "type": "string",
          "description": "LAN IP address of the device."
        },
        "ipAddress": {
          "type": "string",
          "description": "WAN IP address of the device."
        },
        "connected": {
          "type": "boolean",
          "description": "Current OvrC connection state."
        },
        "connectionState": {
          "enum": ["STATE1", "STATE2", "STATE3", "STATE4"],
          "type": "string",
          "description": "What state the device is in. state1 - connected, state2 - cloud connected but not hub visible, state3 - hub visible not cloud, state4 - disconnected"
        },
        "lastSeenTime": {
          "type": "string",
          "description": "Last time device was recognized as in communication with the cloud."
        },
        "hasFirmwareUpdate": {
          "type": "boolean",
          "description": "Indicates if there is a firmware update Available"
        },
        "hasWebConnectEnabled": {
          "type": "boolean",
          "description": "Indicates if device is expected to handle web-connect."
        },
        "isUPnPEnabled": {
          "type": "boolean",
          "description": "Indicates if device will using UPnP for web-connect."
        },
        "webConnectDetails": {
          "type": "array",
          "description": "Indicates the possible ports/protocols available for web-connect for this device.",
          "items": { "type": "object" }
        },
        "firmwareUpdateStatus": {
          "enum": ["NONE", "WAITING", "COMPLETE", "INPROGRESS"],
          "type": "string",
          "description": "Shows the status/result of the most recent firmware update."
        },
        "hasNotificationsEnabled": {
          "type": "boolean",
          "description": "If the requesting user's company has notifications enabled for this device."
        },
        "hasGuacData": {
          "type": "boolean",
          "description": "Indicates if the device has additional HUB-found data."
        },
        "hasUps": {
          "type": "boolean",
          "description": "Indicates if the device is reporting it has a UPS attached."
        },
        "canReboot": {
          "type": "boolean",
          "description": "Indicates if device can be rebooted remotely."
        },
        "rebootAction": {
          "type": "string",
          "description": "URL for rebooting device."
        },
        "isConnectionDegraded": {
          "type": "boolean",
          "description": "Only available for OvrC devices. If Pro device can talk to but device is not connected to device server or vice versa then the connection is degraded."
        }
      },
      "required": [
        "deviceId",
        "name",
        "notes",
        "companyId",
        "customerId",
        "locationId",
        "class",
        "type",
        "brand",
        "model",
        "firmware",
        "macAddress",
        "activeMacAddress",
        "lanAddress",
        "ipAddress",
        "connected",
        "connectionState",
        "lastSeenTime",
        "hasFirmwareUpdate",
        "hasWebConnectEnabled",
        "isUPnPEnabled",
        "webConnectDetails",
        "firmwareUpdateStatus",
        "hasNotificationsEnabled",
        "hasGuacData",
        "canReboot",
        "rebootAction"
      ]
    },
    "DevicesUpdateRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "Database GUID of device to affect"
        },
        "name": { "type": "string", "description": "Name of the device." },
        "notes": { "type": "string", "description": "Notes for device." }
      },
      "required": ["deviceId"]
    },
    "DevicesReadTimeSeriesRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "DeviceId for the device you'd like data for."
        },
        "metrics": {
          "type": "string",
          "description": "Metrics wanted for a given set of data."
        },
        "endDate": {
          "type": "string",
          "description": "Max date to pull data up to."
        },
        "span": {
          "type": "string",
          "description": "How far back, from the endDate, to pull data for."
        },
        "env": {
          "enum": ["table", "mobile"],
          "type": "string",
          "description": "Based on the target type,"
        }
      },
      "required": ["deviceId", "metrics", "endDate", "span", "env"]
    },
    "DevicesResetRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "Database GUID of device to be reset"
        }
      },
      "required": ["deviceId"]
    },
    "DevicesRoomSetRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "Device you are changing room assignment of."
        },
        "locationId": {
          "type": "string",
          "description": "Location device and room belong to."
        },
        "roomId": {
          "type": "string",
          "description": "Room you are assigning device to."
        }
      },
      "required": ["deviceId", "locationId", "roomId"]
    },
    "DevicesSnapshotGetRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "Database GUID of device.  The device may have access to a camera, or it may be an OvrC Pro device that can access another device with a camera."
        },
        "channel": {
          "type": "integer",
          "description": "The channel of an NVR, DVR, or Chime doorbell."
        },
        "resolution": {
          "type": "integer",
          "description": "The resolution of a Chime doorbell snapshot."
        },
        "quality": {
          "type": "integer",
          "description": "The quality of a Chime doorbell snapshot."
        },
        "streamid": {
          "type": "integer",
          "description": "The stream id of a Chime doorbell."
        },
        "fileType": {
          "enum": ["png", "jpg"],
          "type": "string",
          "description": "Can be used to specify the image file type. (Always jpg right now)"
        },
        "targetMac": {
          "type": "string",
          "description": "The MAC address of a device that is proxied by the above device.  (Required if the above device is an OvrC Pro device.)"
        },
        "protocol": {
          "type": "string",
          "description": "The value of the device document's protocols object that contains the CameraSnapshotGroup and CameraSnapshotCard widget (i.e. &quot;ONVIF&quot;). (Required if the device above is an OvrC Pro device.)"
        },
        "internalPath": {
          "type": "string",
          "description": "THe value of the device document's protocols..CameraSnapshotGroup.children.props.internalPath (i.e. http://192.168.1.178:80/onvifsnapshot/media_service/snapshot?channel=1&amp;subtype=0). (Required if the device above is an OvrC Pro device.)"
        }
      },
      "required": ["deviceId"]
    },
    "DevicesSnapshotGet": {
      "properties": {
        "url": {
          "type": "string",
          "description": "The destination URL of the snapshot.  The caller can issue an HTTPS GET to retrieve the image at this URL."
        }
      },
      "required": ["url"]
    },
    "DevicesTimeSettingsReadRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "Id of the device." }
      },
      "required": ["deviceId"]
    },
    "DevicesTimeSettingsRead": {
      "properties": {
        "name": {
          "type": "string",
          "description": "IANA Name of the time zone the device is set at."
        },
        "notes": {
          "type": "string",
          "description": "OvrC description of the time zone."
        },
        "offset": {
          "type": "number",
          "description": "Offset in minutes from local time to UTC time."
        },
        "currentTime": {
          "type": "string",
          "description": "The current time on the device in UTC format."
        }
      },
      "required": ["name", "notes", "offset", "currentTime"]
    },
    "DevicesTimeSettingsSetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "Id of the device." },
        "name": {
          "type": "string",
          "description": "IANA Name of the time zone the device is set at."
        },
        "notes": {
          "type": "string",
          "description": "OvrC description of the time zone."
        },
        "offset": {
          "type": "number",
          "description": "Offset in minutes from local time to UTC time."
        },
        "currentTime": {
          "type": "string",
          "description": "The current time on the device in UTC format."
        }
      },
      "required": ["deviceId", "name", "notes", "offset", "currentTime"]
    },
    "DevicesTransferRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "Database GUID of device to be transfered"
        },
        "locationId": {
          "type": "string",
          "description": "Database GUID of device to be transfered"
        }
      },
      "required": ["deviceId"]
    },
    "DevicesUnclaimRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "ID of the requested device."
        }
      },
      "required": ["deviceId"]
    },
    "DevicesWebconnectRequest": {
      "properties": {
        "targetDeviceId": {
          "type": "string",
          "description": "Database GUID of device to which user is requesting connection."
        },
        "proxyDeviceId": {
          "type": "string",
          "description": "Database GUID of proxy device.  Not all devices can support web-connect without a proxy device on the same physical network."
        },
        "protocol": {
          "enum": ["HTTP", "HTTPS", "SSH", "TELNET", "RAW"],
          "type": "string",
          "description": "The protocol to connect with. Valid protocols are &quot;HTTP&quot;, &quot;HTTPS&quot;, &quot;SSH&quot;, &quot;TELNET&quot; and &quot;RAW&quot;"
        },
        "port": {
          "type": "integer",
          "description": "The port number to connect to"
        },
        "user": {
          "type": "string",
          "description": "The username to connect with for SSH protocol"
        }
      },
      "required": ["targetDeviceId", "protocol", "port"]
    },
    "MeshNodeDiscoverRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "The location ID to discover nodes at."
        }
      },
      "required": ["locationId"]
    },
    "MeshNodeDiscover": {
      "properties": {
        "devices": {
          "type": "array",
          "description": "Array of WAPs at location excluding the mesh controller.",
          "items": {
            "type": "object",
            "properties": {
              "DeviceName": {
                "type": "string",
                "description": "The name of the device."
              },
              "IpAddress": {
                "type": "string",
                "description": "The IpAddress of the device."
              },
              "LanAddress": {
                "type": "string",
                "description": "The LanAddress of the device."
              },
              "Model": {
                "type": "string",
                "description": "The Model of the device."
              },
              "MacAddress": {
                "type": "string",
                "description": "The MacAddress of the device."
              },
              "MeshIsNode": {
                "type": "string",
                "description": "Indicator noting whether the device is in operation role of Node and operation mode of mesh."
              },
              "MeshIsPaired": {
                "type": "string",
                "description": "Indicator noting whether the device is currently paired in a mesh network."
              },
              "IsDiscovered": {
                "type": "string",
                "description": "Indicator noting whether the device was discovered in the mesh discover function."
              }
            },
            "required": [
              "DeviceName",
              "IpAddress",
              "LanAddress",
              "Model",
              "MacAddress",
              "MeshIsNode",
              "MeshIsPaired",
              "IsDiscovered"
            ]
          }
        }
      },
      "required": ["devices"]
    },
    "Mesh_Initiate_TransformationRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "Location id for devices desired to update."
        },
        "controllerId": {
          "type": "string",
          "description": "The deviceId to be set as CONTROLLER."
        },
        "ssidOne": {
          "type": "string",
          "description": "Variable holding network configuration to be set on the CONTROLLER device.",
          "properties": {
            "deviceId": { "type": "string", "description": "The Device ID." },
            "interface": {
              "enum": ["24GHz", "5GHz", "BOTH"],
              "type": "string",
              "description": "The interface on which the network is broadcasting."
            },
            "ssid": {
              "type": "string",
              "description": "The SSID of the network."
            },
            "enabled": {
              "type": "boolean",
              "description": "Indicates whether the SSID is enabled or disabled."
            },
            "security": {
              "enum": [
                "OPEN",
                "WPA2PSK",
                "WPAPSKMIXED",
                "WPA2",
                "WPAMIXED",
                "WEP"
              ],
              "type": "string",
              "description": "The security protocol of the network."
            },
            "password": {
              "type": "string",
              "description": "The password for the network."
            },
            "radiusServer": {
              "type": "string",
              "description": "The IP address of the radius server."
            },
            "radiusPort": {
              "type": "integer",
              "description": "The port number of the radius server."
            },
            "radiusSecret": {
              "type": "string",
              "description": "The password for the radius server."
            },
            "broadcastEnabled": {
              "type": "boolean",
              "description": "Indicates whether the SSID is broadcasting."
            },
            "separationEnabled": {
              "type": "boolean",
              "description": "Indicates whether channel separation is enabled on the network."
            },
            "vlanIsolation": {
              "type": "boolean",
              "description": "Sets VLAN isolation."
            },
            "vlanTagged": {
              "type": "boolean",
              "description": "Sets VLAN tagging."
            },
            "vlanID": {
              "type": "integer",
              "description": "Sets VLAN ID for tagging."
            }
          },
          "required": [
            "deviceId",
            "interface",
            "ssid",
            "enabled",
            "security",
            "broadcastEnabled",
            "separationEnabled",
            "vlanIsolation",
            "vlanTagged"
          ]
        },
        "ssidTwo": {
          "type": "string",
          "description": "Variable holding network configuration to be set on the CONTROLLER device.",
          "properties": {
            "deviceId": { "type": "string", "description": "The Device ID." },
            "interface": {
              "enum": ["24GHz", "5GHz", "BOTH"],
              "type": "string",
              "description": "The interface on which the network is broadcasting."
            },
            "ssid": {
              "type": "string",
              "description": "The SSID of the network."
            },
            "enabled": {
              "type": "boolean",
              "description": "Indicates whether the SSID is enabled or disabled."
            },
            "security": {
              "enum": [
                "OPEN",
                "WPA2PSK",
                "WPAPSKMIXED",
                "WPA2",
                "WPAMIXED",
                "WEP"
              ],
              "type": "string",
              "description": "The security protocol of the network."
            },
            "password": {
              "type": "string",
              "description": "The password for the network."
            },
            "radiusServer": {
              "type": "string",
              "description": "The IP address of the radius server."
            },
            "radiusPort": {
              "type": "integer",
              "description": "The port number of the radius server."
            },
            "radiusSecret": {
              "type": "string",
              "description": "The password for the radius server."
            },
            "broadcastEnabled": {
              "type": "boolean",
              "description": "Indicates whether the SSID is broadcasting."
            },
            "separationEnabled": {
              "type": "boolean",
              "description": "Indicates whether channel separation is enabled on the network."
            },
            "vlanIsolation": {
              "type": "boolean",
              "description": "Sets VLAN isolation."
            },
            "vlanTagged": {
              "type": "boolean",
              "description": "Sets VLAN tagging."
            },
            "vlanID": {
              "type": "integer",
              "description": "Sets VLAN ID for tagging."
            }
          },
          "required": [
            "deviceId",
            "interface",
            "ssid",
            "enabled",
            "security",
            "broadcastEnabled",
            "separationEnabled",
            "vlanIsolation",
            "vlanTagged"
          ]
        },
        "guestSsid": {
          "type": "string",
          "description": "Variable holding guest network configuration to be set on the CONTROLLER device.",
          "properties": {
            "deviceId": { "type": "string", "description": "The Device ID." },
            "interface": {
              "enum": ["24GHz", "5GHz", "BOTH"],
              "type": "string",
              "description": "The interface on which the network is broadcasting."
            },
            "opMode": {
              "enum": ["Mesh", "AP", "Repeater"],
              "type": "string",
              "description": "The WAP operation mode"
            },
            "ssid": {
              "type": "string",
              "description": "The SSID of the guest network."
            },
            "guestEnabled": {
              "type": "boolean",
              "description": "Indicates whether the guest network is enabled."
            },
            "broadcastEnabled": {
              "type": "boolean",
              "description": "Indicates whether the SSID is broadcasting."
            },
            "security": {
              "enum": ["OPEN", "WPA2PSK", "WPAPSKMIXED", "WEP"],
              "type": "string",
              "description": "The security protocol of the network."
            },
            "password": {
              "type": "string",
              "description": "The password for the network."
            },
            "separationEnabled": {
              "type": "boolean",
              "description": "Indicates whether channel separation is enabled on the network."
            },
            "gatewayIp": {
              "type": "string",
              "description": "The gateway IP address of the guest network."
            },
            "subnetMask": {
              "type": "string",
              "description": "The subnet mask of the guest network."
            },
            "startingIp": {
              "type": "string",
              "description": "The starting IP address to be used with automatic DHCP server settings."
            },
            "endingIp": {
              "type": "string",
              "description": "The ending IP address to be used with automatic DHCP server settings."
            },
            "vlanIsolation": {
              "type": "boolean",
              "description": "VLAN isolation."
            },
            "vlanTagged": { "type": "boolean", "description": "VLAN tagging." },
            "vlanID": {
              "type": "integer",
              "description": "VLAN ID for tagging."
            }
          },
          "required": [
            "deviceId",
            "interface",
            "opMode",
            "ssid",
            "guestEnabled",
            "broadcastEnabled",
            "security",
            "separationEnabled",
            "vlanIsolation",
            "vlanTagged"
          ]
        }
      },
      "required": [
        "locationId",
        "controllerId",
        "ssidOne",
        "ssidTwo",
        "guestSsid"
      ]
    },
    "Mesh_Transform_Location_To_Stand_AloneRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "Location id for devices desired to update."
        }
      },
      "required": ["locationId"]
    },
    "Mesh_Update_Operation_ModeRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "Location id for devices desired to update."
        },
        "opMode": {
          "type": "string",
          "description": "The operation mode that you would like to set the devices to."
        },
        "deviceIds": {
          "type": "string",
          "description": "Device ids for the devices to set opMode.  If switching to MESH opMode, opRole will be set to NODE"
        }
      },
      "required": ["locationId", "opMode", "deviceIds"]
    },
    "devicesThroughputRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "DeviceId for the device you'd like data for."
        },
        "endDate": {
          "type": "string",
          "description": "Max date to pull data up to. Format &quot;YYYY-MM-DDTHH:MM:SS.SSSZ&quot;"
        },
        "span": {
          "enum": ["day", "week"],
          "type": "string",
          "description": "How far back, from the endDate, to pull data for."
        },
        "env": {
          "enum": ["tablet", "mobile"],
          "type": "string",
          "description": "Based on the target type,"
        },
        "radio": {
          "enum": ["24GHz", "5GHz", "ALL"],
          "type": "string",
          "description": "Denotes the radio(s) being requested."
        }
      },
      "required": ["deviceId", "endDate", "span", "env"]
    },
    "DoorbellStatusGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "DoorbellStatusGet": {
      "properties": {
        "status": {
          "enum": ["Online", "Offline"],
          "type": "string",
          "description": "The status of the device."
        },
        "signalStrength": {
          "type": "string",
          "description": "Wifi Signal Strength (wifi model only)"
        },
        "ssid": {
          "type": "string",
          "description": "SSID connected to (wifi model only)"
        },
        "band": {
          "type": "string",
          "description": "Wifi radio band (wifi model only)"
        },
        "channel": {
          "type": "string",
          "description": "Wifi channel (wifi model only)"
        },
        "countryCode": {
          "type": "string",
          "description": "Country Code (wifi model only)"
        }
      },
      "required": ["status"]
    },
    "EpisodeAmplifierStatusGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "EpisodeAmplifierStatusGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update (ISO format)."
        },
        "uptime": {
          "type": "string",
          "description": "The duration of device operation."
        },
        "systemFault": {
          "type": "string",
          "description": "The fault state ('OK' or other)."
        },
        "deviceStatus": {
          "enum": ["ON", "STANDBY"],
          "type": "string",
          "description": "The device status option.,"
        },
        "voltageValue": {
          "enum": ["Safe", "Low", "Critical", "Invalid"],
          "type": "string",
          "description": "Indicates voltage status."
        },
        "tempValue": {
          "type": "number",
          "description": "The present device temperature."
        },
        "inputs": {
          "type": "array",
          "description": "Array of input channel statuses.",
          "items": {
            "type": "object",
            "properties": {
              "channel": {
                "type": "integer",
                "description": "The input channel number."
              },
              "channelFault": {
                "enum": ["OK", "FAULT"],
                "type": "string",
                "description": "The fault state ('OK' or other)."
              }
            },
            "required": ["channel", "channelFault"]
          }
        },
        "outputs": {
          "type": "array",
          "description": "Array of output channel status.",
          "items": {
            "type": "object",
            "properties": {
              "channel": {
                "type": "integer",
                "description": "The output channel number."
              },
              "channelFault": {
                "enum": ["OK", "FAULT"],
                "type": "string",
                "description": "The fault state ('OK' or other)."
              },
              "level": {
                "type": "number",
                "description": "The output level in percent."
              },
              "clipping": {
                "enum": ["true", "false", "recent"],
                "type": "string",
                "description": "Indicates whether the channel was recently clipping."
              }
            },
            "required": ["channel", "channelFault", "level", "clipping"]
          }
        }
      },
      "required": [
        "deviceId",
        "dateTime",
        "uptime",
        "systemFault",
        "deviceStatus",
        "voltageValue",
        "tempValue",
        "inputs",
        "outputs"
      ]
    },
    "FirmwareReadRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "Database GUID of device."
        }
      },
      "required": ["deviceId"]
    },
    "FirmwareRead": {
      "properties": {
        "current": {
          "properties": {
            "fileName": {
              "type": "string",
              "description": "Name of firmware file."
            },
            "releaseDate": {
              "type": "string",
              "description": "Date of release of firmware."
            },
            "releaseNotes": {
              "type": "string",
              "description": "Notes to accompany release of firmware."
            },
            "url": { "type": "string", "description": "URL of firmware file." },
            "version": {
              "type": "string",
              "description": "Version of firmware."
            }
          },
          "required": ["version"]
        },
        "upgrade": {
          "type": "object",
          "description": "The upgrade firmware object.",
          "properties": {
            "fileName": {
              "type": "string",
              "description": "Name of firmware file."
            },
            "releaseDate": {
              "type": "string",
              "description": "Date of release of firmware."
            },
            "releaseNotes": {
              "type": "string",
              "description": "Notes to accompany release of firmware."
            },
            "url": { "type": "string", "description": "URL of firmware file." },
            "version": {
              "type": "string",
              "description": "Version of firmware."
            }
          }
        }
      },
      "required": ["upgrade"]
    },
    "GroupsCreateRequest": {
      "properties": {
        "companyId": {
          "type": "string",
          "description": "Company you're creating the customer for.  Currently only allowed for your parent company.  ROOT PROPERTY"
        },
        "items": {
          "type": "array",
          "description": "Array of new groups.",
          "items": {
            "type": "object",
            "properties": {
              "name": { "type": "string", "description": "Name of the group." },
              "description": {
                "type": "string",
                "description": "Description of the group."
              },
              "hasAllCustomers": {
                "type": "boolean",
                "description": "Indicates if subject group has access to all customers of the parent Company."
              },
              "hasAdministrationActions": {
                "type": "boolean",
                "description": "Indicates if this group is given Administrative action permissions."
              },
              "hasDeleteActions": {
                "type": "boolean",
                "description": "Indicates if this group is given permission to Delete resources."
              },
              "hasSurveillanceActions": {
                "type": "boolean",
                "description": "Indicates if this group is given permission to view snapshots."
              }
            },
            "required": [
              "name",
              "description",
              "hasAllCustomers",
              "hasAdministrationActions",
              "hasDeleteActions",
              "hasSurveillanceActions"
            ]
          }
        }
      },
      "required": ["companyId", "items"]
    },
    "GroupsDeleteRequest": { "properties": {} },
    "GroupsRead": {
      "properties": {
        "groupId": { "type": "string", "description": "Id of the group." },
        "name": { "type": "string", "description": "Name of the group." },
        "description": {
          "type": "string",
          "description": "Description for the group."
        },
        "companyId": {
          "type": "string",
          "description": "Parent CompanyID for the group."
        },
        "userCount": {
          "type": "number",
          "description": "Count of users in this group."
        },
        "customerCount": {
          "type": "number",
          "description": "Count of customers assigned to this group"
        },
        "isOwner": {
          "type": "boolean",
          "description": "Indicates if this group is the owner group for a given Company."
        },
        "hasAllCustomers": {
          "type": "boolean",
          "description": "Indicates if subject group has access to all customers of the parent Company."
        },
        "customers": {
          "type": "array",
          "description": "If 'hasAllCustomers' is false, will list the customers available to the group.",
          "items": {
            "type": "object",
            "properties": {
              "customerId": {
                "type": "string",
                "description": "Id of the specific customer."
              },
              "hasAllLocations": {
                "type": "boolean",
                "description": "Indicates if the group gets access to all locations for this customer, or only specific."
              },
              "locations": {
                "type": "array",
                "description": "Locations specifically given access for this customer.",
                "items": {
                  "type": "object",
                  "properties": {
                    "locationId": {
                      "type": "string",
                      "description": "Id of the specific location."
                    }
                  },
                  "required": ["locationId"]
                }
              }
            },
            "required": ["customerId", "hasAllLocations", "locations"]
          }
        },
        "hasAdministrationActions": {
          "type": "boolean",
          "description": "Indicates if this group is given Administrative action permissions."
        },
        "hasDeleteActions": {
          "type": "boolean",
          "description": "Indicates if this group is given permission to Delete resources."
        },
        "hasSurveillanceActions": {
          "type": "boolean",
          "description": "Indicates if this group is given permission to view snapshots."
        },
        "canTransferOwnership": {
          "type": "boolean",
          "description": "Indicates if you're able to transfer Ownership for this group (Owner group only)"
        }
      },
      "required": [
        "groupId",
        "name",
        "description",
        "companyId",
        "userCount",
        "customerCount",
        "isOwner",
        "hasAllCustomers",
        "customers",
        "hasAdministrationActions",
        "hasDeleteActions",
        "hasSurveillanceActions",
        "canTransferOwnership"
      ]
    },
    "GroupsUpdateRequest": {
      "properties": {
        "items": {
          "type": "array",
          "description": "Array of group updates.",
          "items": {
            "type": "object",
            "properties": {
              "groupId": {
                "type": "string",
                "description": "ID of the group."
              },
              "name": {
                "type": "string",
                "description": "New name of the group."
              },
              "description": {
                "type": "string",
                "description": "The description of the group."
              },
              "hasAllCustomers": {
                "type": "boolean",
                "description": "Updated indicator as to whether or not the subject group has access to all customers of the parent Company."
              },
              "hasAdministrationActions": {
                "type": "boolean",
                "description": "Updated indicator as to whether or not this group is given Administrative action permissions."
              },
              "hasDeleteActions": {
                "type": "boolean",
                "description": "Updated indicator as to whether or not this group is given permission to Delete resources."
              },
              "hasSurveillanceActions": {
                "type": "boolean",
                "description": "Updated indicator as to whether or not this group is given permission to view snapshots."
              }
            },
            "required": ["groupId"]
          }
        }
      },
      "required": ["items"]
    },
    "GroupsCreateV2Request": {
      "properties": {
        "companyId": {
          "type": "string",
          "description": "Company you're creating the customer for.  Currently only allowed for your parent company.  ROOT PROPERTY"
        },
        "name": { "type": "string", "description": "New name of the group." },
        "description": {
          "type": "string",
          "description": "The description of the group."
        },
        "hasAllCustomers": {
          "type": "boolean",
          "description": "Updated indicator as to whether or not the subject group has access to all customers of the parent Company."
        },
        "hasAdministrationActions": {
          "type": "boolean",
          "description": "Updated indicator as to whether or not this group is given Administrative action permissions."
        },
        "hasDeleteActions": {
          "type": "boolean",
          "description": "Updated indicator as to whether or not this group is given permission to Delete resources."
        },
        "hasSurveillanceActions": {
          "type": "boolean",
          "description": "Updated indicator as to whether or not this group is given permission to view snapshots."
        },
        "customerIds": {
          "type": "array",
          "description": "The customers to set at an &quot;All Locations&quot; level.",
          "items": { "type": "string" }
        },
        "locationIds": {
          "type": "array",
          "description": "The locations to set at a &quot;Specific Locations&quot; level.  Their parent customers are implied.",
          "items": { "type": "string" }
        },
        "userIds": {
          "type": "array",
          "description": "The users to set.",
          "items": { "type": "string" }
        }
      },
      "required": [
        "companyId",
        "name",
        "description",
        "hasAllCustomers",
        "hasAdministrationActions",
        "hasDeleteActions",
        "hasSurveillanceActions",
        "customerIds",
        "locationIds",
        "userIds"
      ]
    },
    "GroupsUpdateV2Request": {
      "properties": {
        "groupId": { "type": "string", "description": "ID of the group." },
        "name": { "type": "string", "description": "New name of the group." },
        "description": {
          "type": "string",
          "description": "The description of the group."
        },
        "hasAllCustomers": {
          "type": "boolean",
          "description": "Updated indicator as to whether or not the subject group has access to all customers of the parent Company."
        },
        "hasAdministrationActions": {
          "type": "boolean",
          "description": "Updated indicator as to whether or not this group is given Administrative action permissions."
        },
        "hasDeleteActions": {
          "type": "boolean",
          "description": "Updated indicator as to whether or not this group is given permission to Delete resources."
        },
        "hasSurveillanceActions": {
          "type": "boolean",
          "description": "Updated indicator as to whether or not this group is given permission to view snapshots."
        },
        "customerIds": {
          "type": "array",
          "description": "The customers to set at an &quot;All Locations&quot; level.",
          "items": { "type": "string" }
        },
        "locationIds": {
          "type": "array",
          "description": "The locations to set at a &quot;Specific Locations&quot; level.  Their parent customers are implied.",
          "items": { "type": "string" }
        },
        "userIds": {
          "type": "array",
          "description": "The users to set.",
          "items": { "type": "string" }
        }
      },
      "required": [
        "groupId",
        "name",
        "description",
        "hasAllCustomers",
        "hasAdministrationActions",
        "hasDeleteActions",
        "hasSurveillanceActions",
        "customerIds",
        "locationIds",
        "userIds"
      ]
    },
    "GroupsSetCustomerAccessRequest": {
      "properties": {
        "groupIds": {
          "type": "array",
          "description": "The groups being set.",
          "items": { "type": "string" }
        },
        "customerIds": {
          "type": "array",
          "description": "The customers to set at an &quot;All Locations&quot; level.",
          "items": { "type": "string" }
        },
        "locationIds": {
          "type": "array",
          "description": "The locations to set at a &quot;Specific Locations&quot; level.  Their parent customers are implied.",
          "items": { "type": "string" }
        }
      },
      "required": ["groupIds", "customerIds", "locationIds"]
    },
    "GroupsSetUsersRequest": {
      "properties": {
        "groupIds": {
          "type": "array",
          "description": "The groups being set.",
          "items": { "type": "string" }
        },
        "userIds": {
          "type": "array",
          "description": "The users to set.",
          "items": { "type": "string" }
        }
      },
      "required": ["groupIds", "userIds"]
    },
    "HubForgetDeviceRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "ID (database GUID) of the device."
        }
      },
      "required": ["deviceId"]
    },
    "HubPerformActionRequest": {
      "properties": {
        "hubDeviceId": {
          "type": "string",
          "description": "ID of the HUB to perform the action."
        },
        "targetDeviceId": {
          "type": "string",
          "description": "ID of the device to perform the action on."
        },
        "protocol": {
          "type": "string",
          "description": "Protocol of the action."
        },
        "action": { "type": "string", "description": "Action to perform." }
      },
      "required": ["hubDeviceId", "targetDeviceId", "protocol", "action"]
    },
    "HubPeriodicServicesFrequencyGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The device ID." }
      },
      "required": ["deviceId"]
    },
    "HubPeriodicServicesFrequencyGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The device ID." },
        "deviceDiscovery": {
          "type": "object",
          "description": "Device discovery object.",
          "properties": {
            "frequency": {
              "type": "integer",
              "description": "The interval set for device discovery (in seconds)."
            },
            "isEnabled": {
              "type": "boolean",
              "description": "The status of device discovery."
            }
          },
          "required": ["frequency", "isEnabled"]
        },
        "speedTest": {
          "type": "object",
          "description": "Speed test object.",
          "properties": {
            "frequency": {
              "type": "integer",
              "description": "The interval set for speed test (in seconds)."
            },
            "isEnabled": {
              "type": "boolean",
              "description": "The status of speed test."
            }
          },
          "required": ["frequency", "isEnabled"]
        },
        "healthMonitor": {
          "type": "object",
          "description": "Health monitor object.",
          "properties": {
            "frequency": {
              "type": "integer",
              "description": "The interval set for health monitor (in seconds)."
            },
            "isEnabled": {
              "type": "boolean",
              "description": "The status of health monitor."
            }
          },
          "required": ["frequency", "isEnabled"]
        },
        "traceroute": {
          "type": "object",
          "description": "Traceroute object.",
          "properties": {
            "frequency": {
              "type": "integer",
              "description": "The interval set for traceroute (in seconds)."
            },
            "isEnabled": {
              "type": "boolean",
              "description": "The status of traceroute."
            }
          }
        }
      },
      "required": ["deviceId", "deviceDiscovery", "speedTest", "healthMonitor"]
    },
    "HubPeriodicServicesFrequencySetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The device ID." },
        "deviceDiscovery": {
          "type": "object",
          "description": "Device discovery object.",
          "properties": {
            "frequency": {
              "enum": ["3600", "28800", "86400"],
              "type": "integer",
              "description": "The interval set for device discovery (in seconds)."
            },
            "isEnabled": {
              "type": "boolean",
              "description": "The status of device discovery."
            }
          },
          "required": ["frequency", "isEnabled"]
        },
        "dashboardSpeedTest": {
          "type": "object",
          "description": "Speed test object.",
          "properties": {
            "frequency": {
              "enum": ["21600", "28800", "43200"],
              "type": "integer",
              "description": "The interval set for speed test (in seconds)."
            },
            "isEnabled": {
              "type": "boolean",
              "description": "The status of speed test."
            }
          },
          "required": ["frequency", "isEnabled"]
        },
        "healthMonitor": {
          "type": "object",
          "description": "Health monitor object.",
          "properties": {
            "frequency": {
              "enum": ["300", "3600"],
              "type": "integer",
              "description": "The interval set for health monitor (in seconds)."
            },
            "isEnabled": {
              "type": "boolean",
              "description": "The status of health monitor."
            }
          },
          "required": ["frequency", "isEnabled"]
        },
        "traceroute": {
          "type": "object",
          "description": "Traceroute object.",
          "properties": {
            "frequency": {
              "type": "integer",
              "description": "The interval set for traceroute (in seconds)."
            },
            "isEnabled": {
              "type": "boolean",
              "description": "The status of traceroute."
            }
          }
        }
      },
      "required": [
        "deviceId",
        "deviceDiscovery",
        "dashboardSpeedTest",
        "healthMonitor"
      ]
    },
    "HubPeriodicServicesFrequencySet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The device ID." }
      },
      "required": ["deviceId"]
    },
    "HubPersistDataPutRequest": {
      "properties": {
        "hubDeviceId": {
          "type": "string",
          "description": "The ID of the parent HUB."
        },
        "targetDeviceId": {
          "type": "string",
          "description": "The ID of the target device to set persist data for."
        },
        "persistData": {
          "type": "array",
          "description": "The key-value persist data to set.",
          "items": {
            "type": "object",
            "properties": {
              "protocol": {
                "type": "string",
                "description": "The protocol for the given persist data."
              },
              "property": {
                "type": "string",
                "description": "The persist data property name."
              },
              "value": {
                "type": "string",
                "description": "The persist data property value."
              }
            },
            "required": ["protocol", "property", "value"]
          }
        }
      },
      "required": ["hubDeviceId", "targetDeviceId", "persistData"]
    },
    "HubPersistDataPut": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The ID of the parent HUB."
        }
      },
      "required": ["deviceId"]
    },
    "HubPingHostRequest": {
      "properties": {
        "hubDeviceId": {
          "type": "string",
          "description": "ID of the HUB to perform the action."
        },
        "targetDeviceIds": {
          "type": "array",
          "description": "Array of database GUIDs of the devices to be scanned.",
          "items": { "type": "string" }
        },
        "detailedResponse": {
          "type": "boolean",
          "description": "Indicates if responses should be detailed.  False by default."
        },
        "numberOfAttempts": {
          "type": "integer",
          "description": "Number of ping iterations to be performed. 1 by default."
        }
      },
      "required": ["hubDeviceId", "targetDeviceIds"]
    },
    "HubPingHost": {
      "properties": {
        "pingHostResponse": {
          "properties": {
            "avgResponseTime": {
              "type": "integer",
              "description": "Pinged host average response time."
            },
            "ipAddress": {
              "type": "string",
              "description": "Pinged host ip address"
            },
            "isOnline": {
              "type": "boolean",
              "description": "Denotes pinged host online status."
            },
            "lastSeenTime": {
              "type": "string",
              "description": "Pinged host time last seen."
            },
            "lastPingTime": {
              "type": "string",
              "description": "Pinged host time last pinged."
            },
            "macAddress": {
              "type": "string",
              "description": "Pinged host MAC address."
            },
            "pingResponseList": {
              "type": "string",
              "description": "Ping response list."
            },
            "timeoutPercentage": {
              "type": "integer",
              "description": "Pinged host timeout percentage."
            },
            "uptime": { "type": "integer", "description": "Pinged host uptime" }
          },
          "required": [
            "avgResponseTime",
            "ipAddress",
            "isOnline",
            "lastSeenTime",
            "lastPingTime",
            "macAddress",
            "pingResponseList",
            "timeoutPercentage",
            "uptime"
          ]
        }
      }
    },
    "HubPortScanSettingsGetRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The device's device ID."
        },
        "selection": {
          "enum": ["DEFAULT", "CURRENT"],
          "type": "string",
          "description": "Indicates whether the hub will return the default or current list."
        }
      },
      "required": ["deviceId", "selection"]
    },
    "HubPortScanSettingsGet": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The device's device ID."
        },
        "ports": {
          "type": "array",
          "description": "Array of port objects.",
          "items": {
            "type": "object",
            "properties": {
              "port": {
                "type": "integer",
                "description": "The port number (1-65535)."
              },
              "desc": {
                "type": "string",
                "description": "The description of the port."
              },
              "protocol": {
                "enum": ["HTTP", "HTTPS", "TELNET", "SSH", "RAW"],
                "type": "string",
                "description": "The protocol to use with the port."
              },
              "default": {
                "type": "boolean",
                "description": "Indicates whether this port is one of the hub's default ports."
              }
            },
            "required": ["port", "desc", "protocol", "default"]
          }
        }
      },
      "required": ["deviceId", "ports"]
    },
    "HubPortScanSettingsSetRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The device's device ID."
        },
        "ports": {
          "type": "array",
          "description": "Array of port configuration objects.",
          "items": {
            "type": "object",
            "properties": {
              "port": {
                "type": "integer",
                "description": "The port number (1-65535)."
              },
              "desc": {
                "type": "string",
                "description": "The description of the port."
              },
              "protocol": {
                "enum": ["HTTP", "HTTPS", "TELNET", "SSH", "RAW"],
                "type": "string",
                "description": "The protocol to use with the port."
              }
            },
            "required": ["port", "desc", "protocol"]
          }
        }
      },
      "required": ["deviceId", "ports"]
    },
    "HubPortScanSettingsSet": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The device's device ID."
        }
      },
      "required": ["deviceId"]
    },
    "HubRebootDeviceRequest": {
      "properties": {
        "hubDeviceId": {
          "type": "string",
          "description": "The ID of the parent HUB."
        },
        "targetDeviceId": {
          "type": "string",
          "description": "The ID of the target device to reboot."
        }
      },
      "required": ["hubDeviceId", "targetDeviceId"]
    },
    "HubRebootDevice": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The ID of the parent HUB."
        }
      },
      "required": ["deviceId"]
    },
    "HubScanDeviceRequest": {
      "properties": {
        "hubDeviceId": {
          "type": "string",
          "description": "The ID of the parent HUB."
        },
        "targetDeviceId": {
          "type": "string",
          "description": "The ID of the target device to scan."
        }
      },
      "required": ["hubDeviceId", "targetDeviceId"]
    },
    "HubScanDevice": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The ID of the parent HUB."
        }
      },
      "required": ["deviceId"]
    },
    "HubStatusGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The device ID." }
      },
      "required": ["deviceId"]
    },
    "HubStatusGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The device ID." },
        "uptime": {
          "type": "integer",
          "description": "The system uptime in seconds."
        },
        "cpuUsage": {
          "type": "string",
          "description": "The HUB's CPU usage in percent."
        },
        "memoryFree": {
          "type": "string",
          "description": "The HUB's free memory in MB."
        },
        "memoryUsed": {
          "type": "string",
          "description": "The HUB's used memory in MB."
        },
        "lastDeviceDiscoveryTime": {
          "type": "string",
          "description": "The last time the HUB did a network scan for new devices, ISO date format."
        },
        "lastSpeedTestTime": {
          "type": "string",
          "description": "The last time the HUB did a speed time, ISO date format."
        }
      },
      "required": [
        "deviceId",
        "uptime",
        "cpuUsage",
        "memoryFree",
        "memoryUsed",
        "lastDeviceDiscoveryTime",
        "lastSpeedTestTime"
      ]
    },
    "HubVLANSettingsGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The device ID." }
      },
      "required": ["deviceId"]
    },
    "HubVLANSettingsGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The device ID." },
        "vlans": {
          "type": "array",
          "description": "Array of VLAN objects.",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "The VLAN ID number (2-4094)."
              },
              "ip": {
                "type": "string",
                "description": "The IP address of the VLAN."
              },
              "subnetMask": {
                "type": "string",
                "description": "The subnet mask of the VLAN."
              }
            },
            "required": ["id", "ip", "subnetMask"]
          }
        }
      },
      "required": ["deviceId", "vlans"]
    },
    "HubVLANSettingsSetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The device ID." },
        "vlans": {
          "type": "array",
          "description": "Array of VLAN objects.",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "The VLAN ID number (2-4094)."
              },
              "ip": {
                "type": "string",
                "description": "The IP address of the VLAN."
              },
              "subnetMask": {
                "type": "string",
                "description": "The subnet mask of the VLAN."
              }
            },
            "required": ["id", "ip", "subnetMask"]
          }
        }
      },
      "required": ["deviceId", "vlans"]
    },
    "HubVLANSettingsSet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The device ID." }
      },
      "required": ["deviceId"]
    },
    "DownloadLinkedResourcesRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "Location which resources we are getting."
        }
      },
      "required": ["locationId"]
    },
    "DownloadLinkedResources": {
      "properties": {
        "url": {
          "type": "string",
          "description": "The destination URL of the CSV file. The caller can issue an HTTPS GET to download at this URL."
        }
      },
      "required": ["url"]
    },
    "LinkedResourceCreateRequest": {
      "properties": {
        "name": { "type": "string", "description": "Name of resource." },
        "type": {
          "enum": ["link", "dir", "image", "file"],
          "type": "string",
          "description": "Type of resource. Can be only one of these values."
        },
        "url": { "type": "string", "description": "Url to the resource." },
        "locationId": {
          "type": "string",
          "description": "LocationId to which we are attaching resource."
        },
        "isFavorite": {
          "type": "boolean",
          "description": "Flag saying should we display it on top of list"
        }
      },
      "required": ["name", "type", "url", "locationId"]
    },
    "LinkedResourceDeleteRequest": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Linked resource Id to be deleted."
        },
        "locationId": {
          "type": "string",
          "description": "On which location we are deleting resource."
        }
      },
      "required": ["id", "locationId"]
    },
    "LinkedResourceReadRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "Location which resources we are getting."
        },
        "filter": {
          "enum": ["favourite"],
          "type": "string",
          "description": "Flag saying should we return only favourites."
        }
      },
      "required": ["locationId"]
    },
    "LinkedResourceRead": {
      "properties": {
        "count": {
          "type": "number",
          "description": "Total number of linked resources returned."
        },
        "items": {
          "type": "object",
          "description": "Array of returned objects.",
          "properties": {
            "linkedResourceId": {
              "type": "string",
              "description": "LinkedResource Id"
            },
            "name": { "type": "string", "description": "Resource name" },
            "type": {
              "enum": ["link", "dir", "image", "file"],
              "type": "string",
              "description": "Type of resource."
            }
          },
          "required": ["linkedResourceId", "name", "type"]
        },
        "locations": {
          "properties": {
            "url": { "type": "string", "description": "Url to resource." },
            "locationId": {
              "type": "string",
              "description": "Location where resources are attached."
            },
            "isFavorite": {
              "type": "boolean",
              "description": "Is favourite, showing should it be in top 5."
            },
            "lastUserModified": {
              "type": "boolean",
              "description": "Full name of user who last had modified it."
            },
            "dateModified": {
              "type": "boolean",
              "description": "Time when last modification was made."
            }
          },
          "required": [
            "url",
            "locationId",
            "isFavorite",
            "lastUserModified",
            "dateModified"
          ]
        }
      },
      "required": ["count", "items"]
    },
    "LinkedResourceUpdateRequest": {
      "properties": {
        "id": { "type": "string", "description": "Id of resource." },
        "name": { "type": "string", "description": "Name of resource." },
        "type": {
          "enum": ["link", "dir", "image", "file"],
          "type": "string",
          "description": "Type of resource. Can be only one of these values."
        },
        "url": { "type": "string", "description": "Url to the resource." },
        "locationId": {
          "type": "string",
          "description": "LocationId to which we are attaching resource."
        },
        "isFavorite": {
          "type": "boolean",
          "description": "Flag saying should we display it on top of list"
        }
      },
      "required": ["id", "name", "locationId"]
    },
    "LocationScanRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "Location to start a scan at."
        }
      },
      "required": ["locationId"]
    },
    "LocationsCreateRequest": {
      "properties": {
        "customerId": {
          "type": "string",
          "description": "Customer you're creating the location for.  Currently only allowed for your parent company's customers.  ROOT PROPERTY"
        },
        "items": {
          "type": "array",
          "description": "An array of location objects to be created.",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the location."
              },
              "ispName": {
                "type": "string",
                "description": "ISP Display Name."
              },
              "address": {
                "type": "string",
                "description": "Raw address field, used when no validated address can be found."
              },
              "geometry": {
                "type": "string",
                "description": "Object containing the latitude and longitude values for a verified address. If present, must contain lat/lng.",
                "properties": {
                  "lat": {
                    "type": "number",
                    "description": "Latitude for a verified address. (Required if geometry is provided)"
                  },
                  "lng": {
                    "type": "number",
                    "description": "Longitude for a verified address. (Required if geometry is provided)"
                  }
                }
              },
              "notes": {
                "type": "string",
                "description": "String of notes data - can be raw string, or stringified objects for 3rd party note libraries."
              },
              "jobCode": {
                "type": "string",
                "description": "User-defined job code for this location"
              },
              "timezoneId": {
                "type": "number",
                "description": "Time Zone Id from /v1/timezones"
              },
              "licenseType": {
                "enum": ["pro", "basic"],
                "type": "string",
                "description": "License Type for this location."
              }
            },
            "required": ["name"]
          }
        }
      },
      "required": ["customerId", "items"]
    },
    "LocationsDeleteRequest": {
      "properties": {
        "ids": {
          "type": "array",
          "description": "Location IDs to be deleted.",
          "items": { "type": "string" }
        },
        "unclaimDevices": {
          "type": "boolean",
          "description": "If specified and true, will unclaim devices.  Otherwise, devices are moved to inventory for re-assignment. If false or unspecified, devices owned by this location will be transferred to the parent-Dealer's inventory."
        }
      },
      "required": ["ids"]
    },
    "LocationsRead": {
      "properties": {
        "address": {
          "type": "string",
          "description": "Display name of the location's address."
        },
        "canDelete": {
          "type": "boolean",
          "description": "Indicates if your account has permissions to delete this location."
        },
        "canGrabSnapshots": {
          "type": "boolean",
          "description": "Indicates if your account has permissions to view snapshots for cameras at this location."
        },
        "canTransferToInventory": {
          "type": "boolean",
          "description": "Indicates if your account can transfer devices from this location to inventory."
        },
        "customerId": {
          "type": "string",
          "description": "ID of the parent customer, for filtering."
        },
        "customerName": {
          "type": "string",
          "description": "Name of the customer for this location."
        },
        "customerPhone": {
          "type": "string",
          "description": "Phone number of the customer."
        },
        "degradedDeviceCount": {
          "type": "number",
          "description": "The quantity of devices this customer has that are currently in communication with the cloud or a pro device but not both, to which the requesting Dealer has read access."
        },
        "deviceCount": {
          "type": "number",
          "description": "The quantity of devices this customer has, to which the requesting Dealer has read access."
        },
        "firmwareUpdateCount": {
          "type": "number",
          "description": "The quantity of devices this customer has that have one or more available firmware updates, to which the requesting Dealer has read access."
        },
        "geometry": {
          "type": "array",
          "description": "Object including the mapped lat / long for the given address, if the server is able to match.  If no match, will be NULL.",
          "items": {
            "type": "object",
            "properties": {
              "lat": {
                "type": "number",
                "description": "Latitude for a verified address. (Required if geometry is provided)"
              },
              "lng": {
                "type": "number",
                "description": "Longitude for a verified address. (Required if geometry is provided)"
              }
            }
          }
        },
        "groupCount": {
          "type": "number",
          "description": "The number of groups this customer is covered by."
        },
        "hasNotificationsEnabled": {
          "type": "boolean",
          "description": "Indicates if your account has notifications enabled for this location."
        },
        "hasScanDevice": {
          "type": "boolean",
          "description": "Indicates if this location contains a device with network-scan ability."
        },
        "hasVerifiedAddress": {
          "type": "boolean",
          "description": "Indicates if this location has a verified address (geometry), or not."
        },
        "hasVlanSupport": {
          "type": "boolean",
          "description": "Indicates if the hub device at this location has VLAN support (router-hubs do not support this feature)."
        },
        "hubDeviceId": {
          "type": "string",
          "description": "ID of the hub device at this location."
        },
        "isHubIdle": {
          "type": "boolean",
          "description": "Indicates if there is a hub at that location that is available for use (i.e. not currently scanning or otherwise busy)."
        },
        "isHubOnline": {
          "type": "boolean",
          "description": "Indicates if the hub device at this location is online."
        },
        "isMonitoredByOwnerOnly": {
          "type": "boolean",
          "description": "Indicates if the Owner group is the only group covering this location."
        },
        "isOffline": {
          "type": "boolean",
          "description": "Indicates if there are any offline devices at this location."
        },
        "isRouterOnline": {
          "type": "boolean",
          "description": "Indicates if router(s) is (are) currently communicating with the cloud."
        },
        "isScanning": {
          "type": "boolean",
          "description": "Indicates if this location is currently being scanned by a HUB-type device."
        },
        "isSharedIn": {
          "type": "boolean",
          "description": "Indicates if this location is external to your company, and shared to you."
        },
        "isSharedOut": {
          "type": "boolean",
          "description": "Indicates if this location is shared out to external users of other companies."
        },
        "isSsidManagementEnabled": {
          "type": "boolean",
          "description": "SSID Management enabled status"
        },
        "ispName": {
          "type": "string",
          "description": "Name of the ISP that provides internet to this location."
        },
        "jobCode": {
          "type": "string",
          "description": "User-defined job code for this location"
        },
        "licenseType": {
          "enum": ["basic", "pro"],
          "type": "string",
          "description": "License type for Customer."
        },
        "locationId": {
          "type": "string",
          "description": "Unique ID of the location."
        },
        "name": { "type": "string", "description": "Name of the location." },
        "notes": {
          "type": "string",
          "description": "String of notes data - can be raw string, or stringified objects for 3rd party note libraries."
        },
        "offlineDeviceCount": {
          "type": "number",
          "description": "The quantity of devices this customer has that are currently not in communication with the cloud, to which the requesting Dealer has read access."
        },
        "onlineDeviceCount": {
          "type": "number",
          "description": "The quantity of devices this customer has that are currently in communication with the cloud, to which the requesting Dealer has read access."
        },
        "ssidManagement": {
          "type": "array",
          "description": "SSID Management object",
          "items": {
            "type": "object",
            "properties": {
              "countryCode": {
                "type": "string",
                "description": "Indicates the 2-character country code for international devices at the location if all have the same value, otherwise blank."
              },
              "hasCapableDevices": {
                "type": "boolean",
                "description": "Indicates if location has capable devices"
              },
              "hasCompletedImport": {
                "type": "boolean",
                "description": "Indicates if location has completed importing settings."
              },
              "hasInternationalDevices": {
                "type": "boolean",
                "description": "Indicates if location has international devices"
              },
              "isCountryUnlocked": {
                "type": "boolean",
                "description": "Indicates if location has devices for which the country code can be changed"
              },
              "isImportInProgress": {
                "type": "boolean",
                "description": "Indicates if import is currently in progress"
              },
              "isPendingChanges": {
                "type": "boolean",
                "description": "Indicates if changes are pending."
              },
              "isPushInProgress": {
                "type": "boolean",
                "description": "Indicates if currently applying SSID Settings"
              },
              "lastImportDate": {
                "type": "string",
                "format": "date-time",
                "description": "Datestamp of last import"
              },
              "lastPushDate": {
                "type": "string",
                "format": "date-time",
                "description": "Datestamp of last push."
              }
            }
          }
        },
        "timeZoneOffsetMinutes": {
          "type": "number",
          "description": "Time Zone Offset from GMT in minutes."
        }
      },
      "required": [
        "canDelete",
        "canGrabSnapshots",
        "canTransferToInventory",
        "customerId",
        "customerName",
        "customerPhone",
        "degradedDeviceCount",
        "deviceCount",
        "firmwareUpdateCount",
        "groupCount",
        "hasNotificationsEnabled",
        "hasScanDevice",
        "hasVerifiedAddress",
        "hasVlanSupport",
        "hubDeviceId",
        "isHubIdle",
        "isHubOnline",
        "isMonitoredByOwnerOnly",
        "isOffline",
        "isRouterOnline",
        "isScanning",
        "isSharedIn",
        "isSharedOut",
        "isSsidManagementEnabled",
        "licenseType",
        "locationId",
        "name",
        "offlineDeviceCount",
        "onlineDeviceCount",
        "timeZoneOffsetMinutes"
      ]
    },
    "LocationsUpdateRequest": {
      "properties": {
        "items": {
          "type": "array",
          "description": "Array of location updates.",
          "items": {
            "type": "object",
            "properties": {
              "locationId": {
                "type": "string",
                "description": "Location to update"
              },
              "name": {
                "type": "string",
                "description": "Name of the customer"
              },
              "ispName": {
                "type": "string",
                "description": "ISP Display Name."
              },
              "address": {
                "type": "string",
                "description": "Raw address field, used when no validated address can be found."
              },
              "notes": {
                "type": "string",
                "description": "String of notes data - can be raw string, or stringified objects for 3rd party note libraries."
              },
              "geometry": {
                "type": "string",
                "description": "Object containing the latitude and longitude values for a verified address. If present, must contain lat/lng.",
                "properties": {
                  "lat": {
                    "type": "number",
                    "description": "Latitude for a verified address. (Required if geometry is provided)"
                  },
                  "lng": {
                    "type": "number",
                    "description": "Longitude for a verified address. (Required if geometry is provided)"
                  }
                }
              },
              "isSsidManagementEnabled": {
                "type": "number",
                "description": "Allows location to be opted-in to SSID Management."
              },
              "jobCode": {
                "type": "string",
                "description": "User-defined job code for this location"
              },
              "timezoneId": {
                "type": "number",
                "description": "Time Zone ID from the timezone api."
              }
            },
            "required": ["locationId"]
          }
        }
      },
      "required": ["items"]
    },
    "LocationsDashboardRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "Database GUID of location"
        }
      },
      "required": ["locationId"]
    },
    "LocationsDashboard": {
      "properties": {
        "canDisplayDHCPClientList": {
          "type": "boolean",
          "description": "Indicates if DHCP Client List should be rendered"
        },
        "canDisplaySpeedTest": {
          "type": "boolean",
          "description": "Indicates if speed test data should be rendered"
        },
        "canDisplayWirelessClientList": {
          "type": "boolean",
          "description": "Indicates if wireless client info should be rendered"
        },
        "connected": {
          "type": "integer",
          "description": "Number of connected devices"
        },
        "degraded": {
          "type": "integer",
          "description": "Number of degraded devices"
        },
        "disconnected": {
          "type": "integer",
          "description": "Number of disconnected devices"
        },
        "totalDevices": {
          "type": "integer",
          "description": "Number of devices at location (includes all devices)"
        },
        "firmwareUpdates": {
          "type": "integer",
          "description": "Number of devices with available firmware updates."
        },
        "routers": { "type": "integer", "description": "Number of Routers" },
        "switches": { "type": "integer", "description": "Number of switches" },
        "waps": { "type": "integer", "description": "Number of waps" },
        "publicIP": {
          "type": "string",
          "description": "The public IP address as provided by the HUB or ROUTER_HUB device."
        },
        "lastSpeedTestTime": {
          "type": "string",
          "description": "The last time a speed test was performed at this location, if it exists."
        },
        "lastDownload": {
          "type": "string",
          "description": "The download speed (Mbps) from that last speed test at this location, if it exists."
        },
        "lastUpload": {
          "type": "string",
          "description": "The upload speed (Mbps) from that last speed test at this location, if it exists."
        },
        "lastLatency": {
          "type": "number",
          "description": "The latency (ms) from that last speed test at this location, if it exists."
        },
        "wanLatency": {
          "type": "number",
          "description": "The latency (ms) from that last speed test at this location, if it exists. It is same as lastLatency"
        },
        "speedTestInaccurate": {
          "type": "boolean",
          "description": "Is the speed test inaccurate based on speed test devices network bandwidth capability, if it exists."
        },
        "speedTestDeviceName": {
          "type": "string",
          "description": "The name of device performing internet speed test."
        },
        "speedTestDeviceId": {
          "type": "string",
          "description": "The device id of device performing internet speed test."
        }
      },
      "required": [
        "canDisplayDHCPClientList",
        "canDisplaySpeedTest",
        "canDisplayWirelessClientList",
        "connected",
        "degraded",
        "disconnected",
        "totalDevices",
        "firmwareUpdates",
        "routers",
        "switches",
        "waps",
        "publicIP",
        "lastSpeedTestTime",
        "lastDownload",
        "lastUpload",
        "lastLatency",
        "wanLatency",
        "speedTestInaccurate",
        "speedTestDeviceName",
        "speedTestDeviceId"
      ]
    },
    "LocationsForgetInactiveRequest": {
      "properties": {
        "locationId": { "type": "string", "description": "ID of the location." }
      },
      "required": ["locationId"]
    },
    "LocationsGetProSettingsRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "Id of the location you want to update Pro settings for."
        }
      },
      "required": ["locationId"]
    },
    "LocationsGetProSettings": {
      "properties": {
        "deviceDiscovery": {
          "type": "array",
          "description": "Device discovery properties",
          "items": {
            "type": "object",
            "properties": {
              "deviceId": {
                "type": "string",
                "description": "The ID of the device that will scan the network to discover IP-enabled devices"
              },
              "frequency": {
                "enum": ["0", "3600", "28800", "86400"],
                "type": "integer",
                "description": "How often the network scan will occur (in seconds)"
              }
            },
            "required": ["deviceId", "frequency"]
          }
        },
        "healthMonitor": {
          "type": "array",
          "description": "Health monitor properties",
          "items": {
            "type": "object",
            "properties": {
              "deviceId": {
                "type": "string",
                "description": "The ID of the device that will monitor the health of devices"
              },
              "frequency": {
                "type": "integer",
                "description": "How often the health monitor will occur (in seconds)"
              }
            },
            "required": ["deviceId", "frequency"]
          }
        },
        "speedTest": {
          "type": "array",
          "description": "Network speed test properties",
          "items": {
            "type": "object",
            "properties": {
              "deviceId": {
                "type": "string",
                "description": "The ID of the device that will perform the network speed test"
              },
              "frequency": {
                "enum": ["0", "21600", "28800", "43200"],
                "type": "integer",
                "description": "How often the speed test will occur (in seconds)"
              }
            },
            "required": ["deviceId", "frequency"]
          }
        }
      },
      "required": ["deviceDiscovery", "healthMonitor", "speedTest"]
    },
    "LocationsSetProSettingsRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "Id of the location you want to update Pro settings for."
        },
        "deviceDiscovery": {
          "type": "array",
          "description": "Device discovery properties",
          "items": {
            "type": "object",
            "properties": {
              "deviceId": {
                "type": "string",
                "description": "The ID of the device that will scan the network to discover IP-enabled devices"
              },
              "frequency": {
                "enum": ["0", "3600", "28800", "86400"],
                "type": "integer",
                "description": "How often the network scan will occur (in seconds). Use 0 to disable the service."
              }
            },
            "required": ["deviceId", "frequency"]
          }
        },
        "healthMonitor": {
          "type": "array",
          "description": "Health monitor properties",
          "items": {
            "type": "object",
            "properties": {
              "deviceId": {
                "type": "string",
                "description": "The ID of the device that will monitor the health of devices"
              }
            },
            "required": ["deviceId"]
          }
        },
        "speedTest": {
          "type": "array",
          "description": "Network speed test properties",
          "items": {
            "type": "object",
            "properties": {
              "deviceId": {
                "type": "string",
                "description": "The ID of the device that will perform the network speed test"
              },
              "frequency": {
                "enum": ["0", "21600", "28800", "43200"],
                "type": "integer",
                "description": "How often the speed test will occur (in seconds). Use 0 to disable the service."
              }
            },
            "required": ["deviceId", "frequency"]
          }
        }
      },
      "required": [
        "locationId",
        "deviceDiscovery",
        "healthMonitor",
        "speedTest"
      ]
    },
    "LocationsHeaderReadRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "Id of the location you want to get data."
        }
      },
      "required": ["locationId"]
    },
    "LocationsHeaderRead": {
      "properties": {
        "hasVlanSupport": {
          "type": "boolean",
          "description": "Indicates if the hub device at this location has VLAN support (router-hubs do not support this feature)."
        },
        "hubDeviceId": {
          "type": "string",
          "description": "ID of the hub device at this location."
        },
        "isHubIdle": {
          "type": "boolean",
          "description": "Indicates if there is a hub at that location that is available for use (i.e. not currently scanning or otherwise busy)."
        },
        "isHubOnline": {
          "type": "boolean",
          "description": "Indicates if the hub device at this location is online."
        },
        "isRouterOnline": {
          "type": "boolean",
          "description": "Indicates if router(s) is (are) currently communicating with the cloud."
        },
        "isScanning": {
          "type": "boolean",
          "description": "Indicates if this location is currently being scanned by a HUB-type device."
        },
        "ssidManagement": {
          "type": "array",
          "description": "SSID Management object",
          "items": {
            "type": "object",
            "properties": {
              "countryCode": {
                "type": "string",
                "description": "Indicates the 2-character country code for international devices at the location if all have the same value, otherwise blank."
              },
              "hasCapableDevices": {
                "type": "boolean",
                "description": "Indicates if location has capable devices"
              },
              "hasCompletedImport": {
                "type": "boolean",
                "description": "Indicates if location has completed importing settings."
              },
              "hasInternationalDevices": {
                "type": "boolean",
                "description": "Indicates if location has international devices"
              },
              "isCountryUnlocked": {
                "type": "boolean",
                "description": "Indicates if location has devices for which the country code can be changed"
              },
              "isImportInProgress": {
                "type": "boolean",
                "description": "Indicates if import is currently in progress"
              },
              "isPendingChanges": {
                "type": "boolean",
                "description": "Indicates if changes are pending."
              },
              "isPushInProgress": {
                "type": "boolean",
                "description": "Indicates if currently applying SSID Settings"
              },
              "lastImportDate": {
                "type": "string",
                "format": "date-time",
                "description": "Datestamp of last import"
              },
              "lastPushDate": {
                "type": "string",
                "format": "date-time",
                "description": "Datestamp of last push."
              }
            }
          }
        }
      },
      "required": [
        "hasVlanSupport",
        "hubDeviceId",
        "isHubIdle",
        "isHubOnline",
        "isRouterOnline",
        "isScanning"
      ]
    },
    "LocationsNetworkClientListsRequest": {
      "properties": {
        "locationId": { "type": "string", "description": "ID of location" }
      }
    },
    "LocationsNetworkClientLists": {
      "properties": {
        "networkDevices": {
          "type": "array",
          "description": "List of device objects.",
          "items": {
            "type": "object",
            "properties": {
              "deviceId": {
                "type": "string",
                "description": "ID of device record."
              },
              "macAddress": {
                "type": "string",
                "description": "MAC Address of device."
              },
              "deviceName": {
                "type": "string",
                "description": "Name of device."
              },
              "type": {
                "enum": ["WAP", "ROUTER", "ROUTERHUB"],
                "type": "string",
                "description": "Type of device."
              },
              "connected": {
                "type": "string",
                "description": "Indicates if device is currently connected as reported by the database."
              }
            },
            "required": [
              "deviceId",
              "macAddress",
              "deviceName",
              "type",
              "connected"
            ]
          }
        },
        "wired": {
          "type": "array",
          "description": "List of wired client objects.",
          "items": {
            "type": "object",
            "properties": {
              "Name": {
                "type": "string",
                "description": "Name of client device"
              },
              "Ip": {
                "type": "string",
                "description": "IP address of client device"
              },
              "Mac": {
                "type": "string",
                "description": "MAC address of client device"
              },
              "Mfg": {
                "type": "string",
                "description": "Manufacture or client device"
              },
              "Res": {
                "type": "boolean",
                "description": "If DHCP is reserved for this client device : true."
              },
              "Online": {
                "type": "boolean",
                "description": "If device is currently online : true."
              },
              "Source": {
                "type": "string",
                "description": "Name of device that reported this client device"
              },
              "SourceMac": {
                "type": "string",
                "description": "MAC address of device that reported this client device."
              },
              "SourceType": {
                "enum": ["WAP", "ROUTER", "ROUTERHUB"],
                "type": "string",
                "description": "Type of device that is reporting this client device."
              }
            },
            "required": [
              "Name",
              "Ip",
              "Mac",
              "Mfg",
              "Res",
              "Online",
              "Source",
              "SourceMac",
              "SourceType"
            ]
          }
        },
        "wireless": {
          "type": "array",
          "description": "List of wired client objects.",
          "items": {
            "type": "object",
            "properties": {
              "Name": {
                "type": "string",
                "description": "Name of client device"
              },
              "Ip": {
                "type": "string",
                "description": "IP address of client device"
              },
              "Mac": {
                "type": "string",
                "description": "MAC address of client device"
              },
              "Mfg": {
                "type": "string",
                "description": "Manufacture or client device"
              },
              "OS": {
                "type": "string",
                "description": "Operating system of client device"
              },
              "Int": {
                "type": "string",
                "description": "Network interface of client device (i.e 2.4G, 5G"
              },
              "Ssid": {
                "type": "string",
                "description": "SSID to which client device is connected."
              },
              "Rssi": {
                "type": "number",
                "description": "Received signal strength indicator."
              },
              "Rx": { "type": "number", "description": "Receive bytes." },
              "Tx": { "type": "number", "description": "Transmit bytes." },
              "Source": {
                "type": "string",
                "description": "Name of device that reported this client device"
              },
              "SourceMac": {
                "type": "string",
                "description": "MAC address of device that reported this client device."
              },
              "SourceType": {
                "enum": ["WAP", "ROUTER", "ROUTERHUB"],
                "type": "string",
                "description": "Type of device that is reporting this client device."
              },
              "wirelessProfileName": {
                "type": "string",
                "description": "Name of wirelessProfile to which this device belongs."
              }
            },
            "required": [
              "Name",
              "Ip",
              "Mac",
              "Mfg",
              "OS",
              "Int",
              "Ssid",
              "Rssi",
              "Rx",
              "Tx",
              "Source",
              "SourceMac",
              "SourceType"
            ]
          }
        }
      },
      "required": ["networkDevices", "wired", "wireless"]
    },
    "LocationsNotificationsRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "Id of the location you want to update notification settings for."
        },
        "enable": {
          "type": "boolean",
          "description": "If you want to ENABLE or DISABLE the notifications for this location."
        }
      },
      "required": ["locationId", "enable"]
    },
    "LocationsReadV2Request": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "Id of the location you want to get data."
        },
        "customerId": {
          "type": "string",
          "description": "Id of the customer you want to get data. Use only one of these 2!"
        },
        "offset": {
          "type": "number",
          "description": "offset from start to get items"
        },
        "limit": {
          "type": "number",
          "description": "limit of items (default 1)"
        }
      },
      "required": ["locationId", "customerId"]
    },
    "LocationsReadV2": {
      "properties": {
        "totalCount": {
          "type": "string",
          "description": "Number of total records for applied filter. Only if customerId is used as param."
        },
        "items": {
          "type": "array",
          "description": "Array of returned values.",
          "items": { "type": "object" }
        },
        "address": {
          "type": "string",
          "description": "Display name of the location's address."
        },
        "canDelete": {
          "type": "boolean",
          "description": "Indicates if your account has permissions to delete this location."
        },
        "canGrabSnapshots": {
          "type": "boolean",
          "description": "Indicates if your account has permissions to view snapshots for cameras at this location."
        },
        "customerId": {
          "type": "string",
          "description": "ID of the parent customer, for filtering."
        },
        "customerName": {
          "type": "string",
          "description": "Name of the customer for this location."
        },
        "firmwareUpdateCount": {
          "type": "number",
          "description": "The quantity of devices this customer has that have one or more available firmware updates, to which the requesting Dealer has read access."
        },
        "deviceCount": {
          "type": "number",
          "description": "The quantity of devices this customer has, to which the requesting Dealer has read access."
        },
        "geometry": {
          "type": "array",
          "description": "Object including the mapped lat / long for the given address, if the server is able to match.  If no match, will be NULL.",
          "items": {
            "type": "object",
            "properties": {
              "lat": {
                "type": "number",
                "description": "Latitude for a verified address. (Required if geometry is provided)"
              },
              "lng": {
                "type": "number",
                "description": "Longitude for a verified address. (Required if geometry is provided)"
              }
            }
          }
        },
        "groupCount": {
          "type": "number",
          "description": "The number of groups this customer is covered by."
        },
        "hasNotificationsEnabled": {
          "type": "boolean",
          "description": "Indicates if your account has notifications enabled for this location."
        },
        "isMonitoredByOwnerOnly": {
          "type": "boolean",
          "description": "Indicates if the Owner group is the only group covering this location."
        },
        "isOffline": {
          "type": "boolean",
          "description": "Indicates if there are any offline devices at this location."
        },
        "isSharedIn": {
          "type": "boolean",
          "description": "Indicates if this location is external to your company, and shared to you."
        },
        "isSharedOut": {
          "type": "boolean",
          "description": "Indicates if this location is shared out to external users of other companies."
        },
        "ispName": {
          "type": "string",
          "description": "Name of the ISP that provides internet to this location."
        },
        "jobCode": {
          "type": "string",
          "description": "User-defined job code for this location"
        },
        "licenseType": {
          "enum": ["basic", "pro"],
          "type": "string",
          "description": "License type for Customer."
        },
        "locationId": {
          "type": "string",
          "description": "Unique ID of the location."
        },
        "name": { "type": "string", "description": "Name of the location." },
        "onlineDeviceCount": {
          "type": "number",
          "description": "The quantity of devices this customer has that are currently in communication with the cloud, to which the requesting Dealer has read access."
        },
        "timeZoneOffsetMinutes": {
          "type": "number",
          "description": "Time Zone Offset from GMT in minutes."
        },
        "timeZoneId": { "type": "number", "description": "Id of time zone." }
      },
      "required": [
        "items",
        "canDelete",
        "canGrabSnapshots",
        "customerId",
        "customerName",
        "firmwareUpdateCount",
        "deviceCount",
        "groupCount",
        "hasNotificationsEnabled",
        "isMonitoredByOwnerOnly",
        "isOffline",
        "isSharedIn",
        "isSharedOut",
        "licenseType",
        "locationId",
        "name",
        "onlineDeviceCount",
        "timeZoneOffsetMinutes",
        "timeZoneId"
      ]
    },
    "LocationsSetGroupsRequest": {
      "properties": {
        "locationIds": {
          "type": "array",
          "description": "The locations being updated.",
          "items": { "type": "string" }
        },
        "groupIds": {
          "type": "array",
          "description": "The groups to set.",
          "items": { "type": "string" }
        }
      },
      "required": ["locationIds", "groupIds"]
    },
    "LocationsSimpleRead": {
      "properties": {
        "address": {
          "type": "string",
          "description": "Display name of the location's address."
        },
        "canDelete": {
          "type": "boolean",
          "description": "Indicates if your account has permissions to delete this location."
        },
        "canGrabSnapshots": {
          "type": "boolean",
          "description": "Indicates if your account has permissions to view snapshots for cameras at this location."
        },
        "canTransferToInventory": {
          "type": "boolean",
          "description": "Indicates if your account can transfer devices from this location to inventory."
        },
        "customerId": {
          "type": "string",
          "description": "ID of the parent customer, for filtering."
        },
        "customerName": {
          "type": "string",
          "description": "Name of the customer for this location."
        },
        "customerPhone": {
          "type": "string",
          "description": "Phone number of the customer."
        },
        "degradedDeviceCount": {
          "type": "number",
          "description": "The quantity of devices this customer has that are currently in communication with the cloud or a pro device but not both, to which the requesting Dealer has read access."
        },
        "deviceCount": {
          "type": "number",
          "description": "The quantity of devices this customer has, to which the requesting Dealer has read access."
        },
        "firmwareUpdateCount": {
          "type": "number",
          "description": "The quantity of devices this customer has that have one or more available firmware updates, to which the requesting Dealer has read access."
        },
        "geometry": {
          "type": "array",
          "description": "Object including the mapped lat / long for the given address, if the server is able to match.  If no match, will be NULL.",
          "items": {
            "type": "object",
            "properties": {
              "lat": {
                "type": "number",
                "description": "Latitude for a verified address. (Required if geometry is provided)"
              },
              "lng": {
                "type": "number",
                "description": "Longitude for a verified address. (Required if geometry is provided)"
              }
            }
          }
        },
        "groupCount": {
          "type": "number",
          "description": "The number of groups this customer is covered by."
        },
        "hasNotificationsEnabled": {
          "type": "boolean",
          "description": "Indicates if your account has notifications enabled for this location."
        },
        "hasVerifiedAddress": {
          "type": "boolean",
          "description": "Indicates if this location has a verified address (geometry), or not."
        },
        "isMonitoredByOwnerOnly": {
          "type": "boolean",
          "description": "Indicates if the Owner group is the only group covering this location."
        },
        "isOffline": {
          "type": "boolean",
          "description": "Indicates if there are any offline devices at this location."
        },
        "isSharedIn": {
          "type": "boolean",
          "description": "Indicates if this location is external to your company, and shared to you."
        },
        "isSharedOut": {
          "type": "boolean",
          "description": "Indicates if this location is shared out to external users of other companies."
        },
        "isSsidManagementEnabled": {
          "type": "boolean",
          "description": "SSID Management enabled status"
        },
        "ispName": {
          "type": "string",
          "description": "Name of the ISP that provides internet to this location."
        },
        "jobCode": {
          "type": "string",
          "description": "User-defined job code for this location"
        },
        "licenseType": {
          "enum": ["basic", "pro"],
          "type": "string",
          "description": "License type for Customer."
        },
        "locationId": {
          "type": "string",
          "description": "Unique ID of the location."
        },
        "name": { "type": "string", "description": "Name of the location." },
        "notes": {
          "type": "string",
          "description": "String of notes data - can be raw string, or stringified objects for 3rd party note libraries."
        },
        "offlineDeviceCount": {
          "type": "number",
          "description": "The quantity of devices this customer has that are currently not in communication with the cloud, to which the requesting Dealer has read access."
        },
        "onlineDeviceCount": {
          "type": "number",
          "description": "The quantity of devices this customer has that are currently in communication with the cloud, to which the requesting Dealer has read access."
        },
        "timeZoneOffsetMinutes": {
          "type": "number",
          "description": "Time Zone Offset from GMT in minutes."
        }
      },
      "required": [
        "canDelete",
        "canGrabSnapshots",
        "canTransferToInventory",
        "customerId",
        "customerName",
        "customerPhone",
        "degradedDeviceCount",
        "deviceCount",
        "firmwareUpdateCount",
        "groupCount",
        "hasNotificationsEnabled",
        "hasVerifiedAddress",
        "isMonitoredByOwnerOnly",
        "isOffline",
        "isSharedIn",
        "isSharedOut",
        "isSsidManagementEnabled",
        "licenseType",
        "locationId",
        "name",
        "offlineDeviceCount",
        "onlineDeviceCount",
        "timeZoneOffsetMinutes"
      ]
    },
    "LocationsSpeedTestGetRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "Location to gather results for."
        }
      },
      "required": ["locationId"]
    },
    "LocationsSpeedTestGet": {
      "properties": {
        "data": {
          "type": "array",
          "description": "Array of speed test results from this location sorted by create date ascending.",
          "items": {
            "type": "object",
            "properties": {
              "createdAt": {
                "type": "string",
                "description": "The time this speed test was run."
              },
              "download": {
                "type": "number",
                "description": "The download speed (Mbps) for this speed test."
              },
              "latency": {
                "type": "number",
                "description": "The latency (ms) for this speed test."
              },
              "upload": {
                "type": "number",
                "description": "The upload speed (Mbps) for this speed test."
              }
            },
            "required": ["createdAt", "download", "latency", "upload"]
          }
        }
      },
      "required": ["data"]
    },
    "LocationsSpeedTestPostRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "Location to start a scan at."
        }
      },
      "required": ["locationId"]
    },
    "LocationsSpeedTestPost": {
      "properties": {
        "lastTestTime": {
          "type": "string",
          "description": "Time of speedtest."
        },
        "publicIP": { "type": "string", "description": "Public IP" },
        "downloadSpeed": {
          "type": "string",
          "description": "Download speed in Mbps"
        },
        "uploadSpeed": {
          "type": "string",
          "description": "Upload speed in Mbps"
        },
        "latencyTime": { "type": "string", "description": "Latency in MS" }
      },
      "required": [
        "lastTestTime",
        "publicIP",
        "downloadSpeed",
        "uploadSpeed",
        "latencyTime"
      ]
    },
    "LocationsSummaryRead": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "Unique ID of the location."
        },
        "name": { "type": "string", "description": "Name of the location." },
        "address": {
          "type": "string",
          "description": "Display name of the location's address."
        },
        "customerId": {
          "type": "string",
          "description": "ID of the parent customer, for filtering."
        },
        "customerName": {
          "type": "string",
          "description": "Name of the customer for this location."
        },
        "ispName": {
          "type": "string",
          "description": "Name of the ISP that provides internet to this location."
        },
        "notes": {
          "type": "string",
          "description": "String of notes data - can be raw string, or stringified objects for 3rd party note libraries."
        }
      },
      "required": ["locationId", "name", "customerId", "customerName"]
    },
    "MoreLocationsRequest": {
      "properties": {
        "customerId": {
          "type": "number",
          "description": "customerId for more-locations page"
        },
        "offset": {
          "type": "number",
          "description": "offset from start to get items"
        },
        "limit": {
          "type": "number",
          "description": "limit of items (default 10)"
        },
        "filter": {
          "type": "string",
          "description": "filtering by all, connected, disconnected. Example : filter=connected:true, filter=connected:false or you can omit it. If you want multiple sorts use this: update:desc,address:asc"
        },
        "search": {
          "type": "string",
          "description": "filtering by part of the name. Example : search=lo -&gt; it will return locations with 'lo' chars in a name."
        },
        "sort": {
          "enum": ["name", "status", "name", "isp", "address", "update"],
          "type": "string",
          "description": "sort by name, status, name, isp, address, update. It can be ascending or descending. Example : sort=name:asc or sort=status:desc"
        }
      },
      "required": ["customerId"]
    },
    "MoreLocations": {
      "properties": {
        "totalLocations": {
          "type": "number",
          "description": "Total number of customer locations user has access to."
        },
        "locations": {
          "type": "object",
          "description": "Locations array of all locations under customer (in alphabetical by name)",
          "properties": {
            "locationId": { "type": "string", "description": "Location Id" },
            "name": { "type": "string", "description": "Location Name" },
            "canDelete": {
              "type": "boolean",
              "description": "Can Delete Location"
            },
            "licenseType": {
              "enum": ["basic", "pro"],
              "type": "string",
              "description": "License of location"
            },
            "address": { "type": "string", "description": "Location Address" },
            "hasVerifiedAddress": {
              "type": "boolean",
              "description": "Is Location Address verified"
            },
            "hasNotificationsEnabled": {
              "type": "boolean",
              "description": "Are notifications enabled by user for Location"
            },
            "hasFirmwareUpdates": {
              "type": "boolean",
              "description": "Are there any firmware updates available"
            },
            "offlineDeviceCount": {
              "type": "number",
              "description": "Offline device count at location"
            },
            "jobCode": {
              "type": "string",
              "description": "Job code if one exists"
            },
            "ispName": {
              "type": "string",
              "description": "ISP name if one exists &quot;totalCount&quot;: 1, &quot;offset&quot;: 0, &quot;limit&quot;: 1"
            }
          },
          "required": [
            "locationId",
            "name",
            "canDelete",
            "licenseType",
            "address",
            "hasVerifiedAddress",
            "hasNotificationsEnabled",
            "hasFirmwareUpdates",
            "offlineDeviceCount"
          ]
        }
      },
      "required": ["totalLocations", "locations"]
    },
    "RoomsCreateRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "Location you're creating the room at."
        },
        "room": {
          "type": "object",
          "description": "An object containing the room data.",
          "properties": {
            "name": { "type": "string", "description": "Name of the room." },
            "order": {
              "type": "string",
              "description": "Order to display the room in the UI (minimum 1)."
            }
          },
          "required": ["name", "order"]
        }
      },
      "required": ["locationId", "room"]
    },
    "RoomsCreate": {
      "properties": {
        "id": { "type": "string", "description": "Id for new room." }
      },
      "required": ["id"]
    },
    "RoomsDeleteRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "Location you're deleting the room at."
        },
        "roomId": { "type": "string", "description": "Room id." }
      },
      "required": ["locationId", "roomId"]
    },
    "RoomsReadRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "Location containing the rooms you want to get."
        }
      },
      "required": ["locationId"]
    },
    "RoomsRead": {
      "properties": {
        "count": {
          "type": "number",
          "description": "Number of rooms returned."
        },
        "items": {
          "type": "array",
          "description": "Array of room objects.",
          "items": {
            "type": "object",
            "properties": {
              "id": { "type": "string", "description": "Room id." },
              "name": { "type": "string", "description": "Room name." },
              "order": {
                "type": "number",
                "description": "Order the room is displayed in the UI."
              }
            },
            "required": ["id", "name", "order"]
          }
        }
      },
      "required": ["count", "items"]
    },
    "RoomsUpdateRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "Location you're creating the room at."
        },
        "room": {
          "type": "object",
          "description": "An object containing the room data.",
          "properties": {
            "id": { "type": "string", "description": "Room id." },
            "name": { "type": "string", "description": "Name of the room." },
            "order": {
              "type": "string",
              "description": "Order to display the room in the UI (minimum 1)."
            }
          },
          "required": ["id"]
        }
      },
      "required": ["locationId", "room"]
    },
    "UsersLocationsCoverage": {
      "properties": {
        "address": {
          "type": "string",
          "description": "Display name of the location's address."
        },
        "canDelete": {
          "type": "boolean",
          "description": "Indicates if your account has permissions to delete this location."
        },
        "canGrabSnapshots": {
          "type": "boolean",
          "description": "Indicates if your account has permissions to view snapshots for cameras at this location."
        },
        "customerId": {
          "type": "string",
          "description": "ID of the parent customer, for filtering."
        },
        "customerName": {
          "type": "string",
          "description": "Name of the customer for this location."
        },
        "firmwareUpdateCount": {
          "type": "number",
          "description": "The quantity of devices this customer has that have one or more available firmware updates, to which the requesting Dealer has read access."
        },
        "deviceCount": {
          "type": "number",
          "description": "The quantity of devices this customer has, to which the requesting Dealer has read access."
        },
        "geometry": {
          "type": "array",
          "description": "Object including the mapped lat / long for the given address, if the server is able to match.  If no match, will be NULL.",
          "items": {
            "type": "object",
            "properties": {
              "lat": {
                "type": "number",
                "description": "Latitude for a verified address. (Required if geometry is provided)"
              },
              "lng": {
                "type": "number",
                "description": "Longitude for a verified address. (Required if geometry is provided)"
              }
            }
          }
        },
        "groupCount": {
          "type": "number",
          "description": "The number of groups this customer is covered by."
        },
        "hasNotificationsEnabled": {
          "type": "boolean",
          "description": "Indicates if your account has notifications enabled for this location."
        },
        "isMonitoredByOwnerOnly": {
          "type": "boolean",
          "description": "Indicates if the Owner group is the only group covering this location."
        },
        "isOffline": {
          "type": "boolean",
          "description": "Indicates if there are any offline devices at this location."
        },
        "isSharedIn": {
          "type": "boolean",
          "description": "Indicates if this location is external to your company, and shared to you."
        },
        "isSharedOut": {
          "type": "boolean",
          "description": "Indicates if this location is shared out to external users of other companies."
        },
        "ispName": {
          "type": "string",
          "description": "Name of the ISP that provides internet to this location."
        },
        "jobCode": {
          "type": "string",
          "description": "User-defined job code for this location"
        },
        "licenseType": {
          "enum": ["basic", "pro"],
          "type": "string",
          "description": "License type for Customer."
        },
        "locationId": {
          "type": "string",
          "description": "Unique ID of the location."
        },
        "name": { "type": "string", "description": "Name of the location." },
        "onlineDeviceCount": {
          "type": "number",
          "description": "The quantity of devices this customer has that are currently in communication with the cloud, to which the requesting Dealer has read access."
        },
        "timeZoneOffsetMinutes": {
          "type": "number",
          "description": "Time Zone Offset from GMT in minutes."
        },
        "timeZoneId": { "type": "number", "description": "Id of time zone." }
      },
      "required": [
        "canDelete",
        "canGrabSnapshots",
        "customerId",
        "customerName",
        "firmwareUpdateCount",
        "deviceCount",
        "groupCount",
        "hasNotificationsEnabled",
        "isMonitoredByOwnerOnly",
        "isOffline",
        "isSharedIn",
        "isSharedOut",
        "licenseType",
        "locationId",
        "name",
        "onlineDeviceCount",
        "timeZoneOffsetMinutes",
        "timeZoneId"
      ]
    },
    "UserNextStop": {
      "properties": {
        "cannyToken": { "type": "string", "description": "Canny token." },
        "nextActionType": {
          "type": "string",
          "description": "The next step for this user."
        },
        "isMigratedToCognito": {
          "type": "boolean",
          "description": "This user has been migated to Cognito for login."
        },
        "hasLoggedInViaCognito": {
          "type": "boolean",
          "description": "This user has logged in via Cognito before. (If false, and isMigratedToCognito is true, this is the first time the user has logged in via Cognito.)"
        },
        "mfaEnabled": {
          "type": "boolean",
          "description": "From an OvrC perspective, this user may have MFA enabled."
        },
        "mfaMethod": {
          "type": "string",
          "description": "If the user had MFA enabled in OvrC prior to migration to Cognito, this was the preferred method(s) to receive the code."
        }
      },
      "required": [
        "isMigratedToCognito",
        "hasLoggedInViaCognito",
        "mfaEnabled",
        "mfaMethod"
      ]
    },
    "UsersAcceptTermsOfServiceRequest": {
      "properties": {
        "nextActionId": {
          "type": "string",
          "description": "ID, given in a previous log-in flow response; indicates your given log-in attempt session."
        },
        "termsOfServiceId": {
          "type": "string",
          "description": "ID of termsOfService staticfile that the user has accepted."
        }
      },
      "required": ["nextActionId", "termsOfServiceId"]
    },
    "UsersForgotPasswordRequest": {
      "properties": {
        "username": { "type": "string", "description": "User's email address." }
      },
      "required": ["username"]
    },
    "Request_Password_Confirmation_CodeRequest": {
      "properties": {
        "email": {
          "type": "string",
          "description": "Email for which password is being changed."
        }
      },
      "required": ["email"]
    },
    "UsersForgotPasswordCompleteRequest": {
      "properties": {
        "forgotPasswordId": {
          "type": "string",
          "description": "Forgot password id provided in email body."
        },
        "newPassword": {
          "type": "string",
          "description": "New password to update your account with."
        }
      },
      "required": ["forgotPasswordId", "newPassword"]
    },
    "UsersLoginRequest": {
      "properties": {
        "username": { "type": "string", "description": "User's email." },
        "password": { "type": "string", "description": "User's password." }
      },
      "required": ["username", "password"]
    },
    "UsersLogin": {
      "properties": {
        "accessToken": {
          "type": "string",
          "description": "Successful log-in, use this accessToken in your header of future requests."
        },
        "cannyToken": { "type": "string", "description": "Canny token." },
        "nextActionType": {
          "enum": ["mfa", "termsOfServiceUpdate"],
          "type": "string",
          "description": "If present, additional action is required.  This is the type of action."
        },
        "nextActionId": {
          "type": "string",
          "description": "Your temporary &quot;session&quot; to use while completing additional login actions."
        },
        "maskedPhoneNumber": {
          "type": "string",
          "description": "If present, your request requires MFA via TEXT; this is the last 4 of the phone the text will be sent to."
        }
      }
    },
    "UsersMFASendtokenRequest": {
      "properties": {
        "nextActionId": {
          "type": "string",
          "description": "Id, given in a previous log-in flow response; indicates your given log-in attempt session."
        },
        "method": {
          "enum": ["TEXT", "EMAIL", "BOTH"],
          "type": "string",
          "description": "Method by which user wants multi-factor code delivered; will users user's default if not provided."
        }
      },
      "required": ["nextActionId"]
    },
    "UsersMFAVerifyTokenRequest": {
      "properties": {
        "nextActionId": {
          "type": "string",
          "description": "Id, given in a previous log-in flow response; indicates your given log-in attempt session."
        },
        "mfaCode": {
          "type": "string",
          "description": "Code received by user."
        },
        "rememberDevice": {
          "type": "boolean",
          "description": "Add this device as &quot;Known Device&quot;? *"
        }
      },
      "required": ["nextActionId", "mfaCode", "rememberDevice"]
    },
    "LumaCameraConfigurationGet": {
      "properties": {
        "videoQuality": {
          "enum": ["lowest", "lower", "medium", "higher", "highest"],
          "type": "string",
          "description": "Determine the video quality that best fits the internet bandwidth"
        },
        "antiFlicker": {
          "enum": ["auto", "off", "50hz", "60hz"],
          "type": "string",
          "description": "Control the camera's ability to adjust light flicker"
        },
        "nightVision": {
          "enum": ["auto", "off", "on"],
          "type": "string",
          "description": "Control the camera's ability to record in the dark"
        },
        "whiteLight": {
          "type": "string",
          "description": "Improve light compensation"
        },
        "microphoneEnabled": {
          "type": "boolean",
          "description": "Whether the microphone is enabled"
        },
        "microphoneSensitivity": {
          "type": "integer",
          "description": "How sensitive the microphone is"
        },
        "recorderSettingsEnabled": {
          "type": "boolean",
          "description": "Whether recorder settings can be changed."
        },
        "recordingSettings": {
          "type": "string",
          "description": "When set per camera, decide when events are recorded"
        }
      },
      "required": [
        "videoQuality",
        "antiFlicker",
        "nightVision",
        "whiteLight",
        "microphoneEnabled",
        "microphoneSensitivity",
        "recorderSettingsEnabled",
        "recordingSettings"
      ]
    },
    "LumaForgotPasswordRequest": {
      "properties": {
        "username": { "type": "string", "description": "User's email address." }
      },
      "required": ["username"]
    },
    "LumaLoginRequest": {
      "properties": {
        "username": {
          "type": "string",
          "description": "User's email address."
        },
        "password": { "type": "string", "description": "User's password." }
      },
      "required": ["username", "password"]
    },
    "LutronClientDevicesRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Lutron Device ID." }
      },
      "required": ["deviceId"]
    },
    "LutronPairingStatusRequest": {
      "properties": {
        "macAddress": {
          "type": "string",
          "description": "The Lutron MAC Address."
        }
      },
      "required": ["macAddress"]
    },
    "LutronRebootDeviceRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The ID of the lutron device."
        }
      },
      "required": ["deviceId"]
    },
    "LutronRemoteAccessRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The ID of the lutron device."
        }
      },
      "required": ["deviceId"]
    },
    "LutronRetransferConfigRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The ID of the lutron device."
        }
      },
      "required": ["deviceId"]
    },
    "KnownDevicesDeleteRequest": { "properties": {} },
    "KnownDevicesReadRequest": {
      "properties": {
        "parentUser": {
          "type": "string",
          "description": "Parent user of known devices to read."
        }
      },
      "required": ["parentUser"]
    },
    "KnownDevicesRead": {
      "properties": {
        "knownDeviceId": {
          "type": "string",
          "description": "Id of the known device."
        },
        "model": {
          "type": "string",
          "description": "Model of the known device."
        },
        "userId": {
          "type": "string",
          "description": "Parent userId for the known device."
        },
        "ipAddress": {
          "type": "string",
          "description": "IP Address of the known device."
        },
        "createdAt": {
          "type": "string",
          "description": "Time (yyyy-mm-dd hh:mm:ss) when entry was created."
        },
        "cookie": {
          "type": "string",
          "description": "Unique cookie stored in the browser of known device."
        }
      },
      "required": [
        "knownDeviceId",
        "model",
        "userId",
        "ipAddress",
        "createdAt",
        "cookie"
      ]
    },
    "MeshChannelOptimizationRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID" }
      },
      "required": ["deviceId"]
    },
    "MeshChannelOptimization": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID" }
      },
      "required": ["deviceId"]
    },
    "MeshConnectionTestRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Device ID of the mesh controller"
        },
        "from": {
          "type": "string",
          "description": "The IP address of the transmitter on the LAN"
        },
        "to": {
          "type": "string",
          "description": "The IP address of the receiver on the LAN"
        }
      },
      "required": ["deviceId", "from", "to"]
    },
    "MeshConnectionTest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID" },
        "iperfString": {
          "type": "string",
          "description": "The iperf string of the test."
        }
      },
      "required": ["deviceId"]
    },
    "MeshDeleteNodeRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID" },
        "deviceMac": {
          "type": "string",
          "description": "MAC address of the node to be deleted"
        }
      },
      "required": ["deviceId", "deviceMac"]
    },
    "MeshDeleteNode": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID" }
      },
      "required": ["deviceId"]
    },
    "MeshDevicesRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "ID of location for which one would like to get SSID Management devices"
        }
      },
      "required": ["locationId"]
    },
    "MeshDevices": {
      "properties": {
        "deviceId": { "type": "string", "description": "Id of the device." },
        "name": {
          "type": "string",
          "description": "Name given to the device."
        },
        "role": {
          "enum": ["MESH"],
          "type": "string",
          "description": "Mesh role"
        },
        "model": { "type": "string", "description": "Model of the device." },
        "firmware": {
          "type": "string",
          "description": "Current firmware version."
        },
        "macAddress": {
          "type": "string",
          "description": "MAC Address of the device."
        },
        "lanAddress": {
          "type": "string",
          "description": "LAN IP address of the device."
        },
        "connected": {
          "type": "boolean",
          "description": "Current OvrC connection state."
        },
        "lastSeenTime": {
          "type": "string",
          "description": "Last time device was recognized as in communication with the cloud."
        },
        "devicesConnectedCount": {
          "type": "number",
          "description": "Number of WIFI devices connected to this WAP"
        },
        "channel2g": {
          "type": "number",
          "description": "Channel number used by 2.4Ghz radio"
        },
        "channel5g": {
          "type": "number",
          "description": "Channel number used by 5Ghz radio"
        },
        "channel5gBackhaul": {
          "type": "number",
          "description": "Channel number used by 5Ghz backhaul radio"
        },
        "power2g": {
          "type": "number",
          "description": "Power used by 2.4Ghz radio"
        },
        "power5g": {
          "type": "number",
          "description": "Power used by 5Ghz radio"
        },
        "power5gBackhaul": {
          "type": "number",
          "description": "Power used by 5Ghz backhaul radio"
        },
        "distance": {
          "enum": ["Optimal", "Tooclose", "Toofar", "Wired"],
          "type": "string",
          "description": "Indicates signal quality to next hop."
        },
        "isMeshMember": {
          "type": "boolean",
          "description": "WAP is a mesh member"
        },
        "meshIsNode": {
          "type": "boolean",
          "description": "WAP is a mesh node, as seen in Devices"
        },
        "meshIsController": {
          "type": "boolean",
          "description": "WAP is a mesh controller, as seen in Devices"
        },
        "meshIsPaired": {
          "type": "boolean",
          "description": "WAP is mesh capable, as seen in Devices"
        },
        "metadata": {
          "type": "object",
          "description": "additional metadata for the wireless settings of this device.",
          "properties": {
            "isSsidManagementCapable": {
              "type": "boolean",
              "description": "Indicates if this device model is supported by SSID management."
            },
            "isMeshCapable": {
              "type": "boolean",
              "description": "Indicates if this device model is supported by mesh management."
            },
            "wireless": {
              "type": "object",
              "description": "Provides additional metadata for the wireless settings of this device."
            },
            "deviceFamily": {
              "enum": ["ANA", "WKWX", "WA"],
              "type": "string",
              "description": "Indicates the deviceFamily (group) to which this device belongs"
            }
          },
          "required": [
            "isSsidManagementCapable",
            "isMeshCapable",
            "wireless",
            "deviceFamily"
          ]
        }
      },
      "required": [
        "deviceId",
        "name",
        "role",
        "model",
        "firmware",
        "macAddress",
        "lanAddress",
        "connected",
        "lastSeenTime",
        "devicesConnectedCount",
        "channel2g",
        "channel5g",
        "channel5gBackhaul",
        "power2g",
        "power5g",
        "power5gBackhaul",
        "distance",
        "isMeshMember",
        "meshIsNode",
        "meshIsController",
        "meshIsPaired",
        "metadata"
      ]
    },
    "MeshJoinNodeRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The controller ID" },
        "nodes": {
          "type": "array",
          "description": "Array of node MAC addresses",
          "items": { "type": "string" }
        },
        "ssidOne": {
          "properties": {
            "deviceId": { "type": "string", "description": "The Device ID." },
            "interface": {
              "enum": ["24GHz", "5GHz", "BOTH"],
              "type": "string",
              "description": "The interface on which the network is broadcasting."
            },
            "ssid": {
              "type": "string",
              "description": "The SSID of the network."
            },
            "enabled": {
              "type": "boolean",
              "description": "Indicates whether the SSID is enabled or disabled."
            },
            "security": {
              "enum": [
                "OPEN",
                "WPA2PSK",
                "WPAPSKMIXED",
                "WPA2",
                "WPAMIXED",
                "WEP"
              ],
              "type": "string",
              "description": "The security protocol of the network."
            },
            "password": {
              "type": "string",
              "description": "The password for the network."
            },
            "radiusServer": {
              "type": "string",
              "description": "The IP address of the radius server."
            },
            "radiusPort": {
              "type": "integer",
              "description": "The port number of the radius server."
            },
            "radiusSecret": {
              "type": "string",
              "description": "The password for the radius server."
            },
            "broadcastEnabled": {
              "type": "boolean",
              "description": "Indicates whether the SSID is broadcasting."
            },
            "separationEnabled": {
              "type": "boolean",
              "description": "Indicates whether channel separation is enabled on the network."
            },
            "vlanIsolation": {
              "type": "boolean",
              "description": "Sets VLAN isolation."
            },
            "vlanTagged": {
              "type": "boolean",
              "description": "Sets VLAN tagging."
            },
            "vlanID": {
              "type": "integer",
              "description": "Sets VLAN ID for tagging."
            }
          },
          "required": [
            "deviceId",
            "interface",
            "ssid",
            "enabled",
            "security",
            "broadcastEnabled",
            "separationEnabled",
            "vlanIsolation",
            "vlanTagged"
          ]
        },
        "ssidTwo": {
          "properties": {
            "deviceId": { "type": "string", "description": "The Device ID." },
            "interface": {
              "enum": ["24GHz", "5GHz", "BOTH"],
              "type": "string",
              "description": "The interface on which the network is broadcasting."
            },
            "ssid": {
              "type": "string",
              "description": "The SSID of the network."
            },
            "enabled": {
              "type": "boolean",
              "description": "Indicates whether the SSID is enabled or disabled."
            },
            "security": {
              "enum": [
                "OPEN",
                "WPA2PSK",
                "WPAPSKMIXED",
                "WPA2",
                "WPAMIXED",
                "WEP"
              ],
              "type": "string",
              "description": "The security protocol of the network."
            },
            "password": {
              "type": "string",
              "description": "The password for the network."
            },
            "radiusServer": {
              "type": "string",
              "description": "The IP address of the radius server."
            },
            "radiusPort": {
              "type": "integer",
              "description": "The port number of the radius server."
            },
            "radiusSecret": {
              "type": "string",
              "description": "The password for the radius server."
            },
            "broadcastEnabled": {
              "type": "boolean",
              "description": "Indicates whether the SSID is broadcasting."
            },
            "separationEnabled": {
              "type": "boolean",
              "description": "Indicates whether channel separation is enabled on the network."
            },
            "vlanIsolation": {
              "type": "boolean",
              "description": "Sets VLAN isolation."
            },
            "vlanTagged": {
              "type": "boolean",
              "description": "Sets VLAN tagging."
            },
            "vlanID": {
              "type": "integer",
              "description": "Sets VLAN ID for tagging."
            }
          },
          "required": [
            "deviceId",
            "interface",
            "ssid",
            "enabled",
            "security",
            "broadcastEnabled",
            "separationEnabled",
            "vlanIsolation",
            "vlanTagged"
          ]
        },
        "guestSsid": {
          "properties": {
            "deviceId": { "type": "string", "description": "The Device ID." },
            "interface": {
              "enum": ["24GHz", "5GHz", "BOTH"],
              "type": "string",
              "description": "The interface on which the network is broadcasting."
            },
            "opMode": {
              "enum": ["Mesh", "AP", "Repeater"],
              "type": "string",
              "description": "The WAP operation mode"
            },
            "ssid": {
              "type": "string",
              "description": "The SSID of the guest network."
            },
            "guestEnabled": {
              "type": "boolean",
              "description": "Indicates whether the guest network is enabled."
            },
            "broadcastEnabled": {
              "type": "boolean",
              "description": "Indicates whether the SSID is broadcasting."
            },
            "security": {
              "enum": ["OPEN", "WPA2PSK", "WPAPSKMIXED", "WEP"],
              "type": "string",
              "description": "The security protocol of the network."
            },
            "password": {
              "type": "string",
              "description": "The password for the network."
            },
            "separationEnabled": {
              "type": "boolean",
              "description": "Indicates whether channel separation is enabled on the network."
            },
            "gatewayIp": {
              "type": "string",
              "description": "The gateway IP address of the guest network."
            },
            "subnetMask": {
              "type": "string",
              "description": "The subnet mask of the guest network."
            },
            "startingIp": {
              "type": "string",
              "description": "The starting IP address to be used with automatic DHCP server settings."
            },
            "endingIp": {
              "type": "string",
              "description": "The ending IP address to be used with automatic DHCP server settings."
            },
            "vlanIsolation": {
              "type": "boolean",
              "description": "VLAN isolation."
            },
            "vlanTagged": { "type": "boolean", "description": "VLAN tagging." },
            "vlanID": {
              "type": "integer",
              "description": "VLAN ID for tagging."
            }
          },
          "required": [
            "deviceId",
            "interface",
            "opMode",
            "ssid",
            "guestEnabled",
            "broadcastEnabled",
            "security",
            "separationEnabled",
            "vlanIsolation",
            "vlanTagged"
          ]
        }
      },
      "required": ["deviceId", "nodes"]
    },
    "MeshJoinNode": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID" }
      },
      "required": ["deviceId"]
    },
    "MeshNetworkStatusRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID" }
      },
      "required": ["deviceId"]
    },
    "MeshNetworkStatus": {
      "properties": {
        "node": {
          "type": "array",
          "description": "Nodes in the Mesh",
          "items": {
            "type": "object",
            "properties": {
              "model": {
                "type": "string",
                "description": "Model of the device"
              },
              "systemName": {
                "type": "string",
                "description": "System Name of the device"
              },
              "role": {
                "enum": ["CONTROLLER", "NODE"],
                "type": "string",
                "description": "Role of the device, &quot;CONTROLLER&quot; or &quot;NODE&quot;"
              },
              "lanIPAddress": {
                "type": "string",
                "description": "IP Address of the device"
              },
              "channel2g": {
                "enum": ["111"],
                "type": "number",
                "description": "2G channel of the device"
              },
              "channel5g": {
                "enum": ["36", "40", "44", "48", "149", "153", "157", "161"],
                "type": "number",
                "description": "5G channel of the device"
              },
              "channel5gBackhaul": {
                "enum": [
                  "36",
                  "40",
                  "44",
                  "48",
                  "149",
                  "153",
                  "157",
                  "161",
                  "Wired"
                ],
                "type": "string",
                "description": "5G backhaul channel of the device"
              },
              "devicesConnectedNumber": {
                "type": "number",
                "description": "Total number of clients connected to both radios"
              },
              "power2g": {
                "type": "string",
                "description": "2G channel power"
              },
              "power5g": {
                "type": "string",
                "description": "5G channel power"
              },
              "power5gBackhaul": {
                "type": "string",
                "description": "5G backhaul channel power"
              }
            },
            "required": [
              "model",
              "systemName",
              "role",
              "lanIPAddress",
              "channel2g",
              "channel5g",
              "channel5gBackhaul",
              "devicesConnectedNumber",
              "power2g",
              "power5g",
              "power5gBackhaul"
            ]
          }
        }
      },
      "required": ["node"]
    },
    "MeshNodeIdentificationRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID" },
        "identifyNode": {
          "type": "integer",
          "description": "The value of identify node"
        }
      },
      "required": ["deviceId", "identifyNode"]
    },
    "MeshNodeIdentification": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID" },
        "nodes": {
          "type": "array",
          "description": "Array of node objects",
          "items": {
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "The location of the node if identifyNode equal to 1."
              },
              "nodeMac": {
                "type": "string",
                "description": "The location of the node if identifyNode equal to 1."
              },
              "ledColor": {
                "type": "integer",
                "description": "The led color of the node if identifyNode equal to 1."
              },
              "ledStatus": {
                "type": "integer",
                "description": "The led status of the node if identifyNode equal to 1."
              }
            },
            "required": ["location", "nodeMac", "ledColor", "ledStatus"]
          }
        }
      },
      "required": ["deviceId", "nodes"]
    },
    "MeshPowerOptimizationRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID" }
      },
      "required": ["deviceId"]
    },
    "MeshPowerOptimization": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID" }
      },
      "required": ["deviceId"]
    },
    "MeshUpdateFirmwareRequest": {
      "properties": {
        "locationId": { "type": "string", "description": "The Location ID" }
      },
      "required": ["locationId"]
    },
    "MoipAudioRxGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "endpointId": {
          "type": "string",
          "description": "The Endpoint ID for the audio receiver endpoint."
        }
      },
      "required": ["deviceId", "endpointId"]
    },
    "MoipAudioRxGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        }
      },
      "required": ["deviceId", "dateTime"]
    },
    "MoipAudioRxPutRequest": {
      "properties": {
        "endpointId": { "type": "string", "description": "The Endpoint ID." },
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["endpointId", "deviceId"]
    },
    "MoipAudioRxPut": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "MoipAudioTxGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "endpointId": {
          "type": "string",
          "description": "The Endpoint ID for the audio transmitter."
        }
      },
      "required": ["deviceId", "endpointId"]
    },
    "MoipAudioTxGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        }
      },
      "required": ["deviceId", "dateTime"]
    },
    "MoipAudioTxPutRequest": {
      "properties": {
        "endpointId": { "type": "string", "description": "The Endpoint ID." },
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["endpointId", "deviceId"]
    },
    "MoipAudioTxPut": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "MoipChangeGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "MoipChangeGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        }
      },
      "required": ["deviceId", "dateTime"]
    },
    "MoipGroupRxGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "endpointId": { "type": "string", "description": "The EndpointId ID." }
      },
      "required": ["deviceId", "endpointId"]
    },
    "MoipGroupRxGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        }
      },
      "required": ["deviceId", "dateTime"]
    },
    "MoipGroupRxPutRequest": {
      "properties": {
        "endpointId": { "type": "string", "description": "The Endpoint ID." },
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["endpointId", "deviceId"]
    },
    "MoipGroupRxPut": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "MoipGroupTxGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "endpointId": {
          "type": "string",
          "description": "The Endpoint ID for the transmitter group."
        }
      },
      "required": ["deviceId", "endpointId"]
    },
    "MoipGroupTxGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        }
      },
      "required": ["deviceId", "dateTime"]
    },
    "MoipGroupTxPutRequest": {
      "properties": {
        "endpointId": { "type": "string", "description": "The Endpoint ID." },
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["endpointId", "deviceId"]
    },
    "MoipGroupTxPut": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "MoipIrRxGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "endpointId": {
          "type": "string",
          "description": "The Endpoint ID for the receiver."
        }
      },
      "required": ["deviceId", "endpointId"]
    },
    "MoipIrRxGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        }
      },
      "required": ["deviceId", "dateTime"]
    },
    "MoipIrRxPutRequest": {
      "properties": {
        "endpointId": { "type": "string", "description": "The Endpoint ID." },
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["endpointId", "deviceId"]
    },
    "MoipIrRxPut": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "MoipIrTxGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "endpointId": {
          "type": "string",
          "description": "The Endpoint ID for the transmitter."
        }
      },
      "required": ["deviceId", "endpointId"]
    },
    "MoipIrTxGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        }
      },
      "required": ["deviceId", "dateTime"]
    },
    "MoipIrTxPutRequest": {
      "properties": {
        "endpointId": { "type": "string", "description": "The Endpoint ID." },
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["endpointId", "deviceId"]
    },
    "MoipIrTxPut": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "MoipMetadataGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "MoipMetadataGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        },
        "metadata": {
          "type": "object",
          "description": "The metadata structure",
          "properties": {
            "deviceStatus": {
              "type": "object",
              "description": "The device status structure",
              "properties": {
                "items": {
                  "type": "array",
                  "description": "List of name/values of possible device status",
                  "items": {
                    "type": "object",
                    "properties": {
                      "requestValue": {
                        "type": "string",
                        "description": "Value returned from database"
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Value to be displayed to user"
                      },
                      "displayGroup": {
                        "type": "array",
                        "description": "List of display values in the filter group",
                        "items": { "type": "string" }
                      }
                    },
                    "required": ["requestValue", "displayName", "displayGroup"]
                  }
                },
                "filter": {
                  "type": "array",
                  "description": "List of name/groups for filtering device status",
                  "items": {
                    "type": "object",
                    "properties": {
                      "displayName": {
                        "type": "string",
                        "description": "Value to be displayed to user"
                      }
                    },
                    "required": ["displayName"]
                  }
                }
              },
              "required": ["items", "filter"]
            },
            "diagMode": {
              "type": "array",
              "description": "List of name/values of possible diagnostic modes",
              "items": {
                "type": "object",
                "properties": {
                  "requestValue": {
                    "type": "string",
                    "description": "Value returned from database"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Value to be displayed to user"
                  }
                },
                "required": ["requestValue", "displayName"]
              }
            },
            "changes": {
              "type": "array",
              "description": "List of name/values of possible change states",
              "items": {
                "type": "object",
                "properties": {
                  "requestValue": {
                    "type": "string",
                    "description": "Value returned from database"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Value to be displayed to user"
                  }
                },
                "required": ["requestValue", "displayName"]
              }
            },
            "upgradeStage": {
              "type": "array",
              "description": "List of name/values of possible upgrade stages",
              "items": {
                "type": "object",
                "properties": {
                  "requestValue": {
                    "type": "string",
                    "description": "Value returned from database"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Value to be displayed to user"
                  }
                },
                "required": ["requestValue", "displayName"]
              }
            },
            "loudness": {
              "type": "array",
              "description": "List of name/values of possible loudness states",
              "items": {
                "type": "object",
                "properties": {
                  "requestValue": {
                    "type": "string",
                    "description": "Value returned from database"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Value to be displayed to user"
                  }
                },
                "required": ["requestValue", "displayName"]
              }
            },
            "downmix": {
              "type": "array",
              "description": "List of name/values of possible downmix states",
              "items": {
                "type": "object",
                "properties": {
                  "requestValue": {
                    "type": "string",
                    "description": "Value returned from database"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Value to be displayed to user"
                  }
                },
                "required": ["requestValue", "displayName"]
              }
            },
            "muting": {
              "type": "array",
              "description": "List of name/values of possible muting states",
              "items": {
                "type": "object",
                "properties": {
                  "requestValue": {
                    "type": "string",
                    "description": "Value returned from database"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Value to be displayed to user"
                  }
                },
                "required": ["requestValue", "displayName"]
              }
            },
            "audioPortType": {
              "type": "array",
              "description": "List of name/values of possible audio port types",
              "items": {
                "type": "object",
                "properties": {
                  "requestValue": {
                    "type": "string",
                    "description": "Value returned from database"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Value to be displayed to user"
                  }
                },
                "required": ["requestValue", "displayName"]
              }
            },
            "audioFormat": {
              "type": "array",
              "description": "List of name/values of possible audio formats",
              "items": { "type": "object" }
            },
            "Format": {
              "properties": {
                "requestValue": {
                  "type": "string",
                  "description": "Value returned from database"
                },
                "displayName": {
                  "type": "string",
                  "description": "Value to be displayed to user"
                }
              },
              "required": ["requestValue", "displayName"]
            },
            "unitStatus": {
              "type": "array",
              "description": "List of name/values of possible unit statuses",
              "items": {
                "type": "object",
                "properties": {
                  "requestValue": {
                    "type": "string",
                    "description": "Value returned from database"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Value to be displayed to user"
                  }
                },
                "required": ["requestValue", "displayName"]
              }
            },
            "powerSource": {
              "type": "array",
              "description": "List of name/values of possible power sources",
              "items": {
                "type": "object",
                "properties": {
                  "requestValue": {
                    "type": "string",
                    "description": "Value returned from database"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Value to be displayed to user"
                  }
                },
                "required": ["requestValue", "displayName"]
              }
            },
            "zoneConfig": {
              "type": "array",
              "description": "List of name/values of possible zone configurations",
              "items": {
                "type": "object",
                "properties": {
                  "requestValue": {
                    "type": "string",
                    "description": "Value returned from database"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Value to be displayed to user"
                  }
                },
                "required": ["requestValue", "displayName"]
              }
            },
            "videoRes": {
              "type": "array",
              "description": "List of name/values of possible video resolutions",
              "items": {
                "type": "object",
                "properties": {
                  "requestValue": {
                    "type": "string",
                    "description": "Value returned from database"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Value to be displayed to user"
                  }
                },
                "required": ["requestValue", "displayName"]
              }
            },
            "contentProtect": {
              "type": "array",
              "description": "List of name/values of possible content protection",
              "items": {
                "type": "object",
                "properties": {
                  "requestValue": {
                    "type": "string",
                    "description": "Value returned from database"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Value to be displayed to user"
                  }
                },
                "required": ["requestValue", "displayName"]
              }
            },
            "rotation": {
              "type": "array",
              "description": "List of name/values of possible display rotation",
              "items": {
                "type": "object",
                "properties": {
                  "requestValue": {
                    "type": "string",
                    "description": "Value returned from database"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Value to be displayed to user"
                  }
                },
                "required": ["requestValue", "displayName"]
              }
            }
          },
          "required": [
            "deviceStatus",
            "diagMode",
            "changes",
            "upgradeStage",
            "loudness",
            "downmix",
            "muting",
            "audioPortType",
            "audioFormat",
            "unitStatus",
            "powerSource",
            "zoneConfig",
            "videoRes",
            "contentProtect",
            "rotation"
          ]
        }
      },
      "required": ["deviceId", "dateTime", "metadata"]
    },
    "MoipPollChangeGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "MoipPollChangeGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        }
      },
      "required": ["deviceId", "dateTime"]
    },
    "MoipRebootDeviceRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "MoipRebootDevice": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "MoipReceiversGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "unitId": {
          "type": "string",
          "description": "The Unit ID for the receiver."
        }
      },
      "required": ["deviceId", "unitId"]
    },
    "MoipReceiversGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        }
      },
      "required": ["deviceId", "dateTime"]
    },
    "MoipSerialRxGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "endpointId": { "type": "string", "description": "The Endpoint ID." }
      },
      "required": ["deviceId", "endpointId"]
    },
    "MoipSerialRxGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        }
      },
      "required": ["deviceId", "dateTime"]
    },
    "MoipSerialRxPutRequest": {
      "properties": {
        "endpointId": { "type": "string", "description": "The Endpoint ID." },
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["endpointId", "deviceId"]
    },
    "MoipSerialRxPut": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "MoipSerialTxGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "endpointId": { "type": "string", "description": "The Endpoint ID." }
      },
      "required": ["deviceId", "endpointId"]
    },
    "MoipSerialTxGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        }
      },
      "required": ["deviceId", "dateTime"]
    },
    "MoipSerialTxPutRequest": {
      "properties": {
        "endpointId": { "type": "string", "description": "The Endpoint ID." },
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["endpointId", "deviceId"]
    },
    "MoipSerialTxPut": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "MoipStatusGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "MoipStatusGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        },
        "uptime": {
          "type": "integer",
          "description": "The system uptime in seconds."
        },
        "rxCount": {
          "type": "integer",
          "description": "The number of receiver endpoints."
        },
        "txCount": {
          "type": "integer",
          "description": "The number of transmitter endpoints."
        }
      },
      "required": ["deviceId", "dateTime", "uptime", "rxCount", "txCount"]
    },
    "MoipSystemGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "MoipSystemGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        },
        "name": { "type": "string", "description": "The system name." },
        "diag_mode": {
          "enum": ["idle", "identify", "cycle"],
          "type": "string",
          "description": "The system diagnostic mode"
        }
      },
      "required": ["deviceId", "dateTime", "name", "diag_mode"]
    },
    "MoipSystemPostRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "MoipSystemPost": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "MoipSystemPutRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "MoipSystemPut": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "MoipTransmittersGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "unitId": {
          "type": "string",
          "description": "The Unit ID for the receiver."
        }
      },
      "required": ["deviceId", "unitId"]
    },
    "MoipTransmittersGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        }
      },
      "required": ["deviceId", "dateTime"]
    },
    "MoipUnitDeleteRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "unitId": { "type": "string", "description": "The ID for the vidwall." }
      },
      "required": ["deviceId", "unitId"]
    },
    "MoipUnitDelete": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "MoipUnitGetRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Device ID for the MoIP Controller, or alternatively the Device ID for the unit."
        },
        "unitId": {
          "type": "string",
          "description": "The Unit ID for the receiver/transmitter, required when the deviceId is for the controller instead of the unit."
        }
      },
      "required": ["deviceId", "unitId"]
    },
    "MoipUnitGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        },
        "associations": {
          "type": "object",
          "description": "The IDs of each unit connected to the MoIP Controller, grouped first by audio/video/serial/ir then by rx/tx",
          "properties": {
            "audio": {
              "type": "array",
              "description": "Audio rx and tx settings list",
              "items": {
                "type": "object",
                "properties": {
                  "rx": {
                    "type": "array",
                    "description": "Audio rx parameters",
                    "items": { "type": "number" }
                  },
                  "tx": {
                    "type": "array",
                    "description": "Audio tx parameters",
                    "items": { "type": "number" }
                  }
                },
                "required": ["rx", "tx"]
              }
            },
            "video": {
              "type": "array",
              "description": "Video rx and tx settings list",
              "items": {
                "type": "object",
                "properties": {
                  "rx": {
                    "type": "array",
                    "description": "Video rx parameters",
                    "items": { "type": "number" }
                  },
                  "tx": {
                    "type": "array",
                    "description": "Video tx parameters",
                    "items": { "type": "number" }
                  }
                },
                "required": ["rx", "tx"]
              }
            },
            "serial": {
              "type": "array",
              "description": "Serial rx and tx settings list",
              "items": {
                "type": "object",
                "properties": {
                  "rx": {
                    "type": "array",
                    "description": "Serial rx parameters",
                    "items": { "type": "number" }
                  },
                  "tx": {
                    "type": "array",
                    "description": "Serial tx parameters",
                    "items": { "type": "number" }
                  }
                },
                "required": ["rx", "tx"]
              }
            },
            "ir": {
              "type": "array",
              "description": "ir rx and tx settings list",
              "items": {
                "type": "object",
                "properties": {
                  "rx": {
                    "type": "array",
                    "description": "ir rx parameters",
                    "items": { "type": "number" }
                  },
                  "tx": {
                    "type": "array",
                    "description": "ir tx parameters",
                    "items": { "type": "number" }
                  }
                },
                "required": ["rx", "tx"]
              }
            },
            "group": {
              "type": "array",
              "description": "Group rx and tx settings list",
              "items": {
                "type": "object",
                "properties": {
                  "rx": {
                    "type": "array",
                    "description": "Group rx parameters",
                    "items": { "type": "number" }
                  },
                  "tx": {
                    "type": "array",
                    "description": "Group tx parameters",
                    "items": { "type": "number" }
                  }
                },
                "required": ["rx", "tx"]
              }
            }
          },
          "required": ["audio", "video", "serial", "ir", "group"]
        },
        "status": {
          "type": "object",
          "description": "The status of the unit connected to the MoIP Controller.",
          "properties": {
            "unit_state": {
              "type": "string",
              "description": "Unit state of connection"
            },
            "mac": {
              "type": "string",
              "description": "Mac address of the device"
            },
            "model": { "type": "string", "description": "Model of the device" },
            "version": { "type": "string", "description": "Device version" },
            "upgrade_state": {
              "type": "object",
              "description": "Current state of upgrade status",
              "properties": {
                "percent": {
                  "type": "number",
                  "description": "Percentage of current upgrade progress"
                },
                "stage": {
                  "type": "string",
                  "description": "The stage of upgrade"
                }
              },
              "required": ["percent", "stage"]
            }
          },
          "required": ["unit_state", "mac", "model", "version", "upgrade_state"]
        },
        "settings": {
          "type": "object",
          "description": "The settings of the unit connected to the MoIP Controller.",
          "properties": {
            "name": { "type": "string", "description": "Name of the unit" }
          },
          "required": ["name"]
        }
      },
      "required": ["deviceId", "dateTime", "associations", "status", "settings"]
    },
    "MoipUnitPostRequest": {
      "properties": {
        "unitId": { "type": "string", "description": "The Unit ID." },
        "deviceId": { "type": "string", "description": "The Device ID." },
        "action": { "type": "string", "description": "The action to preform." }
      },
      "required": ["unitId", "deviceId", "action"]
    },
    "MoipUnitPost": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "MoipUnitPutRequest": {
      "properties": {
        "unitId": { "type": "string", "description": "The Unit ID." },
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["unitId", "deviceId"]
    },
    "MoipUnitPut": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "MoipUnitLogGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "unitId": {
          "type": "string",
          "description": "The Unit ID for the receiver/transmitter."
        }
      },
      "required": ["deviceId", "unitId"]
    },
    "MoipUnitLogGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        },
        "controllerDeviceId": {
          "type": "string",
          "description": "MoIP controller deviceId."
        },
        "result": {
          "type": "string",
          "description": "The log from selected unit."
        },
        "unitDeviceId": { "type": "string", "description": "Unit's deviceId." }
      },
      "required": [
        "deviceId",
        "dateTime",
        "controllerDeviceId",
        "result",
        "unitDeviceId"
      ]
    },
    "MoipUnitsGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "MoipUnitsGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        },
        "items": {
          "type": "array",
          "description": "The IDs of each unit connected to the MoIP Controller.",
          "items": { "type": "number" }
        }
      },
      "required": ["deviceId", "dateTime", "items"]
    },
    "MoipVidWallDetailsGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "MoipVidWallDetailsGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        },
        "vidWalls": {
          "type": "array",
          "description": "array of video wall units",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "description": "Unit number of video wall"
              },
              "associations": {
                "type": "object",
                "description": "Unit number of video wall",
                "properties": {
                  "group_rx": {
                    "type": "array",
                    "description": "List of Group RX numbers in video wall",
                    "items": { "type": "number" }
                  },
                  "paired_rx": {
                    "type": "number",
                    "description": "TX number of transmitter used for video wall"
                  }
                },
                "required": ["group_rx", "paired_rx"]
              },
              "status": {
                "type": "object",
                "description": "TX number of transmitter used for video wall",
                "properties": {
                  "state": {
                    "enum": [
                      "unconnected",
                      "stopped",
                      "detecting",
                      "streaming",
                      "unsupported",
                      "upgrading"
                    ],
                    "type": "string",
                    "description": "Synthesized state representing all RXs"
                  }
                },
                "required": ["state"]
              },
              "settings": {
                "type": "object",
                "description": "Settings for the video wall",
                "properties": {
                  "height": {
                    "type": "number",
                    "description": "Number of RXx vertically"
                  },
                  "width": {
                    "type": "number",
                    "description": "Number of RXx horizontally"
                  },
                  "index": {
                    "type": "number",
                    "description": "Video Wall index number"
                  },
                  "name": { "type": "string", "description": "Video Wall name" }
                },
                "required": ["height", "width", "index", "name"]
              }
            },
            "required": ["id", "associations", "status", "settings"]
          }
        }
      },
      "required": ["deviceId", "dateTime", "vidWalls"]
    },
    "MoipVideoRxGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "endpointId": {
          "type": "string",
          "description": "The Endpoint ID for the receiver."
        }
      },
      "required": ["deviceId", "endpointId"]
    },
    "MoipVideoRxGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        }
      },
      "required": ["deviceId", "dateTime"]
    },
    "MoipVideoRxPostRequest": {
      "properties": {
        "endpointId": { "type": "string", "description": "The Endpoint ID." },
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["endpointId", "deviceId"]
    },
    "MoipVideoRxPost": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "MoipVideoRxPutRequest": {
      "properties": {
        "endpointId": { "type": "string", "description": "The Endpoint ID." },
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["endpointId", "deviceId"]
    },
    "MoipVideoRxPut": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "MoipVideoTxGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "endpointId": {
          "type": "string",
          "description": "The Endpoint ID for the transmitter."
        }
      },
      "required": ["deviceId", "endpointId"]
    },
    "MoipVideoTxGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        }
      },
      "required": ["deviceId", "dateTime"]
    },
    "MoipVideoTxPutRequest": {
      "properties": {
        "endpointId": { "type": "string", "description": "The Endpoint ID." },
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["endpointId", "deviceId"]
    },
    "MoipVideoTxPut": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "MoipVideoTxPreviewGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "endpointId": {
          "type": "string",
          "description": "The Endpoint ID for the transmitter."
        }
      },
      "required": ["deviceId", "endpointId"]
    },
    "MoipVideoTxPreviewGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        }
      },
      "required": ["deviceId", "dateTime"]
    },
    "MoipVidwallDeleteRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "vidwallId": {
          "type": "string",
          "description": "The ID for the vidwall."
        }
      },
      "required": ["deviceId", "vidwallId"]
    },
    "MoipVidwallDelete": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "MoipVidwallGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "vidwallId": {
          "type": "string",
          "description": "The ID for the vidwall."
        }
      },
      "required": ["deviceId", "vidwallId"]
    },
    "MoipVidwallGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "MoipVidwallPost": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "MoipVidwallPutRequest": {
      "properties": {
        "vidwallId": { "type": "string", "description": "The Vidwall ID." }
      },
      "required": ["vidwallId"]
    },
    "MoipVidwallPut": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "MoipVidwallsGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "MoipVidwallsGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update."
        },
        "items": {
          "type": "array",
          "description": "array of vidwall units",
          "items": { "type": "number" }
        }
      },
      "required": ["deviceId", "dateTime", "items"]
    },
    "NvrDvrChannelSettingsGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "NvrDvrChannelSettingsGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "channels": {
          "type": "array",
          "description": "Array of channel settings.",
          "items": {
            "type": "object",
            "properties": {
              "number": {
                "type": "integer",
                "description": "The channel number."
              },
              "name": { "type": "string", "description": "The channel name." },
              "ipAddress": {
                "type": "string",
                "description": "The camera IP address (NVR only)."
              },
              "status": {
                "type": "integer",
                "description": "The channel status code."
              },
              "desc": {
                "type": "string",
                "description": "The channel status description."
              },
              "isConnected": {
                "type": "boolean",
                "description": "Indicates if the channel is successfully connected to a camera."
              },
              "isClaimed": {
                "type": "boolean",
                "description": "Indicates if the camera on this channel is claimed in OvrC (Always false for DVRs)."
              },
              "resolution": {
                "type": "string",
                "description": "The channel resolution."
              },
              "attached": {
                "type": "boolean",
                "description": "Indicates whether there is a camera attached (NVR only)."
              },
              "macAddress": {
                "type": "string",
                "description": "The camera MAC address (NVR only)."
              },
              "deviceId": {
                "type": "string",
                "description": "The camera deviceId. (NVR only)."
              },
              "port": {
                "type": "string",
                "description": "The port number opened on the NVR to access camera (blank if none)."
              },
              "enableRecordingSchedule": {
                "type": "boolean",
                "description": "Indicates whether recording schedule is enabled."
              },
              "enableEmailNotifications": {
                "type": "boolean",
                "description": "Indicates whether email notifications are enabled."
              },
              "enablePrivacyMask": {
                "type": "boolean",
                "description": "Indicates whether privacy mask is enabled."
              }
            },
            "required": [
              "number",
              "name",
              "status",
              "desc",
              "isConnected",
              "isClaimed",
              "resolution",
              "enableRecordingSchedule",
              "enableEmailNotifications",
              "enablePrivacyMask"
            ]
          }
        }
      },
      "required": ["deviceId", "channels"]
    },
    "NvrDvrChannelSettingsSetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "channels": {
          "type": "array",
          "description": "Array of channel settings.",
          "items": {
            "type": "object",
            "properties": {
              "number": {
                "type": "integer",
                "description": "The channel number."
              },
              "name": { "type": "string", "description": "The channel name." },
              "enableRecordingSchedule": {
                "type": "boolean",
                "description": "Indicates whether recording schedule is enabled."
              },
              "enableEmailNotifications": {
                "type": "boolean",
                "description": "Indicates whether email notifications are enabled."
              },
              "enablePrivacyMask": {
                "type": "boolean",
                "description": "Indicates whether privacy mask is enabled."
              }
            },
            "required": [
              "number",
              "name",
              "enableRecordingSchedule",
              "enableEmailNotifications",
              "enablePrivacyMask"
            ]
          }
        }
      },
      "required": ["deviceId", "channels"]
    },
    "NvrDvrChannelSettingsSet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "NvrDvrHddSettingsGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "NvrDvrHddSettingsGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "enableHddSleeping": {
          "type": "boolean",
          "description": "Indicates whether HDD sleeping is enabled."
        },
        "drives": {
          "type": "array",
          "description": "An array of drives.",
          "items": {
            "type": "object",
            "properties": {
              "hddNum": { "type": "string", "description": "The HDD number." },
              "capacity": {
                "type": "number",
                "description": "The HDD capacity in GB."
              },
              "free": {
                "type": "number",
                "description": "The free HDD space in GB."
              },
              "status": {
                "type": "string",
                "description": "Indicates the status of the HDD."
              },
              "type": {
                "type": "string",
                "description": "The type of the drive."
              },
              "property": {
                "type": "string",
                "description": "Indicates actions that can be taken on the drive (R/W, Read-only, etc)."
              }
            },
            "required": [
              "hddNum",
              "capacity",
              "free",
              "status",
              "type",
              "property"
            ]
          }
        }
      },
      "required": ["deviceId", "enableHddSleeping", "drives"]
    },
    "NvrDvrRecordingStatsGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "NvrDvrRecordingStatsGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "totalTime": {
          "type": "string",
          "description": "The total time of recorded video ('Days:Hours:Minutes')."
        },
        "eventTime": {
          "type": "string",
          "description": "The total time of event video  ('Days:Hours:Minutes')."
        },
        "fullTime": {
          "type": "string",
          "description": "The total time of full time video ('Days:Hours:Minutes')."
        },
        "oldestEvent": {
          "type": "string",
          "description": "The date and time of oldest event (ISO date)."
        },
        "oldestFull": {
          "type": "string",
          "description": "The date and time of oldest full time (ISO date)."
        },
        "channels": {
          "type": "array",
          "description": "Array of channels' info.",
          "items": {
            "type": "object",
            "properties": {
              "number": {
                "type": "integer",
                "description": "The channel number."
              },
              "latestEvent": {
                "type": "string",
                "description": "The date and time of latest recorded event."
              }
            },
            "required": ["number", "latestEvent"]
          }
        }
      },
      "required": [
        "deviceId",
        "totalTime",
        "eventTime",
        "fullTime",
        "oldestEvent",
        "oldestFull",
        "channels"
      ]
    },
    "NvrDvrStatusGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "NvrDvrStatusGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "oldestEvent": {
          "type": "string",
          "description": "Date of the oldest event."
        },
        "channels": {
          "type": "array",
          "description": "Array of channels' statuses.",
          "items": {
            "type": "object",
            "properties": {
              "number": {
                "type": "integer",
                "description": "The channel number."
              },
              "latestEvent": {
                "type": "string",
                "description": "Date and time of the latest event (ISO format)."
              },
              "status": {
                "type": "integer",
                "description": "The channel status code."
              },
              "desc": {
                "type": "string",
                "description": "The channel status description."
              }
            },
            "required": ["number", "latestEvent", "status", "desc"]
          }
        }
      },
      "required": ["deviceId", "oldestEvent", "channels"]
    },
    "NetworkingCyclePortPowerRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "ports": {
          "type": "array",
          "description": "Array of port numbers to cycle power on.",
          "items": { "type": "integer" }
        }
      },
      "required": ["deviceId", "ports"]
    },
    "NetworkingCyclePortPower": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID" }
      },
      "required": ["deviceId"]
    },
    "NetworkingPortConfigGetRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The device's device ID"
        }
      },
      "required": ["deviceId"]
    },
    "NetworkingPortConfigGet": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The device's device ID"
        },
        "wanPorts": {
          "type": "array",
          "description": "Array of WAN port objects",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User-defined name of WAN port"
              },
              "setSpeed": {
                "enum": [
                  "Auto1Gbps",
                  "1Gbps",
                  "100Mbps",
                  "10Mbps",
                  "Disabled",
                  "DISABLED",
                  "AUTO",
                  "100",
                  "10",
                  "0"
                ],
                "type": "string",
                "description": "Speed selection of WAN port"
              },
              "actualSpeed": {
                "enum": [
                  "1Gbps",
                  "100Mbps",
                  "10Mbps",
                  "100",
                  "10",
                  "0",
                  "Disabled",
                  "DISABLED",
                  "NOTCONNECTED"
                ],
                "type": "string",
                "description": "Actual negotiated speed of the WAN port"
              },
              "duplex": {
                "enum": ["AUTO", "FULL", "HALF", "Full", "Half", "Disabled"],
                "type": "string",
                "description": "Duplex mode for WAN port"
              },
              "tx": {
                "type": "integer",
                "description": "The number of bytes sent."
              },
              "rx": {
                "type": "integer",
                "description": "The number of bytes received."
              },
              "isUp": {
                "type": "boolean",
                "description": "If the WAN port is currently up."
              },
              "setSpeedOptions": {
                "type": "array",
                "description": "Array of names and values for setSpeed that are supported for the given port.",
                "items": {
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "The display name of a supported setSpeed value for this port"
                    },
                    "requestValue": {
                      "type": "string",
                      "description": "The request value of a supported setSpeed for this port"
                    }
                  },
                  "required": ["displayName", "requestValue"]
                }
              },
              "duplexOptions": {
                "type": "array",
                "description": "Array of names and values for duplex that are supported for the given port.",
                "items": {
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "The display name of a supported duplex mode for this port"
                    },
                    "requestValue": {
                      "type": "string",
                      "description": "The request value of a supported duplex mode for this port"
                    }
                  },
                  "required": ["displayName", "requestValue"]
                }
              }
            },
            "required": [
              "name",
              "setSpeed",
              "actualSpeed",
              "duplex",
              "tx",
              "rx",
              "isUp",
              "setSpeedOptions",
              "duplexOptions"
            ]
          }
        },
        "lanPorts": {
          "type": "array",
          "description": "Array of LAN port objects",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User-defined name of LAN port"
              },
              "setSpeed": {
                "enum": [
                  "Auto1Gbps",
                  "1Gbps",
                  "100Mbps",
                  "10Mbps",
                  "Disabled",
                  "DISABLED",
                  "AUTO",
                  "100",
                  "10",
                  "0"
                ],
                "type": "string",
                "description": "Speed selection of LAN port"
              },
              "actualSpeed": {
                "enum": [
                  "1Gbps",
                  "100Mbps",
                  "10Mbps",
                  "100",
                  "10",
                  "0",
                  "Disabled",
                  "DISABLED",
                  "NOTCONNECTED"
                ],
                "type": "string",
                "description": "Actual negotiated speed of the LAN port"
              },
              "duplex": {
                "enum": ["AUTO", "FULL", "HALF", "Full", "Half", "Disabled"],
                "type": "string",
                "description": "Duplex mode for LAN port"
              },
              "tx": {
                "type": "integer",
                "description": "The number of bytes sent."
              },
              "rx": {
                "type": "integer",
                "description": "The number of bytes received."
              },
              "isUp": {
                "type": "boolean",
                "description": "If the LAN port is currently up."
              },
              "poeVoltage": {
                "type": "number",
                "description": "PoE voltage in volts."
              },
              "poeCurrent": {
                "type": "number",
                "description": "PoE current in milliamps (mA)."
              },
              "poePower": {
                "type": "number",
                "description": "Watts of power consumption."
              },
              "poeDirection": {
                "enum": ["IN", "OUT"],
                "type": "string",
                "description": "Indicates whether the port is PoE IN or PoE OUT."
              },
              "poeSupplyPower": {
                "type": "number",
                "description": "The amount of PoE power supplied to the PoE IN port in watts (0 if not PoE IN)."
              },
              "vlan": { "type": "integer", "description": "The VLAN ID." },
              "aggregationGroup": {
                "type": "string",
                "description": "The aggregation group of the port."
              },
              "isSfp": {
                "type": "boolean",
                "description": "Indicates whether the port is an SFP port."
              },
              "isPoeEnabled": {
                "type": "boolean",
                "description": "Indicates whether PoE is enabled on the port (this means it has PoE and has power being consumed)."
              },
              "errorsSent": {
                "type": "integer",
                "description": "The count of bytes of errors sent."
              },
              "errorsReceived": {
                "type": "integer",
                "description": "The count of bytes of errors received."
              },
              "setSpeedOptions": {
                "type": "array",
                "description": "Array of names and values for setSpeed that are supported for the given port.",
                "items": {
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "The display name of a supported setSpeed value for this port"
                    },
                    "requestValue": {
                      "type": "string",
                      "description": "The request value of a supported setSpeed for this port"
                    }
                  },
                  "required": ["displayName", "requestValue"]
                }
              },
              "duplexOptions": {
                "type": "array",
                "description": "Array of names and values for duplex that are supported for the given port.",
                "items": {
                  "type": "object",
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "description": "The display name of a supported duplex mode for this port"
                    },
                    "requestValue": {
                      "type": "string",
                      "description": "The request value of a supported duplex mode for this port"
                    }
                  },
                  "required": ["displayName", "requestValue"]
                }
              }
            },
            "required": [
              "name",
              "setSpeed",
              "actualSpeed",
              "duplex",
              "tx",
              "rx",
              "isUp",
              "setSpeedOptions",
              "duplexOptions"
            ]
          }
        }
      },
      "required": ["deviceId", "wanPorts", "lanPorts"]
    },
    "NetworkingPortConfigSetRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The device's device ID"
        },
        "wanPorts": {
          "type": "array",
          "description": "Array of WAN port objects",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User-defined name of WAN port"
              },
              "setSpeed": {
                "enum": [
                  "Auto1Gbps",
                  "1Gbps",
                  "100Mbps",
                  "10Mbps",
                  "Disabled",
                  "DISABLED",
                  "AUTO",
                  "100",
                  "10",
                  "0"
                ],
                "type": "string",
                "description": "Speed selection of WAN port. Values are device specific and options are provided in the response from get port config."
              },
              "duplex": {
                "enum": ["AUTO", "FULL", "HALF", "Full", "Half", "Disabled"],
                "type": "string",
                "description": "Duplex mode for WAN port"
              }
            },
            "required": ["name", "setSpeed", "duplex"]
          }
        },
        "lanPorts": {
          "type": "array",
          "description": "Array of LAN port objects",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User-defined name of LAN port"
              },
              "setSpeed": {
                "enum": [
                  "Auto1Gbps",
                  "1Gbps",
                  "100Mbps",
                  "10Mbps",
                  "Disabled",
                  "DISABLED",
                  "AUTO",
                  "100",
                  "10",
                  "0"
                ],
                "type": "string",
                "description": "Speed selection of LAN port. Values are device specific and options are provided in the response from get port config."
              },
              "duplex": {
                "enum": ["AUTO", "FULL", "HALF", "Full", "Half", "Disabled"],
                "type": "string",
                "description": "Duplex mode for LAN port"
              }
            },
            "required": ["name", "setSpeed", "duplex"]
          }
        }
      },
      "required": ["deviceId", "wanPorts", "lanPorts"]
    },
    "NetworkingPortConfigSet": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The device's device ID"
        }
      },
      "required": ["deviceId"]
    },
    "Activate_UserRequest": {
      "properties": {
        "userId": {
          "type": "string",
          "description": "User ID of the OvrC Connect account."
        },
        "privacyPolicy": {
          "type": "boolean",
          "description": "Privacy Policy enablement."
        },
        "termsOfService": {
          "type": "boolean",
          "description": "Terms of service enablement."
        }
      },
      "required": ["userId", "privacyPolicy", "termsOfService"]
    },
    "Change_PasswordRequest": {
      "properties": {
        "email": {
          "type": "string",
          "description": "Email for logging in Ovrc Connect."
        },
        "newpassword": {
          "type": "string",
          "description": "New password for logging in Ovrc Connect."
        },
        "oldpassword": {
          "type": "string",
          "description": "Old password for logging in Ovrc Connect."
        }
      },
      "required": ["email", "newpassword", "oldpassword"]
    },
    "Commands_GetRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "Database GUID of location for which Connect commands are being requested."
        }
      },
      "required": ["locationId"]
    },
    "Commands_Get": {
      "properties": {
        "customerId": {
          "type": "string",
          "description": "Database GUID of customer."
        },
        "companyId": {
          "type": "string",
          "description": "Database GUID of dealer."
        },
        "delayAfterRun": {
          "type": "integer",
          "description": "The delay in ms before a command can be run again."
        },
        "displayOrder": {
          "type": "integer",
          "description": "Order of display"
        },
        "icon": {
          "type": "string",
          "description": "Indicates icon for a command."
        },
        "locationId": {
          "type": "string",
          "description": "Database GUID of the location."
        },
        "commandId": {
          "type": "string",
          "description": "Database GUID of a command."
        },
        "continueOnFail": {
          "type": "boolean",
          "description": "Indicates if the command will continue in the event that a step fails."
        },
        "lastRun": {
          "type": "string",
          "description": "ISO date of last run time."
        },
        "name": {
          "type": "string",
          "description": "User-provided name of the command."
        },
        "status": {
          "enum": [
            "DONE",
            "DONEWITHERRORS",
            "WAITING",
            "EXECUTING",
            "AVAILABLE",
            "UNAVAILABLE"
          ],
          "type": "string",
          "description": "Status of the command."
        },
        "steps": {
          "type": "array",
          "description": "Steps of command.",
          "items": {
            "type": "object",
            "properties": {
              "action": {
                "enum": [
                  "resetOutlets",
                  "resetAllOutlets",
                  "reboot",
                  "resetPorts"
                ],
                "type": "string",
                "description": "Action of step."
              },
              "continueOnFail": {
                "type": "boolean",
                "description": "Indicates whether to continue on fail."
              },
              "delay": { "type": "string", "description": "Delay of step" },
              "deviceId": {
                "type": "string",
                "description": "DeviceId of affected device."
              },
              "outlets": {
                "type": "array",
                "description": "Outlets to affect",
                "items": { "type": "integer" }
              }
            },
            "required": ["action", "delay", "deviceId"]
          }
        }
      },
      "required": [
        "customerId",
        "companyId",
        "delayAfterRun",
        "displayOrder",
        "icon",
        "locationId",
        "commandId",
        "name",
        "status",
        "steps"
      ]
    },
    "Commands_PostRequest": {
      "properties": {
        "commandId": {
          "type": "string",
          "description": "CommandId of command which needs to be run."
        }
      },
      "required": ["commandId"]
    },
    "Companies_Get": {
      "properties": {
        "companyId": { "type": "string", "description": "ID of the company." },
        "name": {
          "type": "string",
          "description": "Internal name of your company account."
        },
        "accountNum": {
          "type": "string",
          "description": "Internal OvrC code for your company account."
        },
        "erpCode": {
          "type": "string",
          "description": "Your SnapAV account number, if linked."
        },
        "licenseType": {
          "enum": ["basic", "pro"],
          "type": "string",
          "description": "License type for your account."
        },
        "logoUrl": {
          "type": "string",
          "description": "If available, the URL to your company logo for OvrC Connect."
        },
        "contactName": {
          "type": "string",
          "description": "If available, the name you want to display externally to your customers on OvrC Connect."
        },
        "phone": {
          "type": "string",
          "description": "If available, the phone number you want to display externally to your customers on OvrC Connect."
        },
        "phoneExtension": {
          "type": "string",
          "description": "If available, the phone extension you want to display externally to your customers on OvrC Connect."
        },
        "email": {
          "type": "string",
          "description": "If available, the email you want to display externally to your customers on OvrC Connect."
        },
        "contentFilteringEnabled": {
          "type": "boolean",
          "description": "Is Content Filtering enabled on Ovrc Connect."
        },
        "macroCommandsEnabled": {
          "type": "boolean",
          "description": "Are Commands enabled on Ovrc Connect."
        },
        "parentalControlsEnabled": {
          "type": "boolean",
          "description": "Is Parental Control enabled on Ovrc Connect."
        }
      },
      "required": ["companyId", "name", "accountNum", "licenseType"]
    },
    "Complete_Forgot_PasswordRequest": {
      "properties": {
        "forgotPasswordId": {
          "type": "string",
          "description": "Forgot Password request Id for the OvrC Connect account."
        },
        "password": {
          "type": "string",
          "description": "New password for the OvrC Connect account."
        }
      },
      "required": ["forgotPasswordId", "password"]
    },
    "Content_FilteringRequest": {
      "properties": {
        "locationId": {
          "type": "string",
          "description": "Database GUID of location to affect"
        },
        "enableContentFiltering": {
          "type": "boolean",
          "description": "Indicates if content filtering is currently enabled."
        },
        "contentFilteringOption": {
          "enum": ["BASIC", "STRICT", "MEDIUM", "LIGHT"],
          "type": "string",
          "description": "Indicates level of content filtering."
        }
      },
      "required": ["locationId", "enableContentFiltering"]
    },
    "Content_Filtering": {
      "properties": {
        "isContentFilteringEnabled": {
          "type": "boolean",
          "description": "Indicates if content filtering is currently enabled."
        },
        "contentFilteringOption": {
          "enum": ["BASIC", "STRICT", "MEDIUM", "LIGHT"],
          "type": "string",
          "description": "Indicates level of content filtering."
        },
        "locationId": {
          "type": "string",
          "description": "Database GUID of the Location."
        }
      },
      "required": ["isContentFilteringEnabled", "locationId"]
    },
    "Customers": {
      "properties": {
        "customerId": {
          "type": "string",
          "description": "Id of the customer using Ovrc Connect."
        },
        "contentFilteringEnabled": {
          "type": "boolean",
          "description": "Is Content Filtering enabled for Ovrc Connect."
        },
        "macroCommandsEnabled": {
          "type": "boolean",
          "description": "Are Commands enabled for Ovrc Connect."
        },
        "parentalControlsEnabled": {
          "type": "boolean",
          "description": "Are Parental Controls enabled for Ovrc Connect."
        }
      },
      "required": [
        "customerId",
        "contentFilteringEnabled",
        "macroCommandsEnabled",
        "parentalControlsEnabled"
      ]
    },
    "Forgot_PasswordRequest": {
      "properties": {
        "email": {
          "type": "string",
          "description": "Email address in OvrC Connect."
        }
      },
      "required": ["email"]
    },
    "LocationsRequest": {
      "properties": {
        "companyId": {
          "type": "string",
          "description": "of the Ovrc Connect User (dealerId)."
        },
        "customerId": {
          "type": "string",
          "description": "of the Ovrc Connect User."
        }
      },
      "required": ["companyId", "customerId"]
    },
    "Locations_Network_Client_Lists_GetRequest": {
      "properties": {
        "locationId": { "type": "string", "description": "ID of location" }
      }
    },
    "Locations_Network_Client_Lists_Get": {
      "properties": {
        "networkDevices": {
          "type": "array",
          "description": "List of device objects.",
          "items": {
            "type": "object",
            "properties": {
              "deviceId": {
                "type": "string",
                "description": "ID of device record."
              },
              "macAddress": {
                "type": "string",
                "description": "MAC Address of device."
              },
              "deviceName": {
                "type": "string",
                "description": "Name of device."
              },
              "type": {
                "enum": ["WAP", "ROUTER", "ROUTERHUB"],
                "type": "string",
                "description": "Type of device."
              },
              "connected": {
                "type": "string",
                "description": "Indicates if device is currently connected as reported by the database."
              }
            },
            "required": [
              "deviceId",
              "macAddress",
              "deviceName",
              "type",
              "connected"
            ]
          }
        },
        "wired": {
          "type": "array",
          "description": "List of wired client objects.",
          "items": {
            "type": "object",
            "properties": {
              "Name": {
                "type": "string",
                "description": "Name of client device"
              },
              "Ip": {
                "type": "string",
                "description": "IP address of client device"
              },
              "Mac": {
                "type": "string",
                "description": "MAC address of client device"
              },
              "Mfg": {
                "type": "string",
                "description": "Manufacture or client device"
              },
              "Res": {
                "type": "boolean",
                "description": "If DHCP is reserved for this client device : true."
              },
              "Online": {
                "type": "boolean",
                "description": "If device is currently online : true."
              },
              "Source": {
                "type": "string",
                "description": "Name of device that reported this client device"
              },
              "SourceMac": {
                "type": "string",
                "description": "MAC address of device that reported this client device."
              },
              "SourceType": {
                "enum": ["WAP", "ROUTER", "ROUTERHUB"],
                "type": "string",
                "description": "Type of device that is reporting this client device."
              }
            },
            "required": [
              "Name",
              "Ip",
              "Mac",
              "Mfg",
              "Res",
              "Online",
              "Source",
              "SourceMac",
              "SourceType"
            ]
          }
        },
        "wireless": {
          "type": "array",
          "description": "List of wired client objects.",
          "items": {
            "type": "object",
            "properties": {
              "Name": {
                "type": "string",
                "description": "Name of client device"
              },
              "Ip": {
                "type": "string",
                "description": "IP address of client device"
              },
              "Mac": {
                "type": "string",
                "description": "MAC address of client device"
              },
              "Mfg": {
                "type": "string",
                "description": "Manufacture or client device"
              },
              "OS": {
                "type": "string",
                "description": "Operating system of client device"
              },
              "Int": {
                "type": "string",
                "description": "Network interface of client device (i.e 2.4G, 5G"
              },
              "Ssid": {
                "type": "string",
                "description": "SSID to which client device is connected."
              },
              "Rssi": {
                "type": "number",
                "description": "Received signal strength indicator."
              },
              "Rx": { "type": "number", "description": "Receive bytes." },
              "Tx": { "type": "number", "description": "Transmit bytes." },
              "Source": {
                "type": "string",
                "description": "Name of device that reported this client device"
              },
              "SourceMac": {
                "type": "string",
                "description": "MAC address of device that reported this client device."
              },
              "SourceType": {
                "enum": ["WAP", "ROUTER", "ROUTERHUB"],
                "type": "string",
                "description": "Type of device that is reporting this client device."
              },
              "wirelessProfileName": {
                "type": "string",
                "description": "Name of wirelessProfile to which this device belongs."
              }
            },
            "required": [
              "Name",
              "Ip",
              "Mac",
              "Mfg",
              "OS",
              "Int",
              "Ssid",
              "Rssi",
              "Rx",
              "Tx",
              "Source",
              "SourceMac",
              "SourceType"
            ]
          }
        }
      },
      "required": ["networkDevices", "wired", "wireless"]
    },
    "LoginRequest": {
      "properties": {
        "email": {
          "type": "string",
          "description": "Email for logging in Ovrc Connect."
        },
        "password": {
          "type": "string",
          "description": "Password for logging in Ovrc Connect."
        }
      },
      "required": ["email", "password"]
    },
    "Remember_me_Get": {
      "properties": {
        "userId": { "type": "string", "description": "Ovrc Connect userId." },
        "username": {
          "type": "string",
          "description": "Ovrc Connect username (email) used for login."
        },
        "name": {
          "type": "string",
          "description": "Ovrc Connect user's name."
        },
        "status": {
          "enum": ["ENABLED", "DISABLED", "PENDING"],
          "type": "string",
          "description": "Ovrc Connect user's status."
        },
        "dealerId": {
          "type": "string",
          "description": "Ovrc Connect user's dealerId."
        },
        "companyId": {
          "type": "string",
          "description": "Ovrc Connect user's companyId."
        }
      },
      "required": [
        "userId",
        "username",
        "name",
        "status",
        "dealerId",
        "companyId"
      ]
    },
    "Run_ActionRequest": {
      "properties": {
        "action": {
          "enum": ["pause", "resume"],
          "type": "string",
          "description": "Indicates if user is trying to pause or resume schedule"
        },
        "wirelessProfileId": {
          "type": "string",
          "description": "ID of wireless profile to affect"
        },
        "customerId": { "type": "string", "description": "ID of customer" }
      },
      "required": ["action"]
    },
    "Send_EmailRequest": {
      "properties": {
        "body": {
          "type": "string",
          "description": "Body of the email message."
        },
        "email": {
          "type": "string",
          "description": "Email to contact customer about the issue."
        },
        "phone": {
          "type": "string",
          "description": "Phone number to contant customer about the issue."
        },
        "subject": {
          "type": "string",
          "description": "Subject of the email message."
        }
      },
      "required": ["body", "email", "phone", "subject"]
    },
    "Timezones": {
      "properties": {
        "items": {
          "type": "array",
          "description": "An array of objects with timezone data.",
          "items": {
            "type": "object",
            "properties": {
              "timezoneId": {
                "type": "string",
                "description": "Id of this timezone."
              },
              "name": {
                "type": "string",
                "description": "Name of this timezone."
              },
              "notes": {
                "type": "string",
                "description": "Notes for this timezone."
              },
              "offset": {
                "type": "number",
                "description": "Offset for this timezone."
              }
            },
            "required": ["timezoneId", "name", "notes", "offset"]
          }
        }
      },
      "required": ["items"]
    },
    "Wireless_Profile_Schedules_DeleteRequest": {
      "properties": {
        "ids": {
          "type": "array",
          "description": "Array of wirelessScheduleIds to be deleted",
          "items": { "type": "string" }
        }
      },
      "required": ["ids"]
    },
    "Wireless_Profile_Schedules_GetRequest": {
      "properties": {
        "wirelessProfileId": {
          "type": "string",
          "description": "The wireless profile id to find wireless schedules for."
        }
      },
      "required": ["wirelessProfileId"]
    },
    "Wireless_Profile_Schedules_Get": {
      "properties": {
        "items": {
          "type": "array",
          "description": "Array of wireless profile schedules found",
          "items": {
            "type": "object",
            "properties": {
              "wirelessScheduleId": {
                "type": "string",
                "description": "Database GUID of the wireless profile schedule to update"
              },
              "wirelessProfileId": {
                "type": "string",
                "description": "The parent wireless profile id for this wireless schedule."
              },
              "customerId": {
                "type": "string",
                "description": "The parent customer this wireless schedule belongs to."
              },
              "companyId": {
                "type": "string",
                "description": "The parent company this wireless schedule belongs to."
              },
              "userId": {
                "type": "string",
                "description": "The user which created this resource originally."
              },
              "scheduleName": {
                "type": "string",
                "description": "Name of the wireless profile schedule"
              },
              "isEnabled": {
                "type": "boolean",
                "description": "Is this wireless schedule enabled at the root level."
              },
              "timezone": {
                "type": "string",
                "description": "The timezone this wireless schedule is set for."
              },
              "weekdays": {
                "type": "object",
                "description": "Object containing schedule data for weekdays.",
                "properties": {
                  "isEnabled": {
                    "type": "boolean",
                    "description": "Is the weekdays schedule enabled."
                  },
                  "pauseTime": {
                    "type": "number",
                    "description": "The hour/minute in which this schedule should pause."
                  },
                  "resumeTime": {
                    "type": "number",
                    "description": "The hour/minute in which this schedule should resume."
                  },
                  "days": {
                    "type": "object",
                    "description": "Object that determines which days of the week this schedule applies to.",
                    "properties": {
                      "sunday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "monday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "tuesday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "wednesday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "thursday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "friday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "saturday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      }
                    },
                    "required": [
                      "sunday",
                      "monday",
                      "tuesday",
                      "wednesday",
                      "thursday",
                      "friday",
                      "saturday"
                    ]
                  }
                },
                "required": ["isEnabled", "pauseTime", "resumeTime", "days"]
              },
              "weekends": {
                "type": "object",
                "description": "Object containing schedule data for weekends.",
                "properties": {
                  "isEnabled": {
                    "type": "boolean",
                    "description": "Is the weekends schedule enabled."
                  },
                  "pauseTime": {
                    "type": "number",
                    "description": "The hour/minute in which this schedule should pause."
                  },
                  "resumeTime": {
                    "type": "number",
                    "description": "The hour/minute in which this schedule should resume."
                  },
                  "days": {
                    "type": "object",
                    "description": "Object that determines which days of the week this schedule applies to.",
                    "properties": {
                      "sunday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "monday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "tuesday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "wednesday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "thursday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "friday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "saturday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      }
                    },
                    "required": [
                      "sunday",
                      "monday",
                      "tuesday",
                      "wednesday",
                      "thursday",
                      "friday",
                      "saturday"
                    ]
                  }
                },
                "required": ["isEnabled", "pauseTime", "resumeTime", "days"]
              }
            },
            "required": [
              "wirelessScheduleId",
              "wirelessProfileId",
              "customerId",
              "companyId",
              "userId",
              "scheduleName",
              "isEnabled",
              "timezone",
              "weekdays",
              "weekends"
            ]
          }
        }
      },
      "required": ["items"]
    },
    "Wireless_Profile_Schedules_PostRequest": {
      "properties": {
        "wirelessProfileId": {
          "type": "string",
          "description": "Database GUID of parent wireless profile"
        },
        "items": {
          "type": "array",
          "description": "Array of wireless profile schedules to create",
          "items": {
            "type": "object",
            "properties": {
              "scheduleName": {
                "type": "string",
                "description": "Name of the wireless schedule"
              },
              "isEnabled": {
                "type": "boolean",
                "description": "Is this wireless schedule enabled at the root level."
              },
              "timezone": {
                "type": "string",
                "description": "The timezone this wireless schedule is set for."
              },
              "weekdays": {
                "type": "object",
                "description": "Object containing schedule data for weekdays.",
                "properties": {
                  "isEnabled": {
                    "type": "boolean",
                    "description": "Is the weekdays schedule enabled."
                  },
                  "pauseTime": {
                    "type": "number",
                    "description": "The hour/minute in which this schedule should pause."
                  },
                  "resumeTime": {
                    "type": "number",
                    "description": "The hour/minute in which this schedule should resume."
                  },
                  "days": {
                    "type": "object",
                    "description": "Object that determines which days of the week this schedule applies to.",
                    "properties": {
                      "sunday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "monday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "tuesday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "wednesday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "thursday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "friday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "saturday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      }
                    },
                    "required": [
                      "sunday",
                      "monday",
                      "tuesday",
                      "wednesday",
                      "thursday",
                      "friday",
                      "saturday"
                    ]
                  }
                },
                "required": ["isEnabled", "pauseTime", "resumeTime", "days"]
              },
              "weekends": {
                "type": "object",
                "description": "Object containing schedule data for weekends.",
                "properties": {
                  "isEnabled": {
                    "type": "boolean",
                    "description": "Is the weekends schedule enabled."
                  },
                  "pauseTime": {
                    "type": "number",
                    "description": "The hour/minute in which this schedule should pause."
                  },
                  "resumeTime": {
                    "type": "number",
                    "description": "The hour/minute in which this schedule should resume."
                  },
                  "days": {
                    "type": "object",
                    "description": "Object that determines which days of the week this schedule applies to.",
                    "properties": {
                      "sunday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "monday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "tuesday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "wednesday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "thursday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "friday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "saturday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      }
                    },
                    "required": [
                      "sunday",
                      "monday",
                      "tuesday",
                      "wednesday",
                      "thursday",
                      "friday",
                      "saturday"
                    ]
                  }
                },
                "required": ["isEnabled", "pauseTime", "resumeTime", "days"]
              }
            },
            "required": [
              "scheduleName",
              "isEnabled",
              "timezone",
              "weekdays",
              "weekends"
            ]
          }
        }
      },
      "required": ["wirelessProfileId", "items"]
    },
    "Wireless_Profile_Schedules_Post": {
      "properties": {
        "ids": {
          "type": "array",
          "description": "Array of database GUIDs for the wireless profile schedules that were created.",
          "items": { "type": "object" }
        }
      },
      "required": ["ids"]
    },
    "Wireless_Profile_Schedules_PutRequest": {
      "properties": {
        "items": {
          "type": "array",
          "description": "Array of wireless profile schedules to update",
          "items": {
            "type": "object",
            "properties": {
              "wirelessScheduleId": {
                "type": "string",
                "description": "Database GUID of the wireless profile schedule to update"
              },
              "scheduleName": {
                "type": "string",
                "description": "Name of the wireless profile schedule"
              },
              "isEnabled": {
                "type": "boolean",
                "description": "Is this wireless schedule enabled at the root level."
              },
              "timezone": {
                "type": "string",
                "description": "The timezone this wireless schedule is set for."
              },
              "weekdays": {
                "type": "object",
                "description": "Object containing schedule data for weekdays.",
                "properties": {
                  "isEnabled": {
                    "type": "boolean",
                    "description": "Is the weekdays schedule enabled."
                  },
                  "pauseTime": {
                    "type": "number",
                    "description": "The hour/minute in which this schedule should pause."
                  },
                  "resumeTime": {
                    "type": "number",
                    "description": "The hour/minute in which this schedule should resume."
                  },
                  "days": {
                    "type": "object",
                    "description": "Object that determines which days of the week this schedule applies to.",
                    "properties": {
                      "sunday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "monday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "tuesday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "wednesday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "thursday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "friday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "saturday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      }
                    },
                    "required": [
                      "sunday",
                      "monday",
                      "tuesday",
                      "wednesday",
                      "thursday",
                      "friday",
                      "saturday"
                    ]
                  }
                },
                "required": ["isEnabled", "pauseTime", "resumeTime", "days"]
              },
              "weekends": {
                "type": "object",
                "description": "Object containing schedule data for weekends.",
                "properties": {
                  "isEnabled": {
                    "type": "boolean",
                    "description": "Is the weekends schedule enabled."
                  },
                  "pauseTime": {
                    "type": "number",
                    "description": "The hour/minute in which this schedule should pause."
                  },
                  "resumeTime": {
                    "type": "number",
                    "description": "The hour/minute in which this schedule should resume."
                  },
                  "days": {
                    "type": "object",
                    "description": "Object that determines which days of the week this schedule applies to.",
                    "properties": {
                      "sunday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "monday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "tuesday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "wednesday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "thursday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "friday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "saturday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      }
                    },
                    "required": [
                      "sunday",
                      "monday",
                      "tuesday",
                      "wednesday",
                      "thursday",
                      "friday",
                      "saturday"
                    ]
                  }
                },
                "required": ["isEnabled", "pauseTime", "resumeTime", "days"]
              }
            },
            "required": [
              "wirelessScheduleId",
              "scheduleName",
              "isEnabled",
              "timezone",
              "weekdays",
              "weekends"
            ]
          }
        }
      },
      "required": ["items"]
    },
    "Wireless_Profile_Schedules_Put": {
      "properties": {
        "ids": {
          "type": "array",
          "description": "Array of database GUIDs for the wireless profile schedules that were updated.",
          "items": { "type": "object" }
        }
      },
      "required": ["ids"]
    },
    "Wireless_Profiles_DeleteRequest": {
      "properties": {
        "ids": {
          "type": "array",
          "description": "Array of wirelessProfileIds to be deleted",
          "items": { "type": "string" }
        }
      },
      "required": ["ids"]
    },
    "Wireless_Profiles_GetRequest": {
      "properties": {
        "customerID": {
          "type": "string",
          "description": "Customer ID of the Wireless Profiles you'd like to see."
        }
      },
      "required": ["customerID"]
    },
    "Wireless_Profiles_Get": {
      "properties": {
        "wirelessProfileId": {
          "type": "string",
          "description": "Wireless Profile ID."
        },
        "name": {
          "type": "string",
          "description": "Name of the wireless profile"
        },
        "status": {
          "enum": ["PAUSED", "RESUMED"],
          "type": "string",
          "description": "Indicates if profile is currently PAUSED or RESUMED"
        },
        "devices": {
          "type": "array",
          "description": "Slice of devices for wireless profile",
          "items": {
            "type": "object",
            "properties": {
              "name": { "type": "string", "description": "Name of device" },
              "macAddress": {
                "type": "string",
                "description": "Mac address of device"
              },
              "os": { "type": "string", "description": "OS of device" },
              "manufacturer": {
                "type": "string",
                "description": "Manufacturer of device"
              }
            },
            "required": ["name", "macAddress", "os", "manufacturer"]
          }
        },
        "nextUp": {
          "type": "object",
          "description": "Object indicating next action for wireless profile",
          "properties": {
            "nextRun": {
              "type": "string",
              "description": "Indicates next run time"
            },
            "action": {
              "type": "string",
              "description": "Indicates next run action"
            },
            "nextRunDisplay": {
              "type": "string",
              "description": "User-friendly format of next run time"
            }
          },
          "required": ["nextRun", "action", "nextRunDisplay"]
        }
      },
      "required": ["wirelessProfileId", "name", "status", "devices", "nextUp"]
    },
    "Wireless_Profiles_PostRequest": {
      "properties": {
        "customerId": {
          "type": "string",
          "description": "Database GUID of parent customer"
        },
        "items": {
          "type": "array",
          "description": "Slice of wireless profiles",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the customer"
              },
              "devices": {
                "type": "array",
                "description": "Slice of devices for wireless profile",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of device"
                    },
                    "macAddress": {
                      "type": "string",
                      "description": "Mac address of device"
                    },
                    "os": { "type": "string", "description": "OS of device" },
                    "manufacturer": {
                      "type": "string",
                      "description": "Manufacturer of device"
                    }
                  },
                  "required": ["name", "macAddress", "os", "manufacturer"]
                }
              }
            },
            "required": ["name", "devices"]
          }
        }
      },
      "required": ["customerId", "items"]
    },
    "Wireless_Profiles_PutRequest": {
      "properties": {
        "customerId": {
          "type": "string",
          "description": "Database GUID of parent customer"
        },
        "items": {
          "type": "array",
          "description": "Slice of wireless profiles",
          "items": {
            "type": "object",
            "properties": {
              "wirelessProfileId": {
                "type": "string",
                "description": "Database GUID of profile to update"
              },
              "name": {
                "type": "string",
                "description": "Name of the customer"
              },
              "devices": {
                "type": "array",
                "description": "Slice of devices for wireless profile",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of device"
                    },
                    "macAddress": {
                      "type": "string",
                      "description": "Mac address of device"
                    },
                    "os": { "type": "string", "description": "OS of device" },
                    "manufacturer": {
                      "type": "string",
                      "description": "Manufacturer of device"
                    }
                  }
                }
              }
            },
            "required": ["wirelessProfileId"]
          }
        }
      },
      "required": ["customerId", "items"]
    },
    "PakEdgeWapMACFilterSettingsGetRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The device's device ID"
        }
      },
      "required": ["deviceId"]
    },
    "PakEdgeWapMACFilterSettingsUpdateRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The device's device ID"
        },
        "macfilters": {
          "type": "array",
          "description": "An array of MAC Addresses to black list. Empty array to clear.",
          "items": { "type": "string" }
        }
      },
      "required": ["deviceId", "macfilters"]
    },
    "PakEdgeWapWaWirelessSettingsGetRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The device's device ID"
        }
      },
      "required": ["deviceId"]
    },
    "PakEdgeWapWaWirelessSettingsUpdateRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The device's device ID"
        }
      },
      "required": ["deviceId"]
    },
    "PakEdgeWapWirelessSettingsGetRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The device's device ID"
        }
      },
      "required": ["deviceId"]
    },
    "PakEdgeWapWirelessSettingsUpdateRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The device's device ID"
        }
      },
      "required": ["deviceId"]
    },
    "RouterAutoRebootScheduleGetRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The device's device ID"
        }
      },
      "required": ["deviceId"]
    },
    "RouterAutoRebootScheduleGet": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The device's device ID"
        },
        "dateTime": {
          "type": "string",
          "description": "The timestamp of request."
        },
        "enabled": {
          "type": "boolean",
          "description": "Indicates if the schedule is enabled."
        },
        "hasUnsupportedSchedule": {
          "type": "boolean",
          "description": "Indicates if the device has a schedule that is unsupported through OvrC"
        },
        "time": {
          "type": "string",
          "description": "Indicates the time of day the schedule should run (Format: HH:mm)."
        },
        "weekdays": {
          "enum": [
            "MONDAY",
            "TUESDAY",
            "WEDNESDAY",
            "THURSDAY",
            "FRIDAY",
            "SATURDAY",
            "SUNDAY"
          ],
          "type": "array",
          "description": "The days of the weeks the schedule should run.",
          "items": { "type": "string" }
        }
      },
      "required": [
        "deviceId",
        "enabled",
        "hasUnsupportedSchedule",
        "time",
        "weekdays"
      ]
    },
    "RouterAutoRebootScheduleSetRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The device's device ID"
        },
        "enabled": {
          "type": "boolean",
          "description": "Indicates if the schedule is enabled."
        },
        "time": {
          "type": "string",
          "description": "Indicates the time of day the schedule should run (Format: HH:mm)."
        },
        "weekdays": {
          "enum": [
            "MONDAY",
            "TUESDAY",
            "WEDNESDAY",
            "THURSDAY",
            "FRIDAY",
            "SATURDAY",
            "SUNDAY"
          ],
          "type": "array",
          "description": "The days of the weeks the schedule should run.",
          "items": { "type": "string" }
        }
      },
      "required": ["deviceId", "enabled", "time", "weekdays"]
    },
    "RouterAutoRebootScheduleSet": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The device's device ID"
        }
      },
      "required": ["deviceId"]
    },
    "RouterDHCPReservationGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID" }
      },
      "required": ["deviceId"]
    },
    "RouterDHCPReservationGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID" },
        "reservations": {
          "type": "array",
          "description": "Array of reservation objects.",
          "items": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean",
                "description": "Indicates if reservation is to be enabled, or disabled."
              },
              "description": {
                "type": "string",
                "description": "Name for this reservation, 63 character max."
              },
              "mac": {
                "type": "string",
                "description": "MAC address of connected client."
              },
              "ip": {
                "type": "string",
                "description": "Ipv4 Address of connected client."
              }
            },
            "required": ["enabled", "description", "mac", "ip"]
          }
        }
      },
      "required": ["deviceId", "reservations"]
    },
    "RouterDHCPReservationSetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID" },
        "reservations": {
          "type": "array",
          "description": "Array of reservation objects.",
          "items": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean",
                "description": "Indicates if reservation is to be enabled, or disabled."
              },
              "description": {
                "type": "string",
                "description": "Name for this reservation, 63 character max."
              },
              "mac": {
                "type": "string",
                "description": "MAC address of connected client."
              },
              "ip": {
                "type": "string",
                "description": "Ipv4 Address of connected client."
              }
            },
            "required": ["enabled", "description", "mac", "ip"]
          }
        }
      },
      "required": ["deviceId", "reservations"]
    },
    "RouterDHCPReservationSet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID" }
      },
      "required": ["deviceId"]
    },
    "RouterPortForwardingGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID" }
      },
      "required": ["deviceId"]
    },
    "RouterPortForwardingGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID" },
        "usesSingleInternalPort": {
          "type": "boolean",
          "description": "True if the device only supports a single internal port, and not a range. (will only be present for ANR devices)"
        },
        "rules": {
          "type": "array",
          "description": "Array of rule objects.",
          "items": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean",
                "description": "Indicates if the rule is enabled."
              },
              "description": {
                "type": "string",
                "description": "Description of the rule."
              },
              "protocol": {
                "enum": ["TCP", "UDP", "BOTH"],
                "type": "string",
                "description": "The protocol for the port ('TCP'/'UDP'/'BOTH')."
              },
              "externalPortRangeStart": {
                "type": "number",
                "description": "Start of the external port range to forward."
              },
              "externalPortRangeEnd": {
                "type": "number",
                "description": "End of the external port range to forward."
              },
              "internalPortRangeStart": {
                "type": "number",
                "description": "Start of the internal port range to forward."
              },
              "internalPortRangeEnd": {
                "type": "number",
                "description": "End of the internal port range to forward."
              },
              "internalIP": {
                "type": "string",
                "description": "The internal IP address (IPv4)."
              },
              "wanPort": {
                "type": "number",
                "description": "The WAN port number to forward from."
              },
              "source": {
                "enum": ["User", "UPnP"],
                "type": "string",
                "description": "The origin of the rule (will show for anr devices)."
              }
            },
            "required": [
              "enabled",
              "description",
              "protocol",
              "externalPortRangeStart",
              "externalPortRangeEnd",
              "internalPortRangeStart",
              "internalPortRangeEnd",
              "internalIP",
              "wanPort"
            ]
          }
        }
      },
      "required": ["deviceId", "rules"]
    },
    "RouterPortForwardingSetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID" },
        "rules": {
          "type": "array",
          "description": "Array of rule objects.",
          "items": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean",
                "description": "Indicates if the rule is enabled."
              },
              "description": {
                "type": "string",
                "description": "Description of the rule."
              },
              "protocol": {
                "enum": ["TCP", "UDP", "BOTH"],
                "type": "string",
                "description": "The protocol for the port ('TCP'/'UDP'/'BOTH')."
              },
              "externalPortRangeStart": {
                "type": "number",
                "description": "Start of the external port range to forward."
              },
              "externalPortRangeEnd": {
                "type": "number",
                "description": "End of the external port range to forward."
              },
              "internalPortRangeStart": {
                "type": "number",
                "description": "Start of the internal port range to forward."
              },
              "internalPortRangeEnd": {
                "type": "number",
                "description": "End of the internal port range to forward."
              },
              "internalIP": {
                "type": "string",
                "description": "The internal IP address (IPv4)."
              },
              "wanPort": {
                "type": "number",
                "description": "The WAN port number to forward from."
              }
            },
            "required": [
              "enabled",
              "description",
              "protocol",
              "externalPortRangeStart",
              "externalPortRangeEnd",
              "internalPortRangeStart",
              "internalPortRangeEnd",
              "internalIP",
              "wanPort"
            ]
          }
        }
      },
      "required": ["deviceId", "rules"]
    },
    "RouterPortForwardingSet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID" }
      },
      "required": ["deviceId"]
    },
    "RouterSecurityListReadRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "GUID of the device." }
      },
      "required": ["deviceId"]
    },
    "RouterSecurityListRead": {
      "properties": {
        "deviceId": { "type": "string", "description": "GUID of the device." },
        "blacklist": {
          "type": "object",
          "description": "Blacklist object.",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Indicates if blacklist is enabled."
            },
            "devices": {
              "type": "array",
              "description": "MAC address of devices currently on the blacklist.",
              "items": { "type": "string" }
            }
          },
          "required": ["enabled", "devices"]
        },
        "whitelist": {
          "type": "object",
          "description": "Whitelist object.",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Indicates if whitelist is enabled."
            },
            "devices": {
              "type": "array",
              "description": "MAC address of devices currently on whitelist.",
              "items": { "type": "string" }
            }
          },
          "required": ["enabled", "devices"]
        }
      },
      "required": ["deviceId", "blacklist", "whitelist"]
    },
    "RouterSecurityListSetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "GUID of the device." },
        "blacklist": {
          "type": "object",
          "description": "Blacklist object.",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Indicates if blacklist is enabled."
            },
            "devices": {
              "type": "array",
              "description": "MAC address of devices currently on the blacklist.",
              "items": { "type": "string" }
            }
          },
          "required": ["enabled", "devices"]
        },
        "whitelist": {
          "type": "object",
          "description": "Whitelist object.",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Indicates if whitelist is enabled."
            },
            "devices": {
              "type": "array",
              "description": "MAC address of devices currently on whitelist.",
              "items": { "type": "string" }
            }
          },
          "required": ["enabled", "devices"]
        }
      },
      "required": ["deviceId", "blacklist", "whitelist"]
    },
    "RouterSecurityListSet": {
      "properties": {
        "deviceId": { "type": "string", "description": "GUID of the device." }
      },
      "required": ["deviceId"]
    },
    "RouterStatusReadRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Router's Device ID."
        }
      },
      "required": ["deviceId"]
    },
    "RouterStatusRead": {
      "properties": {
        "clients": {
          "type": "integer",
          "description": "The number of currently connected clients."
        },
        "activeWAN": {
          "enum": ["WAN1", "WAN2", "Both"],
          "type": "string",
          "description": "The active WAN ports."
        },
        "dateTime": {
          "type": "string",
          "description": "The timestamp (ISO date) of status update."
        },
        "system": {
          "type": "object",
          "description": "System info.",
          "properties": {
            "cpu": {
              "type": "integer",
              "description": "CPU usage percentage."
            },
            "memFree": {
              "type": "integer",
              "description": "Free memory in bytes."
            },
            "memUsed": {
              "type": "integer",
              "description": "Memory used in bytes."
            }
          }
        }
      },
      "required": ["clients", "activeWAN"]
    },
    "RouterWANSettingsGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "RouterWANSettingsGet": {
      "properties": {
        "wanPorts": {
          "type": "array",
          "description": "Slice of settings for each WAN port in port order.",
          "items": {
            "type": "object",
            "properties": {
              "status": {
                "enum": ["PRIMARY", "BACKUP"],
                "type": "string",
                "description": "Shows whether the WAN is the primary or backup."
              },
              "connection": {
                "enum": ["DHCP", "STATIC", "PPPOE", "PPTP", "TBRIDGE"],
                "type": "string",
                "description": "Specifies WAN connection type."
              },
              "mac": {
                "type": "string",
                "description": "MAC address of the WAN."
              },
              "ip": { "type": "string", "description": "WAN IP address." },
              "mask": { "type": "string", "description": "WAN Subnet Mask." },
              "gateway": {
                "type": "string",
                "description": "WAN default gateway."
              },
              "dnsMode": {
                "enum": ["DHCP", "STATIC"],
                "type": "string",
                "description": "Obtain DNS automatically or via static dns servers."
              },
              "dns1": {
                "type": "string",
                "description": "Primary DNS server address."
              },
              "dns2": {
                "type": "string",
                "description": "Secondary DNS server address."
              },
              "username": {
                "type": "string",
                "description": "Username for PPPoE."
              },
              "password": {
                "type": "string",
                "description": "Password for PPPoE."
              },
              "internalIPRange": {
                "type": "string",
                "description": "Range of addresses for transparent bridge mode."
              }
            },
            "required": [
              "status",
              "connection",
              "mac",
              "ip",
              "mask",
              "gateway",
              "dnsMode",
              "dns1",
              "dns2"
            ]
          }
        }
      },
      "required": ["wanPorts"]
    },
    "RouterWANSettingsSetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "wanPorts": {
          "type": "array",
          "description": "Slice of settings for each WAN port in port order.",
          "items": {
            "type": "object",
            "properties": {
              "staticConnection": {
                "type": "array",
                "description": "Required for static connection; exclude for DHCP.",
                "items": {
                  "type": "object",
                  "properties": {
                    "ip": {
                      "type": "string",
                      "description": "WAN IP address."
                    },
                    "mask": {
                      "type": "string",
                      "description": "WAN Subnet Mask."
                    },
                    "gateway": {
                      "type": "string",
                      "description": "WAN default gateway."
                    }
                  },
                  "required": ["ip", "mask", "gateway"]
                }
              },
              "dnsMode": {
                "enum": ["DHCP", "STATIC"],
                "type": "string",
                "description": "Obtain DNS automatically or via static dns servers."
              },
              "dns1": {
                "type": "string",
                "description": "Primary DNS server address."
              },
              "dns2": {
                "type": "string",
                "description": "Secondary DNS server address."
              },
              "username": {
                "type": "string",
                "description": "Username for PPPoE."
              },
              "password": {
                "type": "string",
                "description": "Password for PPPoE."
              },
              "internalIPRange": {
                "type": "string",
                "description": "Range of addresses for transparent bridge mode."
              }
            },
            "required": ["dnsMode", "dns1", "dns2"]
          }
        }
      },
      "required": ["deviceId", "wanPorts"]
    },
    "RouterWirelessSettingsGetRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The device's device ID"
        }
      },
      "required": ["deviceId"]
    },
    "RouterWirelessSettingsGet": {
      "properties": {
        "bandsteering": {
          "type": "boolean",
          "description": "Indicates if bandsteering is enabled."
        },
        "radio_24": {
          "type": "object",
          "description": "Object containing details for the 2.4 Ghz radio.",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Indicates if the 2.4 Ghz radio is enabled."
            },
            "mode": {
              "enum": ["BGN", "GN", "BG", "N", "G", "B"],
              "type": "string",
              "description": "Indicates the wireless standard being used by this radio."
            },
            "channel": {
              "enum": [
                "AUTO",
                "CH1",
                "CH2",
                "CH3",
                "CH4",
                "CH5",
                "CH6",
                "CH7",
                "CH8",
                "CH9",
                "CH10",
                "CH11"
              ],
              "type": "string",
              "description": "Indicates the wireless channel used by this radio."
            },
            "bandwidth": {
              "enum": ["MHZ40", "MHZ2040", "MHZ20"],
              "type": "string",
              "description": "Indicates the bandwidth used by this radio."
            },
            "transmit_mW": {
              "type": "integer",
              "description": "Indicates the transmit power of this radio (mW)."
            },
            "transmit_dBm": {
              "type": "integer",
              "description": "Indicates the transmit dBm of this radio."
            },
            "ssid": {
              "type": "array",
              "description": "Object array containing ssid details",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Indicates the name of SSID."
                  },
                  "canDelete": {
                    "type": "boolean",
                    "description": "Indicates if the ssid can be deleted."
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Indicates if SSID is enabled."
                  },
                  "vlanId": {
                    "type": "integer",
                    "description": "Indicates the VLAN ID of SSID."
                  },
                  "broadcast": {
                    "type": "boolean",
                    "description": "Indicates if broadcasting of the SSID is enabled."
                  },
                  "clientIsolation": {
                    "type": "boolean",
                    "description": "Indicates if client isolation is enabled."
                  },
                  "guestNetwork": {
                    "type": "object",
                    "description": "Object containing guestNetwork details",
                    "properties": {
                      "gateway": {
                        "type": "string",
                        "description": "IPv4 gateway for guest network."
                      },
                      "subnet": {
                        "type": "string",
                        "description": "IPv4 subnet for guest network."
                      },
                      "clientStart": {
                        "type": "string",
                        "description": "Beginning of IPv4 client addresses for guest network."
                      },
                      "clientEnd": {
                        "type": "string",
                        "description": "End of IPv4 client addresses for guest network."
                      }
                    }
                  },
                  "security": {
                    "type": "object",
                    "description": "Object containing security details",
                    "properties": {
                      "wep": {
                        "type": "object",
                        "description": "Object containing wep details",
                        "properties": {
                          "auth": {
                            "enum": ["OPEN", "SHARED"],
                            "type": "string",
                            "description": "Indicates security authentication."
                          },
                          "keyLength": {
                            "enum": ["64bit", "128bit"],
                            "type": "string",
                            "description": "Indicates ssid security key length."
                          },
                          "keyType": {
                            "enum": ["HEX", "ASCII"],
                            "type": "string",
                            "description": "Key type for ssid security key."
                          },
                          "defaultKey": {
                            "type": "integer",
                            "description": "Length of security key."
                          },
                          "key1": {
                            "type": "string",
                            "description": "Security key 1."
                          },
                          "key2": {
                            "type": "string",
                            "description": "Security key 2."
                          },
                          "key3": {
                            "type": "string",
                            "description": "Security key 3."
                          },
                          "key4": {
                            "type": "string",
                            "description": "Security key 4."
                          }
                        }
                      },
                      "wpa2-psk": {
                        "type": "object",
                        "description": "Wpa2-psk security details.",
                        "properties": {
                          "passphrase": {
                            "type": "string",
                            "description": "Wpa2-psk security passphrase."
                          },
                          "groupKey": {
                            "type": "integer",
                            "description": "Wpa2-psk security groupKey."
                          }
                        }
                      },
                      "wpa-psk-mixed": {
                        "type": "object",
                        "description": "Wpa-psk-mixed details.",
                        "properties": {
                          "passphrase": {
                            "type": "string",
                            "description": "Passphrase for wpa-psk-mixed security."
                          },
                          "groupkey": {
                            "type": "integer",
                            "description": "Groupkey for wpa-psk-mixed security."
                          }
                        }
                      },
                      "wpa2": {
                        "type": "object",
                        "description": "Wpa2 security details.",
                        "properties": {
                          "groupKey": {
                            "type": "integer",
                            "description": "Grouopkey for wpa2 security."
                          },
                          "radius": {
                            "type": "object",
                            "description": "Radius details for wpa2 security.",
                            "properties": {
                              "serverIp": {
                                "type": "string",
                                "description": "IPv4 address for server for WPA2 radius."
                              },
                              "port": {
                                "type": "integer",
                                "description": "Port for WPA2 radius."
                              },
                              "secret": {
                                "type": "string",
                                "description": "Keep it secret.  Keep it safe."
                              },
                              "accountingServer": {
                                "type": "object",
                                "description": "A server where accountants live.",
                                "properties": {
                                  "enabled": {
                                    "type": "boolean",
                                    "description": "Indicates if there are currently any accountants in the server."
                                  },
                                  "ip": {
                                    "type": "string",
                                    "description": "IPv4 address of accounting server."
                                  },
                                  "port": {
                                    "type": "integer",
                                    "description": "Port of accounting server."
                                  },
                                  "secret": {
                                    "type": "string",
                                    "description": "Keep this one secret too.  Also, keep it safe."
                                  },
                                  "interval": {
                                    "type": "integer",
                                    "description": "Interval at which things happen."
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "wpa-mixed": {
                        "type": "object",
                        "description": "Indicates details of wpa-mixed security.",
                        "properties": {
                          "groupKey": {
                            "type": "integer",
                            "description": "When a group of people all have part of the key.  By their powers combined...."
                          },
                          "radius": {
                            "type": "object",
                            "description": "Half of the wpa-mixed diameter.",
                            "properties": {
                              "serverIp": {
                                "type": "string",
                                "description": "IPv4 address of diameter/2."
                              },
                              "port": {
                                "type": "integer",
                                "description": "Port for radius server."
                              },
                              "secret": {
                                "type": "string",
                                "description": "Solve for x.  It's a secret."
                              },
                              "accountingServer": {
                                "type": "object",
                                "description": "Another server for counting things.",
                                "properties": {
                                  "enabled": {
                                    "type": "boolean",
                                    "description": "Indicates if things are being counted in the server."
                                  },
                                  "ip": {
                                    "type": "string",
                                    "description": "IPv4 address of accounting server."
                                  },
                                  "port": {
                                    "type": "integer",
                                    "description": "Port for accounting server."
                                  },
                                  "secret": {
                                    "type": "string",
                                    "description": "Use included decoder ring to access accounting server."
                                  },
                                  "interval": {
                                    "type": "integer",
                                    "description": "Interval at which things happen."
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "name",
                  "canDelete",
                  "enabled",
                  "vlanId",
                  "broadcast",
                  "clientIsolation"
                ]
              }
            }
          },
          "required": ["enabled", "mode", "channel", "bandwidth", "ssid"]
        },
        "radio_5": {
          "type": "object",
          "description": "Object containing details for the 5 Ghz radio.",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Indicates if the 5 Ghz radio is enabled."
            },
            "mode": {
              "enum": ["ANAC", "AN", "A"],
              "type": "string",
              "description": "Indicates the wireless standard being used by this radio."
            },
            "channel": {
              "enum": [
                "AUTO",
                "CH36",
                "CH40",
                "CH44",
                "CH48",
                "CH149",
                "CH153",
                "CH157",
                "CH161"
              ],
              "type": "string",
              "description": "Indicates the wireless channel used by this radio."
            },
            "bandwidth": {
              "enum": ["MHZ80", "MHZ40"],
              "type": "string",
              "description": "Indicates the bandwidth used by this radio."
            },
            "transmit_mW": {
              "type": "integer",
              "description": "Indicates the transmit power of this radio (mW)."
            },
            "transmit_dBm": {
              "type": "integer",
              "description": "Indicates the transmit dBm of this radio."
            },
            "ssid": {
              "type": "array",
              "description": "Object array containing ssid details",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Indicates the name of SSID."
                  },
                  "canDelete": {
                    "type": "boolean",
                    "description": "Indicates if the ssid can be deleted."
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Indicates if SSID is enabled."
                  },
                  "vlanId": {
                    "type": "integer",
                    "description": "Indicates the VLAN ID of SSID."
                  },
                  "broadcast": {
                    "type": "boolean",
                    "description": "Indicates if broadcasting of the SSID is enabled."
                  },
                  "clientIsolation": {
                    "type": "boolean",
                    "description": "Indicates if client isolation is enabled."
                  },
                  "guestNetwork": {
                    "type": "object",
                    "description": "Object containing guestNetwork details",
                    "properties": {
                      "gateway": {
                        "type": "string",
                        "description": "IPv4 gateway for guest network."
                      },
                      "subnet": {
                        "type": "string",
                        "description": "IPv4 subnet for guest network."
                      },
                      "clientStart": {
                        "type": "string",
                        "description": "Beginning of IPv4 client addresses for guest network."
                      },
                      "clientEnd": {
                        "type": "string",
                        "description": "End of IPv4 client addresses for guest network."
                      }
                    }
                  },
                  "security": {
                    "type": "object",
                    "description": "Object containing security details",
                    "properties": {
                      "wep": {
                        "type": "object",
                        "description": "Object containing wep details",
                        "properties": {
                          "auth": {
                            "enum": ["OPEN", "SHARED"],
                            "type": "string",
                            "description": "Indicates security authentication."
                          },
                          "keyLength": {
                            "enum": ["64bit", "128bit"],
                            "type": "string",
                            "description": "Indicates ssid security key length."
                          },
                          "keyType": {
                            "enum": ["HEX", "ASCII"],
                            "type": "string",
                            "description": "Key type for ssid security key."
                          },
                          "defaultKey": {
                            "type": "integer",
                            "description": "Length of security key."
                          },
                          "key1": {
                            "type": "string",
                            "description": "Security key 1."
                          },
                          "key2": {
                            "type": "string",
                            "description": "Security key 2."
                          },
                          "key3": {
                            "type": "string",
                            "description": "Security key 3."
                          },
                          "key4": {
                            "type": "string",
                            "description": "Security key 4."
                          }
                        }
                      },
                      "wpa2-psk": {
                        "type": "object",
                        "description": "Wpa2-psk security details.",
                        "properties": {
                          "passphrase": {
                            "type": "string",
                            "description": "Wpa2-psk security passphrase."
                          },
                          "groupKey": {
                            "type": "integer",
                            "description": "Wpa2-psk security groupKey."
                          }
                        }
                      },
                      "wpa-psk-mixed": {
                        "type": "object",
                        "description": "Wpa-psk-mixed details.",
                        "properties": {
                          "passphrase": {
                            "type": "string",
                            "description": "Passphrase for wpa-psk-mixed security."
                          },
                          "groupkey": {
                            "type": "integer",
                            "description": "Groupkey for wpa-psk-mixed security."
                          }
                        }
                      },
                      "wpa2": {
                        "type": "object",
                        "description": "Wpa2 security details.",
                        "properties": {
                          "groupKey": {
                            "type": "integer",
                            "description": "Grouopkey for wpa2 security."
                          },
                          "radius": {
                            "type": "object",
                            "description": "Radius details for wpa2 security.",
                            "properties": {
                              "serverIp": {
                                "type": "string",
                                "description": "IPv4 address for server for WPA2 radius."
                              },
                              "port": {
                                "type": "integer",
                                "description": "Port for WPA2 radius."
                              },
                              "secret": {
                                "type": "string",
                                "description": "Keep it secret.  Keep it safe."
                              },
                              "accountingServer": {
                                "type": "object",
                                "description": "A server where accountants live.",
                                "properties": {
                                  "enabled": {
                                    "type": "boolean",
                                    "description": "Indicates if there are currently any accountants in the server."
                                  },
                                  "ip": {
                                    "type": "string",
                                    "description": "IPv4 address of accounting server."
                                  },
                                  "port": {
                                    "type": "integer",
                                    "description": "Port of accounting server."
                                  },
                                  "secret": {
                                    "type": "string",
                                    "description": "Keep this one secret too.  Also, keep it safe."
                                  },
                                  "interval": {
                                    "type": "integer",
                                    "description": "Interval at which things happen."
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "wpa-mixed": {
                        "type": "object",
                        "description": "Indicates details of wpa-mixed security.",
                        "properties": {
                          "groupKey": {
                            "type": "integer",
                            "description": "When a group of people all have part of the key.  By their powers combined...."
                          },
                          "radius": {
                            "type": "object",
                            "description": "Half of the wpa-mixed diameter.",
                            "properties": {
                              "serverIp": {
                                "type": "string",
                                "description": "IPv4 address of diameter/2."
                              },
                              "port": {
                                "type": "integer",
                                "description": "Port for radius server."
                              },
                              "secret": {
                                "type": "string",
                                "description": "Solve for x.  It's a secret."
                              },
                              "accountingServer": {
                                "type": "object",
                                "description": "Another server for counting things.",
                                "properties": {
                                  "enabled": {
                                    "type": "boolean",
                                    "description": "Indicates if things are being counted in the server."
                                  },
                                  "ip": {
                                    "type": "string",
                                    "description": "IPv4 address of accounting server."
                                  },
                                  "port": {
                                    "type": "integer",
                                    "description": "Port for accounting server."
                                  },
                                  "secret": {
                                    "type": "string",
                                    "description": "Use included decoder ring to access accounting server."
                                  },
                                  "interval": {
                                    "type": "integer",
                                    "description": "Interval at which things happen."
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "name",
                  "canDelete",
                  "enabled",
                  "vlanId",
                  "broadcast",
                  "clientIsolation"
                ]
              }
            }
          },
          "required": ["enabled", "mode", "channel", "bandwidth", "ssid"]
        }
      },
      "required": ["bandsteering", "radio_24", "radio_5"]
    },
    "RouterWirelessSettingsSetRequest": {
      "properties": {
        "bandsteering": {
          "type": "boolean",
          "description": "Indicates if bandsteering is enabled."
        },
        "radio_24": {
          "type": "object",
          "description": "Object containing details for the 2.4 Ghz radio.",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Indicates if the 2.4 Ghz radio is enabled."
            },
            "mode": {
              "enum": ["BGN", "GN", "BG", "N", "G", "B"],
              "type": "string",
              "description": "Indicates the wireless standard being used by this radio."
            },
            "channel": {
              "enum": [
                "AUTO",
                "CH1",
                "CH2",
                "CH3",
                "CH4",
                "CH5",
                "CH6",
                "CH7",
                "CH8",
                "CH9",
                "CH10",
                "CH11"
              ],
              "type": "string",
              "description": "Indicates the wireless channel used by this radio."
            },
            "bandwidth": {
              "enum": ["MHZ40", "MHZ2040", "MHZ20"],
              "type": "string",
              "description": "Indicates the bandwidth used by this radio."
            },
            "transmit_mW": {
              "type": "integer",
              "description": "Indicates the transmit power of this radio (mW)."
            },
            "transmit_dBm": {
              "type": "integer",
              "description": "Indicates the transmit dBm of this radio."
            },
            "ssid": {
              "type": "array",
              "description": "Object array containing ssid details",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Indicates the name of SSID."
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Indicates if SSID is enabled."
                  },
                  "vlanId": {
                    "type": "integer",
                    "description": "Indicates the VLAN ID of SSID."
                  },
                  "broadcast": {
                    "type": "boolean",
                    "description": "Indicates if broadcasting of the SSID is enabled."
                  },
                  "clientIsolation": {
                    "type": "boolean",
                    "description": "Indicates if client isolation is enabled."
                  },
                  "guestNetwork": {
                    "type": "object",
                    "description": "Object containing guestNetwork details",
                    "properties": {
                      "gateway": {
                        "type": "string",
                        "description": "IPv4 gateway for guest network."
                      },
                      "subnet": {
                        "type": "string",
                        "description": "IPv4 subnet for guest network."
                      },
                      "clientStart": {
                        "type": "string",
                        "description": "Beginning of IPv4 client addresses for guest network."
                      },
                      "clientEnd": {
                        "type": "string",
                        "description": "End of IPv4 client addresses for guest network."
                      }
                    }
                  },
                  "security": {
                    "type": "object",
                    "description": "Object containing security details (Mode if OPEN if not supplied)",
                    "properties": {
                      "wep": {
                        "type": "object",
                        "description": "Object containing wep details",
                        "properties": {
                          "auth": {
                            "enum": ["OPEN", "SHARED"],
                            "type": "string",
                            "description": "Indicates security authentication."
                          },
                          "keyLength": {
                            "enum": ["64bit", "128bit"],
                            "type": "string",
                            "description": "Indicates ssid security key length."
                          },
                          "keyType": {
                            "enum": ["HEX", "ASCII"],
                            "type": "string",
                            "description": "Key type for ssid security key."
                          },
                          "defaultKey": {
                            "type": "integer",
                            "description": "Length of security key."
                          },
                          "key1": {
                            "type": "string",
                            "description": "Security key 1."
                          },
                          "key2": {
                            "type": "string",
                            "description": "Security key 2."
                          },
                          "key3": {
                            "type": "string",
                            "description": "Security key 3."
                          },
                          "key4": {
                            "type": "string",
                            "description": "Security key 4."
                          }
                        }
                      },
                      "wpa2-psk": {
                        "type": "object",
                        "description": "Wpa2-psk security details.",
                        "properties": {
                          "passphrase": {
                            "type": "string",
                            "description": "Wpa2-psk security passphrase."
                          },
                          "groupKey": {
                            "type": "integer",
                            "description": "Wpa2-psk security groupKey."
                          }
                        }
                      },
                      "wpa-psk-mixed": {
                        "type": "object",
                        "description": "Wpa-psk-mixed details.",
                        "properties": {
                          "passphrase": {
                            "type": "string",
                            "description": "Passphrase for wpa-psk-mixed security."
                          },
                          "groupkey": {
                            "type": "integer",
                            "description": "Groupkey for wpa-psk-mixed security."
                          }
                        }
                      },
                      "wpa2": {
                        "type": "object",
                        "description": "Wpa2 security details.",
                        "properties": {
                          "groupKey": {
                            "type": "integer",
                            "description": "Grouopkey for wpa2 security."
                          },
                          "radius": {
                            "type": "object",
                            "description": "Radius details for wpa2 security.",
                            "properties": {
                              "serverIp": {
                                "type": "string",
                                "description": "IPv4 address for server for WPA2 radius."
                              },
                              "port": {
                                "type": "integer",
                                "description": "Port for WPA2 radius."
                              },
                              "secret": {
                                "type": "string",
                                "description": "Keep it secret.  Keep it safe."
                              },
                              "accountingServer": {
                                "type": "object",
                                "description": "A server where accountants live.",
                                "properties": {
                                  "enabled": {
                                    "type": "boolean",
                                    "description": "Indicates if there are currently any accountants in the server."
                                  },
                                  "ip": {
                                    "type": "string",
                                    "description": "IPv4 address of accounting server."
                                  },
                                  "port": {
                                    "type": "integer",
                                    "description": "Port of accounting server."
                                  },
                                  "secret": {
                                    "type": "string",
                                    "description": "Keep this one secret too.  Also, keep it safe."
                                  },
                                  "interval": {
                                    "type": "integer",
                                    "description": "Interval at which things happen."
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "wpa-mixed": {
                        "type": "object",
                        "description": "Indicates details of wpa-mixed security.",
                        "properties": {
                          "groupKey": {
                            "type": "integer",
                            "description": "When a group of people all have part of the key.  By their powers combined...."
                          },
                          "radius": {
                            "type": "object",
                            "description": "Half of the wpa-mixed diameter.",
                            "properties": {
                              "serverIp": {
                                "type": "string",
                                "description": "IPv4 address of diameter/2."
                              },
                              "port": {
                                "type": "integer",
                                "description": "Port for radius server."
                              },
                              "secret": {
                                "type": "string",
                                "description": "Solve for x.  It's a secret."
                              },
                              "accountingServer": {
                                "type": "object",
                                "description": "Another server for counting things.",
                                "properties": {
                                  "enabled": {
                                    "type": "boolean",
                                    "description": "Indicates if things are being counted in the server."
                                  },
                                  "ip": {
                                    "type": "string",
                                    "description": "IPv4 address of accounting server."
                                  },
                                  "port": {
                                    "type": "integer",
                                    "description": "Port for accounting server."
                                  },
                                  "secret": {
                                    "type": "string",
                                    "description": "Use included decoder ring to access accounting server."
                                  },
                                  "interval": {
                                    "type": "integer",
                                    "description": "Interval at which things happen."
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "name",
                  "enabled",
                  "vlanId",
                  "broadcast",
                  "clientIsolation"
                ]
              }
            }
          },
          "required": ["enabled", "mode", "channel", "bandwidth", "ssid"]
        },
        "radio_5": {
          "type": "object",
          "description": "Object containing details for the 5 Ghz radio.",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Indicates if the 5 Ghz radio is enabled."
            },
            "mode": {
              "enum": ["ANAC", "AN", "A"],
              "type": "string",
              "description": "Indicates the wireless standard being used by this radio."
            },
            "channel": {
              "enum": [
                "AUTO",
                "CH36",
                "CH40",
                "CH44",
                "CH48",
                "CH149",
                "CH153",
                "CH157",
                "CH161"
              ],
              "type": "string",
              "description": "Indicates the wireless channel used by this radio."
            },
            "bandwidth": {
              "enum": ["MHZ80", "MHZ40"],
              "type": "string",
              "description": "Indicates the bandwidth used by this radio."
            },
            "transmit_mW": {
              "type": "integer",
              "description": "Indicates the transmit power of this radio (mW)."
            },
            "transmit_dBm": {
              "type": "integer",
              "description": "Indicates the transmit dBm of this radio."
            },
            "ssid": {
              "type": "array",
              "description": "Object array containing ssid details",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Indicates the name of SSID."
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Indicates if SSID is enabled."
                  },
                  "vlanId": {
                    "type": "integer",
                    "description": "Indicates the VLAN ID of SSID."
                  },
                  "broadcast": {
                    "type": "boolean",
                    "description": "Indicates if broadcasting of the SSID is enabled."
                  },
                  "clientIsolation": {
                    "type": "boolean",
                    "description": "Indicates if client isolation is enabled."
                  },
                  "guestNetwork": {
                    "type": "object",
                    "description": "Object containing guestNetwork details",
                    "properties": {
                      "gateway": {
                        "type": "string",
                        "description": "IPv4 gateway for guest network."
                      },
                      "subnet": {
                        "type": "string",
                        "description": "IPv4 subnet for guest network."
                      },
                      "clientStart": {
                        "type": "string",
                        "description": "Beginning of IPv4 client addresses for guest network."
                      },
                      "clientEnd": {
                        "type": "string",
                        "description": "End of IPv4 client addresses for guest network."
                      }
                    }
                  },
                  "security": {
                    "type": "object",
                    "description": "Object containing security details. (Mode if OPEN if not supplied)",
                    "properties": {
                      "wep": {
                        "type": "object",
                        "description": "Object containing wep details",
                        "properties": {
                          "auth": {
                            "enum": ["OPEN", "SHARED"],
                            "type": "string",
                            "description": "Indicates security authentication."
                          },
                          "keyLength": {
                            "enum": ["64bit", "128bit"],
                            "type": "string",
                            "description": "Indicates ssid security key length."
                          },
                          "keyType": {
                            "enum": ["HEX", "ASCII"],
                            "type": "string",
                            "description": "Key type for ssid security key."
                          },
                          "defaultKey": {
                            "type": "integer",
                            "description": "Length of security key."
                          },
                          "key1": {
                            "type": "string",
                            "description": "Security key 1."
                          },
                          "key2": {
                            "type": "string",
                            "description": "Security key 2."
                          },
                          "key3": {
                            "type": "string",
                            "description": "Security key 3."
                          },
                          "key4": {
                            "type": "string",
                            "description": "Security key 4."
                          }
                        }
                      },
                      "wpa2-psk": {
                        "type": "object",
                        "description": "Wpa2-psk security details.",
                        "properties": {
                          "passphrase": {
                            "type": "string",
                            "description": "Wpa2-psk security passphrase."
                          },
                          "groupKey": {
                            "type": "integer",
                            "description": "Wpa2-psk security groupKey."
                          }
                        }
                      },
                      "wpa-psk-mixed": {
                        "type": "object",
                        "description": "Wpa-psk-mixed details.",
                        "properties": {
                          "passphrase": {
                            "type": "string",
                            "description": "Passphrase for wpa-psk-mixed security."
                          },
                          "groupkey": {
                            "type": "integer",
                            "description": "Groupkey for wpa-psk-mixed security."
                          }
                        }
                      },
                      "wpa2": {
                        "type": "object",
                        "description": "Wpa2 security details.",
                        "properties": {
                          "groupKey": {
                            "type": "integer",
                            "description": "Grouopkey for wpa2 security."
                          },
                          "radius": {
                            "type": "object",
                            "description": "Radius details for wpa2 security.",
                            "properties": {
                              "serverIp": {
                                "type": "string",
                                "description": "IPv4 address for server for WPA2 radius."
                              },
                              "port": {
                                "type": "integer",
                                "description": "Port for WPA2 radius."
                              },
                              "secret": {
                                "type": "string",
                                "description": "Keep it secret.  Keep it safe."
                              },
                              "accountingServer": {
                                "type": "object",
                                "description": "A server where accountants live.",
                                "properties": {
                                  "enabled": {
                                    "type": "boolean",
                                    "description": "Indicates if there are currently any accountants in the server."
                                  },
                                  "ip": {
                                    "type": "string",
                                    "description": "IPv4 address of accounting server."
                                  },
                                  "port": {
                                    "type": "integer",
                                    "description": "Port of accounting server."
                                  },
                                  "secret": {
                                    "type": "string",
                                    "description": "Keep this one secret too.  Also, keep it safe."
                                  },
                                  "interval": {
                                    "type": "integer",
                                    "description": "Interval at which things happen."
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "wpa-mixed": {
                        "type": "object",
                        "description": "Indicates details of wpa-mixed security.",
                        "properties": {
                          "groupKey": {
                            "type": "integer",
                            "description": "When a group of people all have part of the key.  By their powers combined...."
                          },
                          "radius": {
                            "type": "object",
                            "description": "Half of the wpa-mixed diameter.",
                            "properties": {
                              "serverIp": {
                                "type": "string",
                                "description": "IPv4 address of diameter/2."
                              },
                              "port": {
                                "type": "integer",
                                "description": "Port for radius server."
                              },
                              "secret": {
                                "type": "string",
                                "description": "Solve for x.  It's a secret."
                              },
                              "accountingServer": {
                                "type": "object",
                                "description": "Another server for counting things.",
                                "properties": {
                                  "enabled": {
                                    "type": "boolean",
                                    "description": "Indicates if things are being counted in the server."
                                  },
                                  "ip": {
                                    "type": "string",
                                    "description": "IPv4 address of accounting server."
                                  },
                                  "port": {
                                    "type": "integer",
                                    "description": "Port for accounting server."
                                  },
                                  "secret": {
                                    "type": "string",
                                    "description": "Use included decoder ring to access accounting server."
                                  },
                                  "interval": {
                                    "type": "integer",
                                    "description": "Interval at which things happen."
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "name",
                  "enabled",
                  "vlanId",
                  "broadcast",
                  "clientIsolation"
                ]
              }
            }
          },
          "required": ["enabled", "mode", "channel", "bandwidth", "ssid"]
        }
      },
      "required": ["bandsteering", "radio_24", "radio_5"]
    },
    "RouterWirelessSettingsSet": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "Database GUID of device."
        }
      },
      "required": ["deviceId"]
    },
    "CompaniesSignupRequest": {
      "properties": {
        "firstName": { "type": "string", "description": "Owner's first name" },
        "lastName": { "type": "string", "description": "Owner's last name" },
        "email": {
          "type": "string",
          "description": "Owner's email address; used to login to owner's user account."
        },
        "password": {
          "type": "string",
          "description": "SHA 256 encrypted password used to login to owner's user account."
        },
        "termsOfServiceId": {
          "type": "integer",
          "description": "'staticfileid' of termsOfService staticfile that the user has accepted."
        },
        "companyName": {
          "type": "string",
          "description": "Name of company being created."
        },
        "zipCode": {
          "type": "string",
          "description": "Zip code of company being created.  5-7 Characters."
        }
      },
      "required": [
        "firstName",
        "lastName",
        "email",
        "password",
        "termsOfServiceId",
        "companyName"
      ]
    },
    "CompaniesSignupConfirmRequest": {
      "properties": {
        "signUpConfirmId": {
          "type": "string",
          "description": "The id provided in the signup email."
        }
      },
      "required": ["signUpConfirmId"]
    },
    "UsersValidateUsernameRequest": {
      "properties": {
        "username": {
          "type": "string",
          "description": "Email address of the account you'd like to create."
        }
      },
      "required": ["username"]
    },
    "StreamerStatusGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of the status."
        },
        "uptime": {
          "type": "string",
          "description": "The uptime as reported by the device (X Day(s) XHr XMin)."
        },
        "storage": {
          "type": "object",
          "description": "Storage object.",
          "properties": {
            "total": {
              "type": "integer",
              "description": "Bytes of total disk space."
            },
            "available": {
              "type": "integer",
              "description": "Bytes of available disk space."
            }
          },
          "required": ["total", "available"]
        },
        "services": {
          "type": "string",
          "description": "List of the active services (comma delimited)."
        }
      },
      "required": ["deviceId", "dateTime", "uptime", "storage", "services"]
    },
    "SwitchPoeSettingsGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The device ID." }
      },
      "required": ["deviceId"]
    },
    "SwitchPoeSettingsGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The device ID." },
        "settings": {
          "type": "array",
          "description": "Array of the PoE settings.",
          "items": {
            "type": "object",
            "properties": {
              "number": {
                "type": "integer",
                "description": "The port number."
              },
              "name": {
                "type": "string",
                "description": "The name of connected device."
              },
              "powerConsumption": {
                "type": "number",
                "description": "The power consumption in watts."
              },
              "maxPowerAllocation": {
                "enum": ["DISABLED", "7W", "154W", "300W", "AUTO"],
                "type": "string",
                "description": "The maximum power allocation."
              },
              "poePriority": {
                "enum": ["LOW", "HIGH", "CRITICAL", "Low", "High", "Critical"],
                "type": "string",
                "description": "The PoE priority."
              }
            },
            "required": [
              "number",
              "name",
              "powerConsumption",
              "maxPowerAllocation",
              "poePriority"
            ]
          }
        }
      },
      "required": ["deviceId", "settings"]
    },
    "SwitchPoeSettingsSetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The device ID." },
        "settings": {
          "type": "array",
          "description": "Array of the PoE settings.",
          "items": {
            "type": "object",
            "properties": {
              "number": {
                "type": "integer",
                "description": "The port number."
              },
              "maxPowerAllocation": {
                "enum": ["DISABLED", "7W", "154W", "300W", "AUTO"],
                "type": "string",
                "description": "The maximum power allocation."
              },
              "poePriority": {
                "enum": ["LOW", "HIGH", "CRITICAL", "Low", "High", "Critical"],
                "type": "string",
                "description": "The PoE priority."
              }
            },
            "required": ["number", "maxPowerAllocation", "poePriority"]
          }
        }
      },
      "required": ["deviceId", "settings"]
    },
    "SwitchPoeSettingsSet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The device ID." }
      },
      "required": ["deviceId"]
    },
    "SwitchStatusGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "SwitchStatusGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The datetime stamp in ISO format."
        },
        "uptime": {
          "type": "integer",
          "description": "System uptime in seconds."
        },
        "budgetUtilization": {
          "type": "number",
          "description": "Percentage of budget utilization"
        },
        "powerConsumption": {
          "type": "number",
          "description": "Watts of power consumption."
        },
        "temperature": {
          "type": "number",
          "description": "Temperature in degrees celsius."
        }
      },
      "required": ["deviceId", "dateTime", "uptime"]
    },
    "SwitchSystemSettingsGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "SwitchSystemSettingsGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "systemName": { "type": "string", "description": "The system name." },
        "deviceIpAddress": {
          "type": "string",
          "description": "The device IP address."
        },
        "deviceSubnetMask": {
          "type": "string",
          "description": "The device subnet mask."
        },
        "deviceDefaultGateway": {
          "type": "string",
          "description": "The default gateway address."
        },
        "managementVlan": {
          "type": "integer",
          "description": "The management VLAN."
        },
        "adminUsername": {
          "type": "string",
          "description": "The administrator username."
        },
        "adminPassword": {
          "type": "string",
          "description": "The administrator password."
        },
        "dhcpEnabled": {
          "enum": ["YES"],
          "type": "string",
          "description": "Indicates whether DHCP is enabled."
        }
      },
      "required": [
        "deviceId",
        "systemName",
        "deviceIpAddress",
        "deviceSubnetMask",
        "deviceDefaultGateway",
        "managementVlan",
        "adminUsername",
        "adminPassword",
        "dhcpEnabled"
      ]
    },
    "GlobalSearchRequest": {
      "properties": {
        "q": { "type": "string", "description": "search term" },
        "filterby": {
          "enum": [
            "devices",
            "ovrcdevices",
            "discovereddevices",
            "companies",
            "dealers",
            "customers"
          ],
          "type": "string",
          "description": "specifies what to search in.  devices - searches all devices. If a mac address is provided will find a match for that otherwise searches the device name. ovrcdevices - searches only OVRC devices discovereddevices - searches only discovered devices companies - searches dealers and customers. Search term will search company/customer name, S code, D code, and customer location names dealers - searches dealers only customers - searches customers only "
        }
      },
      "required": ["q", "filterby"]
    },
    "IspRead": {
      "properties": {
        "name": { "type": "string", "description": "Name of the ISP company." }
      },
      "required": ["name"]
    },
    "TermsOfService": {
      "properties": {
        "termsOfServiceId": {
          "type": "string",
          "description": "The ID of the returned Terms of Service content."
        },
        "html": {
          "type": "string",
          "description": "The HTML to display to render the latest OvrC Terms of Service."
        }
      },
      "required": ["termsOfServiceId", "html"]
    },
    "TimezonesRead": {
      "properties": {
        "items": {
          "type": "array",
          "description": "An array of objects with timezone data.",
          "items": {
            "type": "object",
            "properties": {
              "timezoneId": {
                "type": "string",
                "description": "Id of this timezone."
              },
              "name": {
                "type": "string",
                "description": "Name of this timezone."
              },
              "notes": {
                "type": "string",
                "description": "Notes for this timezone."
              },
              "offset": {
                "type": "number",
                "description": "Offset for this timezone."
              }
            },
            "required": ["timezoneId", "name", "notes", "offset"]
          }
        }
      },
      "required": ["items"]
    },
    "ticketesCreateRequest": {
      "properties": {
        "username": {
          "type": "string",
          "description": "Email address of user"
        },
        "subject": {
          "enum": ["desktop", "mobile"],
          "type": "string",
          "description": "Environment of originating request."
        },
        "message": {
          "type": "string",
          "description": "Message indicating ticket/feature request."
        }
      },
      "required": ["username", "subject", "message"]
    },
    "CompaniesSearchRequest": {
      "properties": {
        "offset": {
          "type": "number",
          "description": "offset from start to get items"
        },
        "limit": {
          "type": "number",
          "description": "limit of items (default 10)"
        },
        "filter": {
          "type": "string",
          "description": "filter on companyName, contactName, accountNum, erpCode. ex. filter=accountNum:D10231 or filter=companyName:snap,contactName:john%20s"
        },
        "sort": {
          "type": "string",
          "description": "sort on a field ex sort=companyName:asc will sort first company name"
        }
      }
    },
    "CompaniesSearch": {
      "properties": {
        "companyId": { "type": "string", "description": "ID of the company." },
        "companyName": {
          "type": "string",
          "description": "Internal name of the company account."
        },
        "accountNum": {
          "type": "string",
          "description": "Internal OvrC code for the company account."
        },
        "erpCode": {
          "type": "string",
          "description": "SnapAV account number, if linked."
        },
        "contactName": {
          "type": "string",
          "description": "If available, the name displayed externally to dealer's customers on OvrC Home."
        }
      },
      "required": ["companyId", "companyName", "accountNum", "contactName"]
    },
    "CompaniesSignupLinkRequest": {
      "properties": {
        "email": {
          "type": "string",
          "description": "Email for which confirmation link is requested."
        }
      },
      "required": ["email"]
    },
    "CompanyInfoByAccountNumberRequest": {
      "properties": {
        "accountNumber": {
          "type": "string",
          "description": "accountNumber for which company info is being requested."
        }
      },
      "required": ["accountNumber"]
    },
    "DevicesInfoByMacAddressRequest": {
      "properties": {
        "macAddress": {
          "type": "string",
          "description": "macAddress for which device info is being requested."
        }
      },
      "required": ["macAddress"]
    },
    "DevicesProAppUpdateCreateRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "ID of device for which user is requesting a pro app update be queued."
        },
        "version": {
          "type": "string",
          "description": "Pro app version on which device`s pro app will update."
        }
      },
      "required": ["deviceId", "version"]
    },
    "RemoveDevicesRequest": {
      "properties": {
        "macAddress": {
          "type": "string",
          "description": "macAddress of device which is being deleted or soft deleted."
        }
      },
      "required": ["macAddress"]
    },
    "SoftDeleteCompanyRequest": {
      "properties": {
        "accountNumber": {
          "type": "string",
          "description": "accountNumber for which company is being deleted."
        }
      },
      "required": ["accountNumber"]
    },
    "UsersGenerateActivationLinkRequest": {
      "properties": {
        "email": {
          "type": "string",
          "description": "Email(username) for which MFA token is being requested."
        }
      },
      "required": ["email"]
    },
    "UsersGetActivationIdRequest": {
      "properties": {
        "email": {
          "type": "string",
          "description": "Email(username) for which ActivationId is being requested."
        }
      },
      "required": ["email"]
    },
    "UsersMFAGetTokenRequest": {
      "properties": {
        "email": {
          "type": "string",
          "description": "Email(username) for which MFA token is being requested."
        }
      },
      "required": ["email"]
    },
    "UrcStatusGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "UrcStatusGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "dateTime": {
          "type": "string",
          "description": "The date and time of status update (ISO format)."
        },
        "uptime": {
          "type": "string",
          "description": "The duration of device operation."
        },
        "system": {
          "type": "object",
          "description": "System info.",
          "properties": {
            "cpu": {
              "type": "integer",
              "description": "CPU usage percentage."
            },
            "memFree": {
              "type": "integer",
              "description": "Free memory in bytes."
            },
            "memUsed": {
              "type": "integer",
              "description": "Memory used in bytes."
            }
          },
          "required": ["cpu", "memFree", "memUsed"]
        }
      },
      "required": ["deviceId", "dateTime", "uptime", "system"]
    },
    "DownloadUserNotifications": {
      "properties": {
        "url": {
          "type": "string",
          "description": "The destination URL of the CSV file. The caller can issue an HTTPS GET to download at this URL."
        }
      },
      "required": ["url"]
    },
    "UsersActivateRequest": {
      "properties": {
        "activationId": {
          "type": "string",
          "description": "ID of employees existing activation record"
        },
        "firstName": {
          "type": "string",
          "description": "Employee's first name"
        },
        "lastName": { "type": "string", "description": "Employee's last name" },
        "password": { "type": "string", "description": "Password" },
        "termsOfServiceId": {
          "type": "string",
          "description": "ID of 'Terms of Service' static file which the employee accepted"
        }
      },
      "required": [
        "activationId",
        "firstName",
        "lastName",
        "password",
        "termsOfServiceId"
      ]
    },
    "UsersActivateReadRequest": {
      "properties": {
        "activationId": {
          "type": "string",
          "description": "Id provided in your activation email."
        }
      },
      "required": ["activationId"]
    },
    "UsersActivateRead": {
      "properties": {
        "companyName": {
          "type": "string",
          "description": "Name of the company your account will be signed up under."
        },
        "email": {
          "type": "string",
          "description": "Email (username) you're signing up under."
        }
      },
      "required": ["companyName", "email"]
    },
    "UsersAddUserCheckRequest": {
      "properties": {
        "username": {
          "type": "string",
          "description": "Username user wishes to validate."
        }
      },
      "required": ["username"]
    },
    "UsersAddUserCheck": {
      "properties": {
        "availableToInvite": {
          "type": "boolean",
          "description": "Indicates if the username is available to be invited to your company."
        },
        "companyName": {
          "type": "string",
          "description": "Name of user's parent company if user is external"
        }
      },
      "required": ["availableToInvite"]
    },
    "UsersChangePasswordRequest": {
      "properties": {
        "oldPassword": {
          "type": "string",
          "description": "User's old/current password."
        },
        "username": {
          "type": "string",
          "description": "Email address (username)."
        },
        "newPassword": {
          "type": "string",
          "description": "User's new/desired password."
        }
      },
      "required": ["oldPassword", "username", "newPassword"]
    },
    "UsersDealerDetails": {
      "properties": {
        "userId": {
          "type": "string",
          "description": "The dealer's user account's OvrC ID."
        },
        "companyId": {
          "type": "string",
          "description": "Your dealer account's ID."
        },
        "username": {
          "type": "string",
          "description": "The dealer's email address / username for OvrC."
        },
        "firstName": {
          "type": "string",
          "description": "The dealer's first name."
        },
        "lastName": {
          "type": "string",
          "description": "The dealer's last name."
        },
        "impersonatorCompanyName": {
          "type": "string",
          "description": "The tech support user's company name, returned while impersonating. Not returned if not impersonating."
        },
        "impersonatorName": {
          "type": "string",
          "description": "The tech support user's name, returned while impersonating. Not returned if not impersonating."
        },
        "canAddCustomer": {
          "type": "boolean",
          "description": "If the dealer's account has access to add new customers for their company."
        },
        "canEditNewCustomerGroups": {
          "type": "boolean",
          "description": "If the dealer's account has access to edit a new customer's groups on creation."
        },
        "canTransferFromInventory": {
          "type": "boolean",
          "description": "If the dealer's account can transfer devices from inventory to a customer account."
        },
        "canViewAccountsNav": {
          "type": "boolean",
          "description": "If the dealer's account can view the account navigation tab (or anything under it.)"
        },
        "canViewMapNav": {
          "type": "boolean",
          "description": "If the dealer's account has access to view the map-view."
        },
        "canViewUnverifiedLocationsNav": {
          "type": "boolean",
          "description": "If the dealer's account has access to the unverified location list page."
        },
        "isOps": {
          "type": "boolean",
          "description": "If the dealer's account has access to tech support operations."
        },
        "canImpersonateDealer": {
          "type": "boolean",
          "description": "If the dealer's account has access to impersonate dealers."
        },
        "canDeleteCompany": {
          "type": "boolean",
          "description": "If the dealer's account has access to delete companies."
        },
        "canRemoveDevice": {
          "type": "boolean",
          "description": "If the dealer's account has access to remove devices."
        },
        "canMergeDealers": {
          "type": "boolean",
          "description": "If the dealer's account has access to merge dealers."
        },
        "canGenerateActivationLink": {
          "type": "boolean",
          "description": "If the dealer's account has access to generate activation links."
        },
        "canUseDeviceTypeFirmwareTool": {
          "type": "boolean",
          "description": "If the dealer's account has access to use the device type firmware tool."
        },
        "locationCount": {
          "type": "number",
          "description": "Count of all locations the dealer has access to."
        },
        "offlineLocationCount": {
          "type": "number",
          "description": "Count of locations with offline devices."
        },
        "proLocationCount": {
          "type": "number",
          "description": "Count of locations with pro licenses."
        },
        "updateLocationCount": {
          "type": "number",
          "description": "Count of locations with devices with firmware updates."
        },
        "verifiedLocationCount": {
          "type": "number",
          "description": "Count of locations with verified addresses."
        },
        "verifiedOfflineLocationCount": {
          "type": "number",
          "description": "Count of locations with a verified address AND offline devices."
        },
        "verifiedProLocationCount": {
          "type": "number",
          "description": "Count of locations with a verified address AND pro license."
        },
        "verifiedUpdateLocationCount": {
          "type": "number",
          "description": "Count of locations with a verified address AND a device with firmware updates."
        },
        "verifiedSharedIn": {
          "type": "number",
          "description": "Count of locations with a verified address AND that are shared to the dealer from an external company."
        },
        "verifiedSharedOut": {
          "type": "number",
          "description": "Count of locations with a verified address AND that are shared out to an external company."
        },
        "releaseTiers": {
          "type": "array",
          "description": "Release tiers the dealer's account can access for Control4 OS updates",
          "items": { "type": "object" }
        }
      },
      "required": [
        "userId",
        "companyId",
        "username",
        "firstName",
        "lastName",
        "impersonatorCompanyName",
        "impersonatorName",
        "canAddCustomer",
        "canEditNewCustomerGroups",
        "canTransferFromInventory",
        "canViewAccountsNav",
        "canViewMapNav",
        "canViewUnverifiedLocationsNav",
        "isOps",
        "canImpersonateDealer",
        "canDeleteCompany",
        "canRemoveDevice",
        "canMergeDealers",
        "canGenerateActivationLink",
        "canUseDeviceTypeFirmwareTool",
        "locationCount",
        "offlineLocationCount",
        "proLocationCount",
        "updateLocationCount",
        "verifiedLocationCount",
        "verifiedOfflineLocationCount",
        "verifiedProLocationCount",
        "verifiedUpdateLocationCount",
        "verifiedSharedIn",
        "verifiedSharedOut",
        "releaseTiers"
      ]
    },
    "UsersDeleteRequest": {
      "properties": {
        "ids": {
          "type": "array",
          "description": "User IDs to be deleted.",
          "items": { "type": "string" }
        }
      },
      "required": ["ids"]
    },
    "UsersRead": {
      "properties": {
        "userId": { "type": "string", "description": "Unique ID of user" },
        "username": {
          "type": "string",
          "description": "Email adddress of user"
        },
        "fullName": { "type": "string", "description": "Full name of user." },
        "firstName": { "type": "string", "description": "First name of user." },
        "lastName": { "type": "string", "description": "Last name of user." },
        "status": {
          "type": "string",
          "description": "Status of user's account (i.e. PENDING, ENABLED)"
        },
        "isOwner": {
          "type": "boolean",
          "description": "Indicates if user is the owner of the company"
        },
        "isExternal": {
          "type": "boolean",
          "description": "Indicates this is a SHARED user with this dealer"
        },
        "companyName": {
          "type": "string",
          "description": "Indicates the name of the users parent company"
        },
        "companyId": {
          "type": "string",
          "description": "Indicates the ID of the users parent company"
        },
        "groups": {
          "type": "array",
          "description": "Names of the groups this user is assigned to.",
          "items": { "type": "string" }
        },
        "canTransferOwnership": {
          "type": "boolean",
          "description": "Indicates if you can transfer ownership for the given user (only applied to Owners returned)"
        },
        "canResendInvitation": {
          "type": "boolean",
          "description": "Indicates if the user is eligible to receive a re-send of their invitation email"
        },
        "canDelete": {
          "type": "boolean",
          "description": "Indicates if the user has delete privileges"
        }
      },
      "required": [
        "userId",
        "username",
        "fullName",
        "firstName",
        "lastName",
        "status",
        "isOwner",
        "isExternal",
        "companyName",
        "companyId",
        "groups",
        "canTransferOwnership",
        "canResendInvitation",
        "canDelete"
      ]
    },
    "UsersUpdateRequest": {
      "properties": {
        "items": {
          "type": "array",
          "description": "Array of user updates.",
          "items": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "string",
                "description": "ID of user record"
              },
              "firstName": {
                "type": "string",
                "description": "User's first name, to be set."
              },
              "lastName": {
                "type": "string",
                "description": "User's last name, to be set."
              }
            },
            "required": ["userId"]
          }
        }
      },
      "required": ["items"]
    },
    "UsersDismissBannersRequest": {
      "properties": {
        "bannerId": {
          "type": "boolean",
          "description": "Id of the banner you're dismissing."
        }
      },
      "required": ["bannerId"]
    },
    "UsersReadBanners": {
      "properties": {
        "bannerId": { "type": "string", "description": "Unique ID." },
        "type": {
          "enum": ["DANGER", "WARNING", "INFO"],
          "type": "string",
          "description": "Banner type."
        },
        "icon": { "type": "string", "description": "Optional override icon." },
        "titleText": {
          "type": "string",
          "description": "Type-colored title text."
        },
        "bannerText": {
          "type": "string",
          "description": "White banner text, goes below title text."
        },
        "hasDismiss": {
          "type": "boolean",
          "description": "Indicates if a DISMISS link is available to the user."
        },
        "callToActionText": {
          "type": "string",
          "description": "Indicates if there IS a call to action button, and if so the text on the button."
        },
        "callToActionUrl": {
          "type": "string",
          "description": "If there is a call to action button, this is the link the button points to."
        }
      },
      "required": ["bannerId", "type", "hasDismiss"]
    },
    "UsersInviteRequest": {
      "properties": {
        "usernames": {
          "type": "string",
          "description": "Array of usernames (emails) you want to invite."
        }
      },
      "required": ["usernames"]
    },
    "UsersInvite": { "properties": {} },
    "UsersMFAConfirmSettingsRequest": {
      "properties": {
        "mfaCode": {
          "type": "string",
          "description": "The MFA code that was sent to the user."
        }
      },
      "required": ["mfaCode"]
    },
    "UsersMFAUpdateSettingsRequest": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Indicates whether MFA is being enabled or disabled."
        },
        "method": {
          "enum": ["TEXT", "EMAIL", "BOTH"],
          "type": "string",
          "description": "Method of MFA to be used, either &quot;TEXT&quot;, &quot;EMAIL&quot;, or &quot;BOTH&quot;."
        },
        "phoneNumber": {
          "type": "string",
          "description": "Phone number to be used for MFA (only sent for &quot;TEXT or &quot;BOTH&quot; method).  Format : &quot;+17045551234&quot;."
        }
      },
      "required": ["enabled", "method"]
    },
    "UsersMyDetails": {
      "properties": {
        "userId": {
          "type": "string",
          "description": "Your user account's OvrC ID."
        },
        "companyId": {
          "type": "string",
          "description": "Your dealer account's ID."
        },
        "username": {
          "type": "string",
          "description": "Your email address / username for OvrC."
        },
        "firstName": { "type": "string", "description": "Your first name." },
        "lastName": { "type": "string", "description": "Your last name." },
        "isMigratedToCognito": {
          "type": "boolean",
          "description": "If your account has been migrated to Cognito for login purposes"
        },
        "hasLoggedInViaCognito": {
          "type": "boolean",
          "description": "If you have ever logged in via Cognito"
        },
        "impersonatorCompanyName": {
          "type": "string",
          "description": "The tech support user's company name, returned while impersonating. Not returned if not impersonating."
        },
        "impersonatorName": {
          "type": "string",
          "description": "The tech support user's name, returned while impersonating. Not returned if not impersonating."
        },
        "canAddCustomer": {
          "type": "boolean",
          "description": "If your account has access to add new customers for your company."
        },
        "canEditNewCustomerGroups": {
          "type": "boolean",
          "description": "If your account has access to edit a new customer's groups on creation."
        },
        "canTransferFromInventory": {
          "type": "boolean",
          "description": "If your account can transfer devices from inventory to a customer account."
        },
        "canViewAccountsNav": {
          "type": "boolean",
          "description": "If your account can view the account navigation tab (or anything under it.)"
        },
        "canViewMapNav": {
          "type": "boolean",
          "description": "If your account has access to view the map-view."
        },
        "canViewUnverifiedLocationsNav": {
          "type": "boolean",
          "description": "If your account has access to the unverified location list page."
        },
        "isOps": {
          "type": "boolean",
          "description": "If your account has access to tech support operations."
        },
        "canImpersonateDealer": {
          "type": "boolean",
          "description": "If your account has access to impersonate dealers."
        },
        "canDeleteCompany": {
          "type": "boolean",
          "description": "If your account has access to delete companies."
        },
        "canRemoveDevice": {
          "type": "boolean",
          "description": "If your account has access to remove devices."
        },
        "canMergeDealers": {
          "type": "boolean",
          "description": "If your account has access to merge dealers."
        },
        "canGenerateActivationLink": {
          "type": "boolean",
          "description": "If your account has access to generate activation links."
        },
        "canUseDeviceTypeFirmwareTool": {
          "type": "boolean",
          "description": "If your account has access to use the device type firmware tool."
        },
        "locationCount": {
          "type": "number",
          "description": "Count of all locations you have access to."
        },
        "offlineLocationCount": {
          "type": "number",
          "description": "Count of locations with offline devices."
        },
        "proLocationCount": {
          "type": "number",
          "description": "Count of locations with pro licenses."
        },
        "updateLocationCount": {
          "type": "number",
          "description": "Count of locations with devices with firmware updates."
        },
        "verifiedLocationCount": {
          "type": "number",
          "description": "Count of locations with verified addresses."
        },
        "verifiedOfflineLocationCount": {
          "type": "number",
          "description": "Count of locations with a verified address AND offline devices."
        },
        "verifiedProLocationCount": {
          "type": "number",
          "description": "Count of locations with a verified address AND pro license."
        },
        "verifiedUpdateLocationCount": {
          "type": "number",
          "description": "Count of locations with a verified address AND a device with firmware updates."
        },
        "verifiedSharedIn": {
          "type": "number",
          "description": "Count of locations with a verified address AND that are shared to you from an external company."
        },
        "verifiedSharedOut": {
          "type": "number",
          "description": "Count of locations with a verified address AND that are shared out to an external company."
        },
        "releaseTiers": {
          "type": "array",
          "description": "Release tiers the dealer's account can access for Control4 OS updates",
          "items": { "type": "object" }
        }
      },
      "required": [
        "userId",
        "companyId",
        "username",
        "firstName",
        "lastName",
        "isMigratedToCognito",
        "hasLoggedInViaCognito",
        "impersonatorCompanyName",
        "impersonatorName",
        "canAddCustomer",
        "canEditNewCustomerGroups",
        "canTransferFromInventory",
        "canViewAccountsNav",
        "canViewMapNav",
        "canViewUnverifiedLocationsNav",
        "isOps",
        "canImpersonateDealer",
        "canDeleteCompany",
        "canRemoveDevice",
        "canMergeDealers",
        "canGenerateActivationLink",
        "canUseDeviceTypeFirmwareTool",
        "locationCount",
        "offlineLocationCount",
        "proLocationCount",
        "updateLocationCount",
        "verifiedLocationCount",
        "verifiedOfflineLocationCount",
        "verifiedProLocationCount",
        "verifiedUpdateLocationCount",
        "verifiedSharedIn",
        "verifiedSharedOut",
        "releaseTiers"
      ]
    },
    "UsersNotificationsAcknowledgeRequest": {
      "properties": {
        "all": {
          "type": "string",
          "description": "Acknowledge all notifications if all is present in query params."
        },
        "items": {
          "type": "array",
          "description": "A list of notification Ids to acknowledge",
          "items": { "type": "string" }
        }
      }
    },
    "UsersNotificationsCount": {
      "properties": {
        "unackedNotificationCount": {
          "type": "number",
          "description": "Count of the number of unacked notifications you have been sent."
        },
        "unreadNotificationCount": {
          "type": "number",
          "description": "Count of the number of unread notifications you have been sent."
        }
      },
      "required": ["unackedNotificationCount", "unreadNotificationCount"]
    },
    "UsersNotificationsCreateRequest": {
      "properties": {
        "items": {
          "type": "array",
          "description": "Array of notification objects.",
          "items": {
            "type": "object",
            "properties": {
              "macAddress": {
                "type": "string",
                "description": "mac address for the event."
              },
              "type": {
                "type": "string",
                "description": "type of alert event."
              },
              "ack": {
                "type": "boolean",
                "description": "is this already acknowledged (default false)"
              },
              "minutes": {
                "type": "integer",
                "description": "minutes ago this alert happened (default now)"
              },
              "referenceId": {
                "type": "string",
                "description": "can be paired with corresponding events like disconnect/connect (default blank)"
              },
              "batchId": {
                "type": "string",
                "description": "batched with other alerts that went out at the same time (default blank)"
              }
            },
            "required": ["macAddress", "type"]
          }
        }
      },
      "required": ["items"]
    },
    "UsersNotificationsReadRequest": {
      "properties": {
        "sort": {
          "enum": ["device", "customer", "location", "time", "jobCode"],
          "type": "string",
          "description": "The sort can equal &quot;asc&quot; or &quot;desc&quot; i.e. time:asc. (default time:desc)"
        },
        "search": {
          "type": "string",
          "description": "Filtering by part of the deviceName, customerName, locationName, jobCode or referenceId. Example : search=co -&gt; it will return notification with 'co' chars in a name."
        },
        "notifications_per_reference": {
          "type": "string",
          "description": "To use feature flagging just provide -&gt; notifications_per_reference: true"
        }
      }
    },
    "UsersNotificationsRead": {
      "properties": {
        "items": {
          "type": "array",
          "description": "Array of notification objects.",
          "items": {
            "type": "object",
            "properties": {
              "notificationId": {
                "type": "string",
                "description": "The database id of the notification record."
              },
              "dateSent": {
                "type": "string",
                "description": "Date the notification was sent."
              },
              "subject": {
                "type": "string",
                "description": "The subject line of the notification."
              },
              "message": {
                "type": "string",
                "description": "The message content of the notification."
              },
              "notificationType": {
                "type": "string",
                "description": "The type of notification.  Batch notifications include multiple events."
              },
              "eventCount": {
                "type": "number",
                "description": "The count of events, if applicable."
              },
              "events": {
                "type": "array",
                "description": "Array of objects, each including details around the event.",
                "items": {
                  "type": "object",
                  "properties": {
                    "event": {
                      "type": "string",
                      "description": "A description of this particular event."
                    },
                    "deviceName": {
                      "type": "string",
                      "description": "The name of the device involved in this event."
                    },
                    "eventDate": {
                      "type": "string",
                      "description": "The date and time the even occurred."
                    }
                  },
                  "required": ["event", "deviceName", "eventDate"]
                }
              },
              "locationId": {
                "type": "string",
                "description": "The location name, if applicable, the notification happened at."
              },
              "locationName": {
                "type": "string",
                "description": "The locationId, if applicable, the notification happened at."
              },
              "customerId": {
                "type": "string",
                "description": "The customer name, if applicable, the notification happened at."
              },
              "customerName": {
                "type": "string",
                "description": "The customerId, if applicable, the notification happened at."
              },
              "deviceId": {
                "type": "string",
                "description": "The device, if applicable, the event happened to. (EVENT)"
              },
              "deviceModel": {
                "type": "string",
                "description": "The model of the device, if applicable, the event happened to. (EVENT)"
              },
              "isUnread": {
                "type": "boolean",
                "description": "Flag that marks if the message has not been displayed in-app to the user yet.  Automatically set after display on any device."
              }
            },
            "required": [
              "notificationId",
              "dateSent",
              "subject",
              "message",
              "notificationType",
              "eventCount",
              "events",
              "locationId",
              "locationName",
              "customerId",
              "customerName",
              "deviceId",
              "deviceModel",
              "isUnread"
            ]
          }
        },
        "timeZoneOffsetMinutes": {
          "type": "integer",
          "description": "The offset in minutes +/- from GMT (0)."
        },
        "timeZoneId": { "type": "string", "description": "The time zone Id." },
        "totalCount": {
          "type": "string",
          "description": "The total count of notifications for this user."
        },
        "unreadCount": {
          "type": "string",
          "description": "The total count of unread/unseen notifications for this user."
        },
        "limit": {
          "type": "number",
          "description": "This is an echo of the limit provided in the request."
        },
        "offset": {
          "type": "number",
          "description": "This is an echo of the offset provided in the request."
        }
      },
      "required": [
        "items",
        "timeZoneOffsetMinutes",
        "timeZoneId",
        "totalCount",
        "unreadCount",
        "limit",
        "offset"
      ]
    },
    "UsersNotificationsUnAcknowledgeRequest": {
      "properties": {
        "all": {
          "type": "string",
          "description": "Acknowledge all notifications if all is present in query params."
        },
        "items": {
          "type": "array",
          "description": "A list of notification Ids to acknowledge",
          "items": { "type": "string" }
        }
      }
    },
    "UsersPushTokensRequest": {
      "properties": {
        "token": { "type": "string", "description": "Unique device token" },
        "mobileDeviceId": {
          "type": "string",
          "description": "Unique physical-device identifier"
        },
        "mobileOs": {
          "enum": ["android", "ios"],
          "type": "string",
          "description": "Operating system of mobile phone"
        },
        "oldToken": {
          "type": "string",
          "description": "Previous token - to be deleted."
        }
      },
      "required": ["token", "mobileDeviceId", "mobileOs"]
    },
    "UsersReadPreferences": {
      "properties": {
        "mfaEnabled": {
          "type": "boolean",
          "description": "Indicates whether MFA is enabled."
        },
        "mfaMethod": {
          "type": "string",
          "description": "The method of MFA (&quot;TEXT&quot;, &quot;EMAIL&quot;, or &quot;BOTH&quot;)."
        },
        "notificationsEnabled": {
          "type": "boolean",
          "description": "Indicates whether notifications are enabled."
        },
        "emailEnabled": {
          "type": "boolean",
          "description": "Indicates whether email notification is enabled."
        },
        "inAppEnabled": {
          "type": "boolean",
          "description": "Indicates whether in app notification is enabled."
        },
        "deviceOnline": {
          "type": "boolean",
          "description": "Indicates whether notifications for devices coming online is enabled"
        },
        "deviceOffline": {
          "type": "boolean",
          "description": "Indicates whether notifications for devices going offline is enabled"
        },
        "deviceDegraded": {
          "type": "boolean",
          "description": "Indicates whether notifications for devices becoming degraded is enabled"
        },
        "phoneNumber": {
          "type": "string",
          "description": "Returns users phone number"
        },
        "accountsLinked": {
          "type": "array",
          "description": "Returns accounts linked in migration processes",
          "items": { "type": "object" }
        },
        "accountsLinkedInvision": {
          "type": "array",
          "description": "Returns accounts linked in invision migration processes",
          "items": { "type": "object" }
        }
      },
      "required": [
        "mfaEnabled",
        "mfaMethod",
        "notificationsEnabled",
        "emailEnabled",
        "inAppEnabled",
        "deviceOnline",
        "deviceOffline",
        "deviceDegraded",
        "phoneNumber",
        "accountsLinked",
        "accountsLinkedInvision"
      ]
    },
    "UsersUpdatePreferencesRequest": {
      "properties": {
        "notificationsEnabled": {
          "type": "boolean",
          "description": "Indicates whether notifications are enabled."
        },
        "emailEnabled": {
          "type": "boolean",
          "description": "Indicates whether email notification is enabled."
        },
        "inAppEnabled": {
          "type": "boolean",
          "description": "Indicates whether in app notification is enabled."
        },
        "deviceOnline": {
          "type": "boolean",
          "description": "Indicates whether notifications for devices coming online is enabled"
        },
        "deviceOffline": {
          "type": "boolean",
          "description": "Indicates whether notifications for devices going offline is enabled"
        },
        "deviceDegraded": {
          "type": "boolean",
          "description": "Indicates whether notifications for devices becoming degraded is enabled"
        }
      }
    },
    "UsersResendInviteRequest": {
      "properties": {
        "userId": {
          "type": "string",
          "description": "ID of intended recipient."
        }
      },
      "required": ["userId"]
    },
    "UsersSetGroupsRequest": {
      "properties": {
        "userIds": {
          "type": "array",
          "description": "The users being updated.",
          "items": { "type": "string" }
        },
        "groupIds": {
          "type": "array",
          "description": "The groups to set.",
          "items": { "type": "string" }
        }
      },
      "required": ["userIds", "groupIds"]
    },
    "UsersTransferOwnershipRequest": {
      "properties": {
        "newOwnerUserId": {
          "type": "string",
          "description": "UserId of the account to transfer ownership to."
        },
        "transferOwnerToGroupIds": {
          "type": "array",
          "description": "GroupId(s) of the group(s) you want to transfer yourself to.",
          "items": { "type": "string" }
        }
      },
      "required": ["newOwnerUserId"]
    },
    "UsersValidatePasswordRequest": {
      "properties": {
        "password": {
          "type": "string",
          "description": "Password entered by user."
        }
      },
      "required": ["password"]
    },
    "WAPNetworkConfigGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "networkIndex": {
          "type": "integer",
          "description": "The index of the network for which user is requesting configuration."
        }
      },
      "required": ["deviceId"]
    },
    "WAPNetworkConfigGet": {
      "properties": {
        "networkIndex": {
          "type": "integer",
          "description": "The number identifier of the network. If no index is provided, a request will not be sent to the device and only metadata will be returned."
        },
        "mac": { "type": "string", "description": "MAC address" },
        "ssid": { "type": "string", "description": "The SSID of the network." },
        "interface": {
          "type": "string",
          "description": "Radio interface of network"
        },
        "enabled": {
          "type": "boolean",
          "description": "Indicates whether the SSID is enabled or disabled."
        },
        "security": {
          "enum": ["OPEN", "WPA2PSK", "WPAPSKMIXED", "WPA2", "WPAMIXED", "WEP"],
          "type": "string",
          "description": "The security protocol of the network."
        },
        "password": {
          "type": "string",
          "description": "The password for the network."
        },
        "radiusServer": {
          "type": "string",
          "description": "The IP address of the radius server."
        },
        "radiusPort": {
          "type": "integer",
          "description": "The port number of the radius server."
        },
        "radiusSecret": {
          "type": "string",
          "description": "The password for the radius server."
        },
        "broadcastEnabled": {
          "type": "boolean",
          "description": "Indicates whether the SSID is broadcasting."
        },
        "separationEnabled": {
          "type": "boolean",
          "description": "Indicates whether channel separation is enabled on the network."
        },
        "vlanIsolation": {
          "type": "boolean",
          "description": "Returns VLAN isolation."
        },
        "vlanTagged": {
          "type": "boolean",
          "description": "Returns VLAN tagging."
        },
        "isVlanSupported": {
          "type": "boolean",
          "description": "Is VLAN configuration supported for this device. If false, dummy values are provided for vlanTagged and vlanIsolation."
        },
        "vlanID": {
          "type": "integer",
          "description": "Returns VLAN ID for tagging."
        }
      },
      "required": [
        "networkIndex",
        "mac",
        "ssid",
        "interface",
        "enabled",
        "security",
        "broadcastEnabled",
        "separationEnabled",
        "vlanIsolation",
        "vlanTagged",
        "isVlanSupported"
      ]
    },
    "WAPNetworkConfigSetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "networkIndex": {
          "type": "integer",
          "description": "The number identifier of the network."
        },
        "ssid": { "type": "string", "description": "The SSID of the network." },
        "enabled": {
          "type": "boolean",
          "description": "Indicates whether the SSID is enabled or disabled."
        },
        "security": {
          "enum": ["OPEN", "WPA2PSK", "WPAPSKMIXED", "WPA2", "WPAMIXED", "WEP"],
          "type": "string",
          "description": "The security protocol of the network."
        },
        "password": {
          "type": "string",
          "description": "The password for the network."
        },
        "radiusServer": {
          "type": "string",
          "description": "The IP address of the radius server."
        },
        "radiusPort": {
          "type": "integer",
          "description": "The port number of the radius server."
        },
        "radiusSecret": {
          "type": "string",
          "description": "The password for the radius server."
        },
        "broadcastEnabled": {
          "type": "boolean",
          "description": "Indicates whether the SSID is broadcasting."
        },
        "separationEnabled": {
          "type": "boolean",
          "description": "Indicates whether channel separation is enabled on the network."
        },
        "vlanIsolation": {
          "type": "boolean",
          "description": "Sets VLAN isolation."
        },
        "vlanTagged": {
          "type": "boolean",
          "description": "Sets VLAN tagging."
        },
        "vlanID": {
          "type": "integer",
          "description": "Sets VLAN ID for tagging."
        }
      },
      "required": [
        "deviceId",
        "networkIndex",
        "ssid",
        "enabled",
        "security",
        "broadcastEnabled",
        "separationEnabled",
        "vlanIsolation",
        "vlanTagged"
      ]
    },
    "WAPNetworkConfigSet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "WAPRadioConfigGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The WAP's Device ID." },
        "interface": {
          "enum": ["24GHz", "5GHz"],
          "type": "string",
          "description": "Interface of desired radio config."
        }
      },
      "required": ["deviceId", "interface"]
    },
    "WAPRadioConfigGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The WAP's Device ID." },
        "interface": {
          "enum": ["24GHz", "5GHz"],
          "type": "string",
          "description": "Returned interface"
        },
        "enabled": { "type": "boolean", "description": "Radio enabled state" },
        "opMode": {
          "enum": ["Access", "Point", "Repeater"],
          "type": "string",
          "description": "Radio operation mode."
        },
        "wirelessMode": {
          "enum": [
            "80211B",
            "80211G",
            "80211BG",
            "80211BGN",
            "80211N",
            "80211A",
            "80211AN",
            "80211ACN"
          ],
          "type": "string",
          "description": "Radio wireless mode. For 2.4GHz, use &quot;802.11B&quot;, &quot;802.11G&quot;, &quot;802.11BG&quot;, &quot;802.11BGN&quot;, or &quot;802.11N&quot;. For 5GHz, use &quot;802.11N&quot;, &quot;802.11A&quot;, &quot;802.11AN&quot;, or &quot;802.11ACN&quot;."
        },
        "channel": {
          "enum": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "36",
            "40",
            "44",
            "48",
            "52",
            "56",
            "60",
            "64",
            "100",
            "104",
            "108"
          ],
          "type": "integer",
          "description": "Radio channel. 0 = AUTO for both interfaces. For 2.4GHz, use 0-13. For 5GHz use 0, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, or 108."
        },
        "transmitPower": {
          "type": "integer",
          "description": "Radio transmit power. 15 is low power (30%) and 29 is Full Power (100%)."
        }
      },
      "required": [
        "deviceId",
        "interface",
        "enabled",
        "opMode",
        "wirelessMode",
        "channel",
        "transmitPower"
      ]
    },
    "WAPRadioConfigSetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The WAP's Device ID." },
        "interface": {
          "enum": ["24GHz", "5GHz"],
          "type": "string",
          "description": "Returned interface"
        },
        "enabled": { "type": "boolean", "description": "Radio enabled state" },
        "opMode": {
          "enum": ["Access", "Point", "Repeater"],
          "type": "string",
          "description": "Radio operation mode."
        },
        "wirelessMode": {
          "enum": [
            "80211B",
            "80211G",
            "80211BG",
            "80211BGN",
            "80211N",
            "80211A",
            "80211AN",
            "80211ACN"
          ],
          "type": "string",
          "description": "Radio wireless mode. For 2.4GHz, use &quot;802.11B&quot;, &quot;802.11G&quot;, &quot;802.11BG&quot;, &quot;802.11BGN&quot;, or &quot;802.11N&quot;. For 5GHz, use &quot;802.11N&quot;, &quot;802.11A&quot;, &quot;802.11AN&quot;, or &quot;802.11ACN&quot;."
        },
        "channel": {
          "enum": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "36",
            "40",
            "44",
            "48",
            "52",
            "56",
            "60",
            "64",
            "100",
            "104",
            "108"
          ],
          "type": "integer",
          "description": "Radio channel. 0 = AUTO for both interfaces. For 2.4GHz, use 0-13. For 5GHz use 0, 36, 40, 44, 48, 52, 56, 60, 64, 100, 104, or 108."
        },
        "transmitPower": {
          "type": "integer",
          "description": "Radio transmit power. 15 is low power (30%) and 29 is Full Power (100%)."
        }
      },
      "required": [
        "deviceId",
        "interface",
        "enabled",
        "opMode",
        "wirelessMode",
        "channel",
        "transmitPower"
      ]
    },
    "WAPRadioConfigSet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The WAP's Device ID." }
      },
      "required": ["deviceId"]
    },
    "WAPStatusGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The WAP's Device ID" }
      },
      "required": ["deviceId"]
    },
    "WAPStatusGet": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        },
        "system": {
          "type": "array",
          "description": "Array of system status information.",
          "items": {
            "type": "object",
            "properties": {
              "cpu": {
                "type": "number",
                "description": "Percent of CPU usage."
              },
              "memFree": {
                "type": "integer",
                "description": "Free memory in bytes."
              },
              "memUsed": {
                "type": "integer",
                "description": "Memory being used in bytes."
              }
            },
            "required": ["cpu", "memFree", "memUsed"]
          }
        },
        "lan": {
          "type": "array",
          "description": "Array of LAN status information.",
          "items": {
            "type": "object",
            "properties": {
              "rx": {
                "type": "integer",
                "description": "Count of bytes received."
              },
              "tx": {
                "type": "integer",
                "description": "Count of bytes transmitted."
              }
            },
            "required": ["rx", "tx"]
          }
        },
        "radios": {
          "type": "array",
          "description": "Array of radios status information.",
          "items": {
            "type": "object",
            "properties": {
              "interface": {
                "type": "string",
                "description": "The radio interface."
              },
              "rx": {
                "type": "integer",
                "description": "Count of bytes received."
              },
              "tx": {
                "type": "integer",
                "description": "Count of bytes transmitted."
              },
              "networks": {
                "type": "integer",
                "description": "Count of wireless connections."
              },
              "clients": {
                "type": "integer",
                "description": "Sum of clients for all networks."
              },
              "clientList": {
                "type": "array",
                "description": "Array of clients' information.",
                "items": {
                  "type": "object",
                  "properties": {
                    "cmac": {
                      "type": "string",
                      "description": "The client MAC address."
                    },
                    "rx": {
                      "type": "integer",
                      "description": "Count of bytes received."
                    },
                    "tx": {
                      "type": "integer",
                      "description": "Count of bytes transmitted."
                    }
                  }
                }
              },
              "opMode": {
                "type": "string",
                "description": "The radio's current operation mode."
              },
              "enabled": {
                "type": "boolean",
                "description": "Indicates whether enabled."
              }
            },
            "required": ["interface", "opMode", "enabled"]
          }
        }
      },
      "required": ["deviceId", "system", "lan", "radios"]
    },
    "WAPSystemConfigGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The WAP's Device ID." }
      },
      "required": ["deviceId"]
    },
    "WAPSystemConfigGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The WAP's Device ID." },
        "name": { "type": "string", "description": "The WAP name." },
        "steeringEnabled": {
          "type": "boolean",
          "description": "Indicates whether band steering is enabled."
        },
        "opMode": {
          "type": "boolean",
          "description": "Operation Mode AP, REPEATER, or MESH"
        },
        "opRole": {
          "type": "boolean",
          "description": "If in MESH opMode then will be CONTROLLER or NODE"
        },
        "fastRoamingEnabled": {
          "type": "boolean",
          "description": "Indicates whether fast roaming is enabled."
        },
        "isSupported": {
          "type": "boolean",
          "description": "Indicates if this model WAP is supported."
        },
        "hasUnsupportedFirmware": {
          "type": "boolean",
          "description": "Indicates if the current firmware on the WAP is supported (only the latest is supported)."
        }
      },
      "required": [
        "deviceId",
        "name",
        "opMode",
        "fastRoamingEnabled",
        "isSupported",
        "hasUnsupportedFirmware"
      ]
    },
    "WAPSystemConfigSetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The WAP's Device ID." },
        "steeringEnabled": {
          "type": "boolean",
          "description": "Indicates whether band steering is enabled."
        },
        "fastRoamingEnabled": {
          "type": "boolean",
          "description": "Indicates whether fast roaming is enabled."
        }
      },
      "required": ["deviceId", "fastRoamingEnabled"]
    },
    "WAPSystemConfigSet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The WAP's Device ID." }
      },
      "required": ["deviceId"]
    },
    "WAPSystemSetRequest": {
      "properties": {
        "opMode": {
          "type": "string",
          "description": "The WAP operation mode."
        },
        "opRole": { "type": "string", "description": "The WAP role mode." },
        "system_name": { "type": "string", "description": "The WAP name." },
        "led_enable": {
          "type": "boolean",
          "description": "Indicates whether led is enabled."
        },
        "resetPassword_enable": {
          "type": "boolean",
          "description": "Indicates whether pass reset is enabled."
        }
      },
      "required": [
        "opMode",
        "opRole",
        "system_name",
        "led_enable",
        "resetPassword_enable"
      ]
    },
    "WAPSystemSet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The WAP's Device ID." }
      },
      "required": ["deviceId"]
    },
    "WapApplyRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "WapFactoryResetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "WapGuestNetworkConfigGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "interface": {
          "enum": ["24GHz", "5GHz"],
          "type": "string",
          "description": "The interface on which the network is broadcasting."
        },
        "opMode": {
          "enum": ["Mesh", "AP", "Repeater"],
          "type": "string",
          "description": "The WAP operation mode"
        }
      },
      "required": ["deviceId", "interface", "opMode"]
    },
    "WapGuestNetworkConfigGet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "interface": {
          "enum": ["24GHz", "5GHz"],
          "type": "string",
          "description": "The interface on which the network is broadcasting."
        },
        "ssid": {
          "type": "string",
          "description": "The SSID of the guest network."
        },
        "guestEnabled": {
          "type": "boolean",
          "description": "Indicates whether the guest network is enabled."
        },
        "broadcastEnabled": {
          "type": "boolean",
          "description": "Indicates whether the SSID is broadcasting."
        },
        "security": {
          "enum": ["OPEN", "WPA2PSK", "WPAPSKMIXED", "WEP"],
          "type": "string",
          "description": "The security protocol of the network."
        },
        "password": {
          "type": "string",
          "description": "The password for the network."
        },
        "separationEnabled": {
          "type": "boolean",
          "description": "Indicates whether channel separation is enabled on the network."
        },
        "gatewayIp": {
          "type": "string",
          "description": "The gateway IP address of the guest network."
        },
        "subnetMask": {
          "type": "string",
          "description": "The subnet mask of the guest network."
        },
        "startingIp": {
          "type": "string",
          "description": "The starting IP address to be used with automatic DHCP server settings."
        },
        "endingIp": {
          "type": "string",
          "description": "The ending IP address to be used with automatic DHCP server settings."
        },
        "wepAuth": {
          "enum": ["OPEN", "SHARED"],
          "type": "string",
          "description": "The auth mode for the WEP."
        },
        "wepInputType": {
          "enum": ["HEX", "ASCII"],
          "type": "string",
          "description": "The key input type."
        },
        "wepKeyLength": {
          "enum": ["64bit", "128bit"],
          "type": "string",
          "description": "The key input length."
        },
        "wepDefaultKey": {
          "type": "integer",
          "description": "The default key."
        },
        "wepKey1": { "type": "string", "description": "Returns a key." },
        "wepKey2": { "type": "string", "description": "Returns a key." },
        "wepKey3": { "type": "string", "description": "Returns a key." },
        "wepKey4": { "type": "string", "description": "Returns a key." },
        "vlanIsolation": {
          "type": "boolean",
          "description": "Returns VLAN isolation."
        },
        "vlanTagged": {
          "type": "boolean",
          "description": "Returns VLAN tagging."
        },
        "isVlanSupported": {
          "type": "boolean",
          "description": "Is VLAN configuration supported for this device. If false, dummy values are provided for vlanTagged and vlanIsolation."
        },
        "vlanID": {
          "type": "integer",
          "description": "Returns VLAN ID for tagging."
        }
      },
      "required": [
        "deviceId",
        "interface",
        "ssid",
        "guestEnabled",
        "broadcastEnabled",
        "security",
        "separationEnabled",
        "vlanIsolation",
        "vlanTagged",
        "isVlanSupported"
      ]
    },
    "WapGuestNetworkConfigSetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "interface": {
          "enum": ["24GHz", "5GHz"],
          "type": "string",
          "description": "The interface on which the network is broadcasting."
        },
        "opMode": {
          "enum": ["Mesh", "AP", "Repeater"],
          "type": "string",
          "description": "The WAP operation mode"
        },
        "ssid": {
          "type": "string",
          "description": "The SSID of the guest network."
        },
        "guestEnabled": {
          "type": "boolean",
          "description": "Indicates whether the guest network is enabled."
        },
        "broadcastEnabled": {
          "type": "boolean",
          "description": "Indicates whether the SSID is broadcasting."
        },
        "security": {
          "enum": ["OPEN", "WPA2PSK", "WPAPSKMIXED", "WEP"],
          "type": "string",
          "description": "The security protocol of the network."
        },
        "password": {
          "type": "string",
          "description": "The password for the network."
        },
        "separationEnabled": {
          "type": "boolean",
          "description": "Indicates whether channel separation is enabled on the network."
        },
        "gatewayIp": {
          "type": "string",
          "description": "The gateway IP address of the guest network."
        },
        "subnetMask": {
          "type": "string",
          "description": "The subnet mask of the guest network."
        },
        "startingIp": {
          "type": "string",
          "description": "The starting IP address to be used with automatic DHCP server settings."
        },
        "endingIp": {
          "type": "string",
          "description": "The ending IP address to be used with automatic DHCP server settings."
        },
        "vlanIsolation": {
          "type": "boolean",
          "description": "VLAN isolation."
        },
        "vlanTagged": { "type": "boolean", "description": "VLAN tagging." },
        "vlanID": { "type": "integer", "description": "VLAN ID for tagging." }
      },
      "required": [
        "deviceId",
        "interface",
        "opMode",
        "ssid",
        "guestEnabled",
        "broadcastEnabled",
        "security",
        "separationEnabled",
        "vlanIsolation",
        "vlanTagged"
      ]
    },
    "WapGuestNetworkConfigSet": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "WapNetworkAddRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID.q" },
        "SSID": { "type": "string", "description": "The SSID to add." },
        "broadcastEnabled": {
          "type": "boolean",
          "description": "Indicates if SSID is to be broadcast."
        },
        "password": { "type": "string", "description": "Password for SSID." },
        "radiusPort": {
          "type": "integer",
          "description": "Radius server port."
        },
        "radiusServer": {
          "type": "string",
          "description": "Radius server ip address."
        },
        "radiusSecret": {
          "type": "string",
          "description": "The secret for the radius server."
        },
        "interface": {
          "enum": ["24GHz", "5GHz", "BOTH"],
          "type": "string",
          "description": "Radio interface for SSID."
        },
        "security": {
          "enum": [
            "OPEN",
            "WPA2PSK",
            "WPAPSK",
            "MIXED",
            "WPA2",
            "WPA",
            "MIXED"
          ],
          "type": "string",
          "description": "Security type for SSID."
        }
      },
      "required": [
        "deviceId",
        "SSID",
        "broadcastEnabled",
        "interface",
        "security"
      ]
    },
    "WapNetworkAdd": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "WapNetworkDeleteRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." },
        "networkIndex": {
          "type": "integer",
          "description": "The number identifier of the network."
        },
        "ssid": { "type": "string", "description": "The SSID of the network." }
      },
      "required": ["deviceId", "networkIndex", "ssid"]
    },
    "WapNetworkDelete": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "WapNetworkStatusGetRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "WapNetworkStatusGet": {
      "properties": {
        "networks": {
          "type": "array",
          "description": "Configured networks on device.",
          "items": {
            "type": "object",
            "properties": {
              "networkIndex": {
                "type": "integer",
                "description": "Index of network"
              },
              "enabled": {
                "type": "boolean",
                "description": "Indicates if network is enabled"
              },
              "mac": { "type": "string", "description": "Mac of network" },
              "ssid": { "type": "string", "description": "SSID name" },
              "canDelete": {
                "type": "boolean",
                "description": "Indicates if ssid can be deleted."
              },
              "interface": {
                "type": "string",
                "description": "Radio frequency on which network exists"
              },
              "clients": {
                "type": "integer",
                "description": "Number of clients on network"
              },
              "rx": {
                "type": "integer",
                "description": "Sum of bytes received"
              },
              "tx": {
                "type": "integer",
                "description": "Sum of bytes transmitted"
              }
            },
            "required": [
              "networkIndex",
              "enabled",
              "mac",
              "ssid",
              "canDelete",
              "interface",
              "clients",
              "rx",
              "tx"
            ]
          }
        },
        "guestNetworks": {
          "type": "array",
          "description": "Configured guest network on device.",
          "items": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean",
                "description": "Indicates if network is enabled"
              },
              "mac": { "type": "string", "description": "Mac of network" },
              "ssid": { "type": "string", "description": "SSID name" },
              "interface": {
                "type": "string",
                "description": "Radio frequency on which network exists"
              }
            },
            "required": ["enabled", "mac", "ssid", "interface"]
          }
        }
      },
      "required": ["networks", "guestNetworks"]
    },
    "WapRevertRequest": {
      "properties": {
        "deviceId": { "type": "string", "description": "The Device ID." }
      },
      "required": ["deviceId"]
    },
    "WattboxAllOutletsConfigGetRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        }
      },
      "required": ["deviceId"]
    },
    "WattboxAllOutletsConfigGet": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        },
        "outlets": {
          "type": "array",
          "description": "Array of outlets on WattBox",
          "items": {
            "type": "object",
            "properties": {
              "number": {
                "type": "number",
                "description": "The number of the outlet"
              },
              "name": {
                "type": "string",
                "description": "The name of the outlet"
              },
              "powerOnDelay": {
                "type": "number",
                "description": "The delay to power on outlet in seconds"
              },
              "outletMethod": {
                "type": "string",
                "description": "The mode of the outlet (allows the user to configure if the outlet will be able to be turned off)"
              },
              "outletTrigger": {
                "type": "boolean",
                "description": "Indicates whether the trigger function is currently turned on"
              },
              "dualBay": {
                "type": "boolean",
                "description": "Indicates whether the bay is a dual-outlet"
              },
              "clockwiseRotation": {
                "type": "integer",
                "description": "Indicates the degrees of rotation of this outlet (clockwise)"
              },
              "methodOptions": {
                "type": "array",
                "description": "Possible outletMethod options for this outlet.",
                "items": { "type": "string" }
              }
            },
            "required": [
              "number",
              "name",
              "powerOnDelay",
              "outletMethod",
              "dualBay",
              "clockwiseRotation",
              "methodOptions"
            ]
          }
        }
      },
      "required": ["deviceId", "outlets"]
    },
    "WattboxAllOutletsConfigSetRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        },
        "outlets": {
          "type": "array",
          "description": "Array of outlets on WattBox",
          "items": {
            "type": "object",
            "properties": {
              "number": {
                "type": "integer",
                "description": "The number of the outlet"
              },
              "name": {
                "type": "string",
                "description": "The name of the outlet"
              },
              "powerOnDelay": {
                "type": "integer",
                "description": "The delay to power on outlet in seconds"
              },
              "outletMethod": {
                "enum": ["NORMAL", "RESETONLY", "ENABLED", "DISABLED"],
                "type": "string",
                "description": "The mode of the outlet; allows the user to configure if the outlet will be able to be turned off. For 200/300/600 series, allowable values are limited to &quot;NORMAL&quot;, and &quot;RESET_ONLY&quot;.  For 300/700 series, allowable values are limited to &quot;ENABLED&quot;, &quot;DISABLED&quot;, and &quot;RESET_ONLY&quot;."
              },
              "outletTrigger": {
                "type": "boolean",
                "description": "Indicates whether the trigger function is currently turned on"
              }
            },
            "required": ["number", "name", "powerOnDelay", "outletMethod"]
          }
        }
      },
      "required": ["deviceId", "outlets"]
    },
    "WattboxAllOutletsConfigSet": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        }
      },
      "required": ["deviceId"]
    },
    "WattboxButtonActionsConfigRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "Array of schedules on the Wattbox"
        },
        "version": { "type": "string", "description": "API version number" },
        "enabled": {
          "type": "boolean",
          "description": "Actions settings here will be used or the default button behavior should be used"
        },
        "blockingTimeout": {
          "type": "integer",
          "description": "Period in seconds for blocking repeat actions"
        },
        "actions": {
          "type": "array",
          "description": "List of assigned actions",
          "items": {
            "type": "object",
            "properties": {
              "button": {
                "type": "string",
                "description": "Button to assign an action to (button1, button2, button12, fp_button1, fp_button2, fp_button12 ,trigger)"
              },
              "name": { "type": "string", "description": "Button action name" },
              "actionType": {
                "type": "string",
                "description": "Action to perform when the button is pressed (none, default, reset_all, all_on, all_off, reset_selected, selected_on, selected_off, custom)"
              },
              "outlets": {
                "type": "array",
                "description": "Contains the list of assigned outlet actions",
                "items": {
                  "type": "object",
                  "properties": {
                    "number": {
                      "type": "integer",
                      "description": "Outlet number."
                    },
                    "outletAction": {
                      "type": "string",
                      "description": "This field contains the action to perform on the outlet when the button is pressed (none, reset, on, off)"
                    }
                  },
                  "required": ["number", "outletAction"]
                }
              }
            },
            "required": ["button", "name", "actionType", "outlets"]
          }
        }
      },
      "required": [
        "deviceId",
        "version",
        "enabled",
        "blockingTimeout",
        "actions"
      ]
    },
    "WattboxButtonActionsConfig": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        },
        "version": { "type": "string", "description": "API version number" },
        "enabled": {
          "type": "boolean",
          "description": "Actions settings here will be used or the default button behavior should be used"
        },
        "blockingTimeout": {
          "type": "integer",
          "description": "Period in seconds for blocking repeat actions"
        },
        "actions": {
          "type": "array",
          "description": "List of assigned actions",
          "items": {
            "type": "object",
            "properties": {
              "button": {
                "type": "string",
                "description": "Button to assign an action to (button1, button2, button12, fp_button1, fp_button2, fp_button12 ,trigger)"
              },
              "name": { "type": "string", "description": "Button action name" },
              "actionType": {
                "type": "string",
                "description": "Action to perform when the button is pressed (none, default, reset_all, all_on, all_off, reset_selected, selected_on, selected_off, custom)"
              },
              "outlets": {
                "type": "array",
                "description": "Contains the list of assigned outlet actions",
                "items": {
                  "type": "object",
                  "properties": {
                    "number": {
                      "type": "integer",
                      "description": "Outlet number."
                    },
                    "outletAction": {
                      "type": "string",
                      "description": "This field contains the action to perform on the outlet when the button is pressed (none, reset, on, off)"
                    }
                  },
                  "required": ["number", "outletAction"]
                }
              }
            },
            "required": ["button", "name", "actionType", "outlets"]
          }
        }
      },
      "required": [
        "deviceId",
        "version",
        "enabled",
        "blockingTimeout",
        "actions"
      ]
    },
    "WattboxConnectionStatusGetRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        }
      },
      "required": ["deviceId"]
    },
    "WattboxConnectionStatusGet": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        },
        "connectionStatus": {
          "type": "array",
          "description": "Array of connection statuses",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The alias for the host being pinged"
              },
              "host": {
                "type": "string",
                "description": "The host URL or IP Address"
              },
              "ipAddress": {
                "type": "string",
                "description": "The resolved IP Address corresponding to the host"
              },
              "responseTime": {
                "type": "string",
                "description": "The ping response time (milliseconds)"
              },
              "timeout": {
                "type": "number",
                "format": "float",
                "description": "The percent of pings that timeout"
              }
            },
            "required": ["name", "host", "ipAddress", "responseTime", "timeout"]
          }
        }
      },
      "required": ["deviceId", "connectionStatus"]
    },
    "WattboxDisableAutoRebootRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        }
      },
      "required": ["deviceId"]
    },
    "WattboxDisableAutoReboot": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        },
        "status": {
          "type": "boolean",
          "description": "Indicates the status of auto-reboot (true=on, false=off)"
        }
      },
      "required": ["deviceId"]
    },
    "WattboxEnableAutoRebootRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        }
      },
      "required": ["deviceId"]
    },
    "WattboxEnableAutoReboot": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        },
        "status": {
          "type": "boolean",
          "description": "Indicates whether auto reboot has been turned on (true=on, false=off)"
        }
      },
      "required": ["deviceId"]
    },
    "WattboxExecuteButtonRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        },
        "version": { "type": "string", "description": "API version number" },
        "button": {
          "type": "string",
          "description": "The Wattbox's button to execute an action for"
        }
      },
      "required": ["deviceId", "version", "button"]
    },
    "WattboxExecuteButton": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        }
      },
      "required": ["deviceId"]
    },
    "WattboxPingHostsRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        },
        "timeout": {
          "type": "integer",
          "description": "The duration device waits on a ping response (in seconds) before considering the ping failed"
        },
        "addresses": {
          "type": "array",
          "description": "Array of addresses to ping",
          "items": {
            "type": "object",
            "properties": {
              "host": {
                "type": "string",
                "description": "The IP address or URL the device will ping"
              },
              "protocol": {
                "type": "string",
                "description": "The protocol used to verify connection status (&quot;UDP&quot; or &quot;TCP&quot;)"
              }
            },
            "required": ["host", "protocol"]
          }
        }
      },
      "required": ["deviceId", "timeout", "addresses"]
    },
    "WattboxPingHosts": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        },
        "responses": {
          "type": "array",
          "description": "Array of responses",
          "items": {
            "type": "object",
            "properties": {
              "host": {
                "type": "string",
                "description": "The IP address or URL the device pinged"
              },
              "responseTime": {
                "type": "string",
                "description": "The duration of the ping response time (milliseconds or &quot;timeout&quot;)"
              }
            },
            "required": ["host", "responseTime"]
          }
        }
      },
      "required": ["deviceId", "responses"]
    },
    "WattboxResetAllOutletsRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        }
      },
      "required": ["deviceId"]
    },
    "WattboxResetAllOutlets": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        },
        "statuses": {
          "type": "array",
          "description": "Array of statuses (boolean) for each outlet",
          "items": { "type": "boolean" }
        }
      },
      "required": ["deviceId", "statuses"]
    },
    "WattboxResetOutletRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        },
        "outlet": {
          "type": "integer",
          "description": "The number of the outlet to perform action on"
        }
      },
      "required": ["deviceId", "outlet"]
    },
    "WattboxResetOutlet": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        },
        "status": {
          "type": "boolean",
          "description": "Status of the outlet (true=on, false=off)"
        }
      },
      "required": ["deviceId", "status"]
    },
    "WattboxSafeVoltageRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        },
        "safeVoltageControl": {
          "type": "boolean",
          "description": "Status of Safe Voltage switch on device."
        },
        "safeVoltageValue": {
          "type": "number",
          "description": "Current safe voltage setting value."
        }
      },
      "required": ["deviceId", "safeVoltageControl", "safeVoltageValue"]
    },
    "WattboxSchedulesGetRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        }
      },
      "required": ["deviceId"]
    },
    "WattboxSchedulesGet": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        },
        "schedules": {
          "type": "array",
          "description": "Array of schedules on the wattbox",
          "items": {
            "type": "object",
            "properties": {
              "action": {
                "type": "string",
                "description": "The action applied to the outlet"
              },
              "targets": {
                "type": "array",
                "description": "The outlets on which the action is taken",
                "items": { "type": "number" }
              },
              "date": {
                "type": "string",
                "description": "The date on which schedule should execute (&quot;yyy/mm/dd&quot;)"
              },
              "days": {
                "type": "array",
                "description": "The days of the week the schedule should run on",
                "items": { "type": "number" }
              },
              "time": {
                "type": "string",
                "description": "The time when the schedule should execute (&quot;HH:MM&quot;)"
              },
              "recurring": {
                "type": "boolean",
                "description": "Indicates whether schedule should execute on a continual basis"
              },
              "name": {
                "type": "string",
                "description": "The name of the schedule"
              },
              "enabled": {
                "type": "boolean",
                "description": "Indicates whether the schedule is currently turned on (true=on, false=off)"
              }
            },
            "required": [
              "action",
              "targets",
              "time",
              "recurring",
              "name",
              "enabled"
            ]
          }
        }
      },
      "required": ["deviceId", "schedules"]
    },
    "WattboxSchedulesSetRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        },
        "schedules": {
          "type": "array",
          "description": "Array of schedules on the wattbox",
          "items": {
            "type": "object",
            "properties": {
              "action": {
                "type": "string",
                "description": "The action applied to the outlet"
              },
              "targets": {
                "type": "array",
                "description": "The outlets on which the action is taken",
                "items": { "type": "integer" }
              },
              "date": {
                "type": "string",
                "description": "The date on which schedule should execute (&quot;yyyy/mm/dd&quot;)"
              },
              "days": {
                "type": "array",
                "description": "The days of the week the schedule should run on (1=Sunday, 2=Monday, 3=Tuesday, 4=Wednesday, 5=Thursday, 6=Friday, 7=Saturday)",
                "items": { "type": "integer" }
              },
              "time": {
                "type": "string",
                "description": "The time when the schedule should execute (&quot;HH:MM&quot;)"
              },
              "recurring": {
                "type": "boolean",
                "description": "Indicates whether schedule should execute on a continual basis"
              },
              "name": {
                "type": "string",
                "description": "The name of the schedule"
              },
              "enabled": {
                "type": "boolean",
                "description": "Indicates whether the schedule is currently turned on (true=on, false=off)"
              }
            },
            "required": [
              "action",
              "targets",
              "time",
              "recurring",
              "name",
              "enabled"
            ]
          }
        }
      },
      "required": ["deviceId", "schedules"]
    },
    "WattboxSchedulesSet": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        }
      },
      "required": ["deviceId"]
    },
    "WattboxStatusReadRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID."
        },
        "safeVoltageControl": {
          "type": "boolean",
          "description": "Status of Safe Voltage switch on device."
        },
        "safeVoltageValue": {
          "type": "number",
          "description": "Current safe voltage setting value."
        }
      },
      "required": ["deviceId"]
    },
    "WattboxStatusRead": {
      "properties": {
        "dateTime": {
          "type": "string",
          "description": "The timestamp of the status data."
        },
        "autoReboot": {
          "type": "boolean",
          "description": "True if Auto Reboot is ON, false if not."
        },
        "outletStatus": {
          "type": "array",
          "description": "Array that indicates the status of each outlet (ON/OFF).",
          "items": { "type": "boolean" }
        },
        "ledStatus": {
          "enum": ["OFF", "GREEN", "RED", "GREENFLASHING", "REDFLASHING"],
          "type": "array",
          "description": "Status of each LED.",
          "items": { "type": "string" }
        },
        "safeVoltageControl": {
          "type": "boolean",
          "description": "Status of Safe Voltage switch on device."
        },
        "voltageStatus": {
          "type": "boolean",
          "description": "Indicates if the device has invoked Safe Voltage protection."
        },
        "voltageValue": {
          "type": "number",
          "description": "Voltage in decivolts."
        },
        "voltageHighValue": {
          "type": "number",
          "description": "Highest voltage in decivolts over past 60 seconds."
        },
        "voltageLowValue": {
          "type": "number",
          "description": "Lower voltage in decivolts over past 60 seconds."
        },
        "currentValue": {
          "type": "number",
          "description": "Present amperage in deciamps."
        },
        "powerValue": {
          "type": "number",
          "description": "Present wattage in watts."
        },
        "uptime": {
          "type": "number",
          "description": "Uptime of device in seconds elapsed."
        },
        "powerLost": {
          "type": "boolean",
          "description": "Indicates if AC power has been lost."
        },
        "batteryRunTime": {
          "type": "number",
          "description": "Estimated run time of the battery in minutes."
        },
        "batteryHealth": {
          "enum": ["Good", "Bad"],
          "type": "string",
          "description": "Description of the battery's health."
        },
        "batteryCharge": {
          "type": "string",
          "description": "Battery charge as percentage, format XX%."
        },
        "batteryLoad": {
          "type": "string",
          "description": "Battery load as percentage, format XX%."
        },
        "hasUps": {
          "type": "boolean",
          "description": "Indicates if the WattBox has a UPS attached."
        }
      },
      "required": [
        "dateTime",
        "autoReboot",
        "outletStatus",
        "ledStatus",
        "uptime"
      ]
    },
    "WattboxTimeoutConfigReadRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        }
      },
      "required": ["deviceId"]
    },
    "WattboxTimeoutConfigRead": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        },
        "timeoutBeforeReset": {
          "type": "number",
          "description": "How long (seconds) the device will wait for a ping response before failing the ping test."
        },
        "continuousTimeouts": {
          "enum": ["010"],
          "type": "number",
          "description": "How many pings must fail before an auto reboot will occur (value of 0 equals infinite attempts)."
        },
        "pingDelay": {
          "enum": ["130"],
          "type": "number",
          "description": "How long (minutes) the device will wait before it begins pinging again."
        },
        "rebootAttempts": {
          "enum": ["010"],
          "type": "number",
          "description": "The number of consecutive reboots the device will execute (value of 0 equals infinite attempts)."
        }
      },
      "required": [
        "deviceId",
        "timeoutBeforeReset",
        "continuousTimeouts",
        "pingDelay",
        "rebootAttempts"
      ]
    },
    "WattboxTimeoutConfigUpdateRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        },
        "timeoutBeforeReset": {
          "type": "number",
          "description": "How long (seconds) the device will wait for a ping response before failing the ping test."
        },
        "continuousTimeouts": {
          "enum": ["010"],
          "type": "number",
          "description": "How many pings must fail before an auto reboot will occur (value of 0 equals infinite attempts)."
        },
        "pingDelay": {
          "enum": ["130"],
          "type": "number",
          "description": "How long (minutes) the device will wait before it begins pinging again."
        },
        "rebootAttempts": {
          "enum": ["010"],
          "type": "number",
          "description": "The number of consecutive reboots the device will execute (value of 0 equals infinite attempts)."
        }
      },
      "required": [
        "deviceId",
        "timeoutBeforeReset",
        "continuousTimeouts",
        "pingDelay",
        "rebootAttempts"
      ]
    },
    "WattboxTimeoutConfigUpdate": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        }
      },
      "required": ["deviceId"]
    },
    "WattboxTurnOutletOffRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        },
        "outlet": {
          "type": "integer",
          "description": "The number of the outlet to turn off"
        }
      },
      "required": ["deviceId", "outlet"]
    },
    "WattboxTurnOutletOff": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        },
        "status": {
          "type": "boolean",
          "description": "The state of the outlet (true=on, false=off)"
        }
      },
      "required": ["deviceId", "status"]
    },
    "WattboxTurnOutletOnRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        },
        "outlet": {
          "type": "integer",
          "description": "The number of the outlet to turn on"
        }
      },
      "required": ["deviceId", "outlet"]
    },
    "WattboxTurnOutletOn": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        },
        "status": {
          "type": "boolean",
          "description": "The state of the outlet (true=on, false=off)"
        }
      },
      "required": ["deviceId", "status"]
    },
    "WattboxUPSAlarmSettingsGetRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        }
      },
      "required": ["deviceId"]
    },
    "WattboxUPSAlarmSettingsGet": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        },
        "enabled": {
          "type": "boolean",
          "description": "Indicates whether the UPS battery alarm is enabled"
        },
        "muted": {
          "type": "boolean",
          "description": "Indicates whether the UPS battery alarm is muted"
        }
      },
      "required": ["deviceId", "enabled", "muted"]
    },
    "WattboxUPSAlarmSettingsSetRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        },
        "enabled": {
          "type": "boolean",
          "description": "Indicates whether the UPS battery alarm is enabled"
        },
        "muted": {
          "type": "boolean",
          "description": "Indicates whether the UPS battery alarm is muted"
        }
      },
      "required": ["deviceId", "enabled", "muted"]
    },
    "WattboxUPSAlarmSettingsSet": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        }
      },
      "required": ["deviceId"]
    },
    "WattboxUPSConfigGetRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        }
      },
      "required": ["deviceId"]
    },
    "WattboxUPSConfigGet": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        },
        "batteryHealthTest": {
          "type": "boolean",
          "description": "Indicates whether the battery health test is enabled"
        },
        "outlets": {
          "type": "array",
          "description": "Array of outlets on WattBox",
          "items": {
            "type": "object",
            "properties": {
              "number": {
                "type": "integer",
                "description": "The number of the outlet"
              },
              "disconnectOption": {
                "type": "string",
                "description": "Indicates when to disconnect an outlet from UPS support (&quot;DISABLED&quot;/&quot;NEVER&quot;/&quot;25%&quot;/&quot;50%&quot;/&quot;75%&quot;)"
              }
            },
            "required": ["number", "disconnectOption"]
          }
        }
      },
      "required": ["deviceId", "batteryHealthTest", "outlets"]
    },
    "WattboxUPSConfigSetRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        },
        "batteryHealthTest": {
          "type": "boolean",
          "description": "Indicates whether the battery health test is enabled"
        },
        "outlets": {
          "type": "array",
          "description": "Array of outlets on WattBox",
          "items": {
            "type": "object",
            "properties": {
              "number": {
                "type": "integer",
                "description": "The number of the outlet"
              },
              "disconnectOption": {
                "enum": ["DISABLED", "NEVER", "25", "50", "75"],
                "type": "string",
                "description": "Indicates when to disconnect an outlet from UPS support"
              }
            },
            "required": ["number", "disconnectOption"]
          }
        }
      },
      "required": ["deviceId", "batteryHealthTest", "outlets"]
    },
    "WattboxUPSConfigSet": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        }
      },
      "required": ["deviceId"]
    },
    "WattboxUnderOverSettingsGetRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        }
      },
      "required": ["deviceId"]
    },
    "WattboxUnderOverSettingsGet": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        },
        "voltageUnder": {
          "type": "number",
          "description": "The voltage value below which a low-voltage alert will be generated (0-220)"
        },
        "voltageOver": {
          "type": "number",
          "description": "The voltage value above which a high-voltage alert will be generated (0-220)"
        },
        "currentUnder": {
          "type": "number",
          "description": "The current value under which a low-current alert will be generated (0-20)"
        },
        "currentOver": {
          "type": "number",
          "description": "The current value over which a high-current alert will be generated (0-20)"
        },
        "powerUnder": {
          "type": "number",
          "description": "The power value under which a low-power alert will be generated (0-4400)"
        },
        "powerOver": {
          "type": "number",
          "description": "The power value over which a high-power alert will be generated (0-4400)"
        }
      },
      "required": [
        "deviceId",
        "voltageUnder",
        "voltageOver",
        "currentUnder",
        "currentOver",
        "powerUnder",
        "powerOver"
      ]
    },
    "WattboxUnderOverSettingsSetRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        },
        "voltageUnder": {
          "type": "number",
          "description": "The voltage value below which a low-voltage alert will be generated (0-220)"
        },
        "voltageOver": {
          "type": "number",
          "description": "The voltage value above which a high-voltage alert will be generated (0-220)"
        },
        "currentUnder": {
          "type": "number",
          "description": "The current value under which a low-current alert will be generated (0-20)"
        },
        "currentOver": {
          "type": "number",
          "description": "The current value over which a high-current alert will be generated (0-20)"
        },
        "powerUnder": {
          "type": "number",
          "description": "The power value under which a low-power alert will be generated (0-4400)"
        },
        "powerOver": {
          "type": "number",
          "description": "The power value over which a high-power alert will be generated (0-4400)"
        }
      },
      "required": [
        "deviceId",
        "voltageUnder",
        "voltageOver",
        "currentUnder",
        "currentOver",
        "powerUnder",
        "powerOver"
      ]
    },
    "WattboxUnderOverSettingsSet": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        }
      },
      "required": ["deviceId"]
    },
    "WattboxWebsitesConfigGetRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        }
      },
      "required": ["deviceId"]
    },
    "WattboxWebsitesConfigGet": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        },
        "sites": {
          "type": "array",
          "description": "Array of sites on WattBox",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The alias name given for the host"
              },
              "host": {
                "type": "string",
                "description": "The IP address or URL for device to ping"
              },
              "protocol": {
                "enum": ["UDP", "TCP"],
                "type": "string",
                "description": "The protocol used to verify connection status"
              },
              "outlets": {
                "type": "array",
                "description": "The numbers of the outlets that are reset if the ping fail conditions are met",
                "items": { "type": "number" }
              }
            },
            "required": ["name", "host", "protocol", "outlets"]
          }
        },
        "operators": {
          "enum": ["AND", "OR"],
          "type": "array",
          "description": "The logical condition applied to determine whether an outlet should be reset.  This array will always contain the exact length of all outlets.  If an outlet is not specified for any hosts, the value is ignored.",
          "items": { "type": "string" }
        },
        "maxSupportedHosts": {
          "type": "number",
          "description": "The maximum number of supported hosts"
        }
      },
      "required": ["deviceId", "sites", "operators", "maxSupportedHosts"]
    },
    "WattboxWebsitesConfigSetRequest": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        },
        "sites": {
          "type": "array",
          "description": "Array of sites on WattBox",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The alias name given for the host"
              },
              "host": {
                "type": "string",
                "description": "The IP address or URL for device to ping"
              },
              "protocol": {
                "type": "string",
                "description": "The protocol used to verify connection status"
              },
              "outlets": {
                "type": "array",
                "description": "The numbers of the outlets that are reset if the ping fail conditions are met",
                "items": { "type": "integer" }
              }
            },
            "required": ["name", "host", "protocol", "outlets"]
          }
        },
        "operators": {
          "enum": ["AND", "OR"],
          "type": "array",
          "description": "The logical condition applied to determine whether an outlet should be reset.  This array will always contain the exact length of all outlets.  If an outlet is not specified for any hosts, the value is ignored.",
          "items": { "type": "string" }
        }
      },
      "required": ["deviceId", "sites", "operators"]
    },
    "WattboxWebsitesConfigSet": {
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "The Wattbox's Device ID"
        }
      },
      "required": ["deviceId"]
    },
    "WirelessProfileSchedulesCreateRequest": {
      "properties": {
        "wirelessProfileId": {
          "type": "string",
          "description": "Database GUID of parent wireless profile"
        },
        "items": {
          "type": "array",
          "description": "Array of wireless profile schedules to create",
          "items": {
            "type": "object",
            "properties": {
              "scheduleName": {
                "type": "string",
                "description": "Name of the wireless schedule"
              },
              "isEnabled": {
                "type": "boolean",
                "description": "Is this wireless schedule enabled at the root level."
              },
              "timezone": {
                "type": "string",
                "description": "The timezone this wireless schedule is set for."
              },
              "weekdays": {
                "type": "object",
                "description": "Object containing schedule data for weekdays.",
                "properties": {
                  "isEnabled": {
                    "type": "boolean",
                    "description": "Is the weekdays schedule enabled."
                  },
                  "pauseTime": {
                    "type": "number",
                    "description": "The hour/minute in which this schedule should pause."
                  },
                  "resumeTime": {
                    "type": "number",
                    "description": "The hour/minute in which this schedule should resume."
                  },
                  "days": {
                    "type": "object",
                    "description": "Object that determines which days of the week this schedule applies to.",
                    "properties": {
                      "sunday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "monday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "tuesday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "wednesday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "thursday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "friday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "saturday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      }
                    },
                    "required": [
                      "sunday",
                      "monday",
                      "tuesday",
                      "wednesday",
                      "thursday",
                      "friday",
                      "saturday"
                    ]
                  }
                },
                "required": ["isEnabled", "pauseTime", "resumeTime", "days"]
              },
              "weekends": {
                "type": "object",
                "description": "Object containing schedule data for weekends.",
                "properties": {
                  "isEnabled": {
                    "type": "boolean",
                    "description": "Is the weekends schedule enabled."
                  },
                  "pauseTime": {
                    "type": "number",
                    "description": "The hour/minute in which this schedule should pause."
                  },
                  "resumeTime": {
                    "type": "number",
                    "description": "The hour/minute in which this schedule should resume."
                  },
                  "days": {
                    "type": "object",
                    "description": "Object that determines which days of the week this schedule applies to.",
                    "properties": {
                      "sunday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "monday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "tuesday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "wednesday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "thursday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "friday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "saturday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      }
                    },
                    "required": [
                      "sunday",
                      "monday",
                      "tuesday",
                      "wednesday",
                      "thursday",
                      "friday",
                      "saturday"
                    ]
                  }
                },
                "required": ["isEnabled", "pauseTime", "resumeTime", "days"]
              }
            },
            "required": [
              "scheduleName",
              "isEnabled",
              "timezone",
              "weekdays",
              "weekends"
            ]
          }
        }
      },
      "required": ["wirelessProfileId", "items"]
    },
    "WirelessProfileSchedulesCreate": {
      "properties": {
        "ids": {
          "type": "array",
          "description": "Array of database GUIDs for the wireless profile schedules that were created.",
          "items": { "type": "object" }
        }
      },
      "required": ["ids"]
    },
    "WirelessProfileSchedulesDeleteRequest": {
      "properties": {
        "ids": {
          "type": "array",
          "description": "Array of wirelessScheduleIds to be deleted",
          "items": { "type": "string" }
        }
      },
      "required": ["ids"]
    },
    "WirelessProfileSchedulesReadRequest": {
      "properties": {
        "wirelessProfileId": {
          "type": "string",
          "description": "The wireless profile id to find wireless schedules for."
        }
      },
      "required": ["wirelessProfileId"]
    },
    "WirelessProfileSchedulesRead": {
      "properties": {
        "items": {
          "type": "array",
          "description": "Array of wireless profile schedules found",
          "items": {
            "type": "object",
            "properties": {
              "wirelessScheduleId": {
                "type": "string",
                "description": "Database GUID of the wireless profile schedule to update"
              },
              "wirelessProfileId": {
                "type": "string",
                "description": "The parent wireless profile id for this wireless schedule."
              },
              "customerId": {
                "type": "string",
                "description": "The parent customer this wireless schedule belongs to."
              },
              "companyId": {
                "type": "string",
                "description": "The parent company this wireless schedule belongs to."
              },
              "userId": {
                "type": "string",
                "description": "The user which created this resource originally."
              },
              "scheduleName": {
                "type": "string",
                "description": "Name of the wireless profile schedule"
              },
              "isEnabled": {
                "type": "boolean",
                "description": "Is this wireless schedule enabled at the root level."
              },
              "timezone": {
                "type": "string",
                "description": "The timezone this wireless schedule is set for."
              },
              "weekdays": {
                "type": "object",
                "description": "Object containing schedule data for weekdays.",
                "properties": {
                  "isEnabled": {
                    "type": "boolean",
                    "description": "Is the weekdays schedule enabled."
                  },
                  "pauseTime": {
                    "type": "number",
                    "description": "The hour/minute in which this schedule should pause."
                  },
                  "resumeTime": {
                    "type": "number",
                    "description": "The hour/minute in which this schedule should resume."
                  },
                  "days": {
                    "type": "object",
                    "description": "Object that determines which days of the week this schedule applies to.",
                    "properties": {
                      "sunday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "monday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "tuesday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "wednesday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "thursday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "friday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "saturday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      }
                    },
                    "required": [
                      "sunday",
                      "monday",
                      "tuesday",
                      "wednesday",
                      "thursday",
                      "friday",
                      "saturday"
                    ]
                  }
                },
                "required": ["isEnabled", "pauseTime", "resumeTime", "days"]
              },
              "weekends": {
                "type": "object",
                "description": "Object containing schedule data for weekends.",
                "properties": {
                  "isEnabled": {
                    "type": "boolean",
                    "description": "Is the weekends schedule enabled."
                  },
                  "pauseTime": {
                    "type": "number",
                    "description": "The hour/minute in which this schedule should pause."
                  },
                  "resumeTime": {
                    "type": "number",
                    "description": "The hour/minute in which this schedule should resume."
                  },
                  "days": {
                    "type": "object",
                    "description": "Object that determines which days of the week this schedule applies to.",
                    "properties": {
                      "sunday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "monday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "tuesday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "wednesday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "thursday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "friday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "saturday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      }
                    },
                    "required": [
                      "sunday",
                      "monday",
                      "tuesday",
                      "wednesday",
                      "thursday",
                      "friday",
                      "saturday"
                    ]
                  }
                },
                "required": ["isEnabled", "pauseTime", "resumeTime", "days"]
              }
            },
            "required": [
              "wirelessScheduleId",
              "wirelessProfileId",
              "customerId",
              "companyId",
              "userId",
              "scheduleName",
              "isEnabled",
              "timezone",
              "weekdays",
              "weekends"
            ]
          }
        }
      },
      "required": ["items"]
    },
    "WirelessProfileSchedulesUpdateRequest": {
      "properties": {
        "items": {
          "type": "array",
          "description": "Array of wireless profile schedules to update",
          "items": {
            "type": "object",
            "properties": {
              "wirelessScheduleId": {
                "type": "string",
                "description": "Database GUID of the wireless profile schedule to update"
              },
              "scheduleName": {
                "type": "string",
                "description": "Name of the wireless profile schedule"
              },
              "isEnabled": {
                "type": "boolean",
                "description": "Is this wireless schedule enabled at the root level."
              },
              "timezone": {
                "type": "string",
                "description": "The timezone this wireless schedule is set for."
              },
              "weekdays": {
                "type": "object",
                "description": "Object containing schedule data for weekdays.",
                "properties": {
                  "isEnabled": {
                    "type": "boolean",
                    "description": "Is the weekdays schedule enabled."
                  },
                  "pauseTime": {
                    "type": "number",
                    "description": "The hour/minute in which this schedule should pause."
                  },
                  "resumeTime": {
                    "type": "number",
                    "description": "The hour/minute in which this schedule should resume."
                  },
                  "days": {
                    "type": "object",
                    "description": "Object that determines which days of the week this schedule applies to.",
                    "properties": {
                      "sunday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "monday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "tuesday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "wednesday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "thursday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "friday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "saturday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      }
                    },
                    "required": [
                      "sunday",
                      "monday",
                      "tuesday",
                      "wednesday",
                      "thursday",
                      "friday",
                      "saturday"
                    ]
                  }
                },
                "required": ["isEnabled", "pauseTime", "resumeTime", "days"]
              },
              "weekends": {
                "type": "object",
                "description": "Object containing schedule data for weekends.",
                "properties": {
                  "isEnabled": {
                    "type": "boolean",
                    "description": "Is the weekends schedule enabled."
                  },
                  "pauseTime": {
                    "type": "number",
                    "description": "The hour/minute in which this schedule should pause."
                  },
                  "resumeTime": {
                    "type": "number",
                    "description": "The hour/minute in which this schedule should resume."
                  },
                  "days": {
                    "type": "object",
                    "description": "Object that determines which days of the week this schedule applies to.",
                    "properties": {
                      "sunday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "monday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "tuesday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "wednesday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "thursday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "friday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      },
                      "saturday": {
                        "type": "boolean",
                        "description": "Bool to determine if the schedule applies to this day."
                      }
                    },
                    "required": [
                      "sunday",
                      "monday",
                      "tuesday",
                      "wednesday",
                      "thursday",
                      "friday",
                      "saturday"
                    ]
                  }
                },
                "required": ["isEnabled", "pauseTime", "resumeTime", "days"]
              }
            },
            "required": [
              "wirelessScheduleId",
              "scheduleName",
              "isEnabled",
              "timezone",
              "weekdays",
              "weekends"
            ]
          }
        }
      },
      "required": ["items"]
    },
    "WirelessProfileSchedulesUpdate": {
      "properties": {
        "ids": {
          "type": "array",
          "description": "Array of database GUIDs for the wireless profile schedules that were updated.",
          "items": { "type": "object" }
        }
      },
      "required": ["ids"]
    },
    "WirelessProfilesCreateRequest": {
      "properties": {
        "customerId": {
          "type": "string",
          "description": "Database GUID of parent customer"
        },
        "items": {
          "type": "array",
          "description": "Slice of wireless profiles",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the customer"
              },
              "devices": {
                "type": "array",
                "description": "Slice of devices for wireless profile",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of device"
                    },
                    "macAddress": {
                      "type": "string",
                      "description": "Mac address of device"
                    },
                    "os": { "type": "string", "description": "OS of device" },
                    "manufacturer": {
                      "type": "string",
                      "description": "Manufacturer of device"
                    }
                  },
                  "required": ["name", "macAddress", "os", "manufacturer"]
                }
              }
            },
            "required": ["name", "devices"]
          }
        }
      },
      "required": ["customerId", "items"]
    },
    "WirelessProfilesDeleteRequest": {
      "properties": {
        "ids": {
          "type": "array",
          "description": "Array of wirelessProfileIds to be deleted",
          "items": { "type": "string" }
        }
      },
      "required": ["ids"]
    },
    "WirelessProfilesReadRequest": {
      "properties": {
        "customerID": {
          "type": "string",
          "description": "Customer ID of the Wireless Profiles you'd like to see."
        }
      },
      "required": ["customerID"]
    },
    "WirelessProfilesRead": {
      "properties": {
        "wirelessProfileId": {
          "type": "string",
          "description": "Wireless Profile ID."
        },
        "name": {
          "type": "string",
          "description": "Name of the wireless profile"
        },
        "status": {
          "enum": ["PAUSED", "RESUMED"],
          "type": "string",
          "description": "Indicates if profile is currently PAUSED or RESUMED"
        },
        "devices": {
          "type": "array",
          "description": "Slice of devices for wireless profile",
          "items": {
            "type": "object",
            "properties": {
              "name": { "type": "string", "description": "Name of device" },
              "macAddress": {
                "type": "string",
                "description": "Mac address of device"
              },
              "os": { "type": "string", "description": "OS of device" },
              "manufacturer": {
                "type": "string",
                "description": "Manufacturer of device"
              }
            },
            "required": ["name", "macAddress", "os", "manufacturer"]
          }
        },
        "nextUp": {
          "type": "object",
          "description": "Object indicating next action for wireless profile",
          "properties": {
            "nextRun": {
              "type": "string",
              "description": "Indicates next run time"
            },
            "action": {
              "type": "string",
              "description": "Indicates next run action"
            },
            "nextRunDisplay": {
              "type": "string",
              "description": "User-friendly format of next run time"
            }
          },
          "required": ["nextRun", "action", "nextRunDisplay"]
        }
      },
      "required": ["wirelessProfileId", "name", "status", "devices", "nextUp"]
    },
    "WirelessProfilesUpdateRequest": {
      "properties": {
        "customerId": {
          "type": "string",
          "description": "Database GUID of parent customer"
        },
        "items": {
          "type": "array",
          "description": "Slice of wireless profiles",
          "items": {
            "type": "object",
            "properties": {
              "wirelessProfileId": {
                "type": "string",
                "description": "Database GUID of profile to update"
              },
              "name": {
                "type": "string",
                "description": "Name of the customer"
              },
              "devices": {
                "type": "array",
                "description": "Slice of devices for wireless profile",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of device"
                    },
                    "macAddress": {
                      "type": "string",
                      "description": "Mac address of device"
                    },
                    "os": { "type": "string", "description": "OS of device" },
                    "manufacturer": {
                      "type": "string",
                      "description": "Manufacturer of device"
                    }
                  }
                }
              }
            },
            "required": ["wirelessProfileId"]
          }
        }
      },
      "required": ["customerId", "items"]
    }
  }
}
